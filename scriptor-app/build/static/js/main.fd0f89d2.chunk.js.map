{"version":3,"sources":["assets/Sabeel.png","assets/Raghavan.png","assets/Kelvin.png","assets/Subhash.png","assets/Amithab.png","assets/Nikhil.png","assets/Pranav.png","assets/Ayush.png","assets/David.png","assets/Shuu.png","assets/Som.png","assets/ScriptorLogo.jpg","assets/starOff.png","assets/starOn.png","api/utils.js","api/APIClient.js","components/Signup.js","components/Login.js","components/Navbar.js","components/Search.js","Home.js","About.js","components/Changepass.js","User.js","History.js","components/FavResult.js","Favorites.js","PodcastPage.js","components/ResSearch.js","Results.js","Forgotpass.js","Transcript.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","querystring","query","arguments","length","undefined","qs","Object","entries","filter","pair","map","i","encodeURIComponent","join","api_APIClient","APIClient","classCallCheck","this","state","authToken","localStorage","getItem","callbacks","cb","push","message","setItem","removeItem","getAuthToken","isCurrentUserLoggedIn","Authorization","Content-Type","_this","Promise","resolve","reject","fetch","headers","_getRequestHeaders","then","response","json","success","current_user","error","email","password","_this2","method","body","JSON","stringify","setAuthToken","auth_token","notifyCallbacks","type","action","clearAuthToken","_this3","existingPassword","newPassword","_this4","existing_password","new_password","userEmail","_this5","passwordToken","_this6","password_token","podcastId","blobId","_this7","_this8","has_favorited_podcast","_this9","_this10","favorites","_this11","history","_this12","text_query","filters","_this13","url_query","q","queryString","results","_this14","_this15","_this16","_this17","_this18","podcast","podcast_blob","_this19","_this20","sentence_split","Signup","pass","verify","change","e","setState","defineProperty","target","name","value","preventDefault","document","getElementById","style","color","innerHTML","marginTop","validateEmail","register","window","location","reload","catch","test","react_default","a","createElement","className","id","onChange","onClick","onSubmit","Component","Login","login","href","Navbar","possibleConstructorReturn","getPrototypeOf","call","addCallback","msg","authAction","route","assign","logout","toast","loggedin","logout_buttons","reactjs_popup_es","trigger","modal","contentStyle","height","width","closeOnDocumentClick","close","components_Login","components_Signup","redirect","login_buttons","position","on","mouseLeaveDelay","mouseEnterDelay","padding","border","arrow","Search","department","course","professor","quarter","showFilters","departments","courses","quarters","professors","course_codes","depExists","course_numbers","updateFilters","handleEnter","key","console","log","props","pathname","search","dep","hasOwnProperty","toUpperCase","searchProfessors","searchQuarters","searchDepartments","getAllCourseCodes","course_to_codes","split","trim","sort","b","autoComplete","list","onKeyDown","item","index","checkDepExists","disabled","placeholder","withRouter","Home","components_Search","About","src","Logo","alt","Subhash","Sabeel","Nikhil","Ayush","Kelvin","Pranav","Amithab","Raghavan","Som","Shuu","David","Changepass","oldpass","newpass","changePassword","User","components_Changepass","History","queries","podcasts","element","search_query","areObjectsEqual","search_filters","getHistory","forEach","doesSearchQueryExistInHistory","prevState","concat","toConsumableArray","doesPodcastExistInHistory","clearHistory","fontSize","list-style","react_router_dom","to","getSearchQueryURL","getSearchTitle","getPodcastURL","formatName","onClear","renderSearchHistory","renderPodcastHistory","video_url","audio_url","qString","substr","prof","substring","indexOf","course_num","title","section_id","lecture_num","o1","o2","k","url","dept","filterNames","keys","filtered_str","numFilters","currentfilterIdx","filterVal","blob_id","FavResult","isFav","handleClick","bind","assertThisInitialized","newFav","addFavoritePodcastById","favorite_podcast","favorite_blob","removeFavoritePodcastById","getFavoritePodcasts","isPodcastInList","formatTitle","starOn","starOff","fulltitle","coursename","Favorites","components_FavResult","PodcastPage","values","parse","isFavorited","mainurl","starting_timestamp_second","transcription_blob","checkFavoritePodcast","backgroundColor","performance","navigation","getPodcastSnippet","res","ucsd_podcast_video_url","ucsd_podcast_audio_url","controls","autoPlay","formatVideoLink","formatRelevantText","relocate","ResSearch","noResponse","Results","searchPodcasts","getPodcastMetadata","podcast_id","back","timeStamp","Math","floor","slice","vidUrl","result","description","blurb","timestamp","podcastPage","components_ResSearch","Forgotpass","sentVerificationEmail","sendPasswordTokenEmail","err","setNewPassword","required","onResetPasswordFormSubmit","onEmailFormSubmit","getForm","Transcript","transcript","getPodcastTranscript","transcript_sections","NotFound","submit","App","components_Navbar","react_router","exact","path","component","Boolean","hostname","match","configure","autoClose","draggable","closeButton","draggablePercent","progressClassName","top","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd0f89d2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sabeel.8bad89e5.png\";","module.exports = __webpack_public_path__ + \"static/media/Raghavan.6309c087.png\";","module.exports = __webpack_public_path__ + \"static/media/Kelvin.9cdaa2b9.png\";","module.exports = __webpack_public_path__ + \"static/media/Subhash.31ee9661.png\";","module.exports = __webpack_public_path__ + \"static/media/Amithab.d7836891.png\";","module.exports = __webpack_public_path__ + \"static/media/Nikhil.9a9562ef.png\";","module.exports = __webpack_public_path__ + \"static/media/Pranav.5310381d.png\";","module.exports = __webpack_public_path__ + \"static/media/Ayush.86aa5df8.png\";","module.exports = __webpack_public_path__ + \"static/media/David.b3506a21.png\";","module.exports = __webpack_public_path__ + \"static/media/Shuu.8ed332db.png\";","module.exports = __webpack_public_path__ + \"static/media/Som.25a042f5.png\";","module.exports = __webpack_public_path__ + \"static/media/ScriptorLogo.0c85894f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/starOff.1668d9ae.png\";","module.exports = __webpack_public_path__ + \"static/media/starOn.298685c0.png\";","// Helper function to convert a json to a URL query string\nfunction querystring(query = {}) {\n    // get array of key value pairs ([[k1, v1], [k2, v2]])\n    const qs = Object.entries(query)\n    // filter pairs with undefined value\n        .filter(pair => pair[1] !== undefined)\n        // encode keys and values, remove the value if it is null, but leave the key\n        .map(pair => pair.filter(i => i !== null).map(encodeURIComponent).join('='))\n        .join('&');\n\n    return qs && '?' + qs;\n}\n\nexport default querystring;","import querystring from \"./utils\";\n\nclass APIClient {\n    constructor() {\n        this.state = {\n            authToken: localStorage.getItem(\"authToken\")\n        };\n        this.callbacks = [];\n    }\n\n    addCallback(cb) {\n        this.callbacks.push(cb);\n    }\n\n    notifyCallbacks(message) {\n        for (var i = 0; i < this.callbacks.length; i++) {\n            this.callbacks[i](message);\n        }\n    }\n\n    setAuthToken(authToken) {\n        localStorage.setItem(\"authToken\", authToken);\n        this.state.authToken = authToken;\n    }\n\n    clearAuthToken() {\n        this.state.authToken = null;\n        localStorage.removeItem(\"authToken\")\n    }\n\n    getAuthToken() {\n        return this.state.authToken;\n    }\n\n    isCurrentUserLoggedIn() {\n        return this.getAuthToken() != null;\n    }\n\n    _getRequestHeaders() {\n        if (!this.isCurrentUserLoggedIn())\n            return {'Content-Type': 'application/json'};\n        else\n            return {\"Authorization\": \"Bearer \" + this.getAuthToken(), 'Content-Type': 'application/json'}\n    }\n\n    /** User-based functions **/\n    getCurrentUser() {\n        if (!this.isCurrentUserLoggedIn())\n            return null;\n\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/me/\", {headers: this._getRequestHeaders()}).then(response => response.json()).then((response) => {\n                if (response.success)\n                    resolve(response.current_user);\n                else\n                    reject(response.error);\n            })\n        });\n    }\n\n    // Implemented\n    login(email, password) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/login/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": email, \"password\": password})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        this.setAuthToken(response.auth_token);\n                        this.notifyCallbacks({type: \"auth\", action: \"login\"});\n                        resolve(response.auth_token);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    logout() {\n        this.clearAuthToken();\n        this.notifyCallbacks({type: \"auth\", action: \"logout\"});\n    }\n\n    // Implemented\n    register(email, password) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/register/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": email, \"password\": password})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        this.setAuthToken(response.auth_token);\n                        this.notifyCallbacks({type: \"auth\", action: \"login\"});\n                        resolve(response.auth_token);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    changePassword(existingPassword, newPassword) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/change_password/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"existing_password\": existingPassword, \"new_password\": newPassword})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    sendPasswordTokenEmail(userEmail) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/send_password_recovery_email/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": userEmail})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    setNewPassword(userEmail, newPassword, passwordToken) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/set_new_password/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": userEmail, \"password_token\": passwordToken, \"new_password\": newPassword})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    addFavoritePodcastById(podcastId, blobId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\" + podcastId + \"/\" + blobId + \"/add/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    checkFavoritePodcast(podcastId, blobId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\" + podcastId + \"/\" + blobId + \"/check/\", {\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.has_favorited_podcast);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    removeFavoritePodcastById(podcastId, blobId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\" + podcastId + \"/\" + blobId + \"/remove/\", {\n                method: 'DELETE',\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getFavoritePodcasts() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.favorites);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getHistory() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/history/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.history);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    clearHistory() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/history/clear/\", {\n                method: \"DELETE\",\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n\n    /** Search-based functions **/\n    // Implemented unfiltered search to toast\n    searchPodcasts(text_query, filters) {\n        var url_query = filters;\n        url_query.q = text_query;\n        var queryString = querystring(url_query);\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/podcasts/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    /* Auxiliary search methods for input autocomplete */\n    searchDepartments(query) {\n        var queryString = querystring({q: query});\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/departments/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getAllCourseCodes() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/get_all_course_codes/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    searchProfessors(query) {\n        var queryString = querystring({q: query});\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/professors/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    searchQuarters(query) {\n        var queryString = querystring({q: query});\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/quarters/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    /** Podcast-based functions **/\n    getPodcastSnippet(blobId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/podcasts/blobs/\" + blobId + \"/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve({podcast: response.podcast, podcast_blob: response.podcast_blob});\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getPodcastMetadata(podcastId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/podcasts/\" + podcastId + \"/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.podcast);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getPodcastTranscript(podcastId, sentence_split = 5) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/podcasts/\" + podcastId + \"/transcript/?sentence_split=\" + sentence_split,\n                {\n                    headers: this._getRequestHeaders(),\n                }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n}\n\nexport default new APIClient();","import React, {Component} from 'react';\nimport APIClient from \"../api/APIClient\";\nimport './_Components.css';\n\nclass Signup extends Component {\n    state = {\n        email: '',\n        pass: '',\n        verify: ''\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        document.getElementById('emailInput').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailError').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailError').innerHTML = \"\";\n        document.getElementById('verifyInput').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('passInput').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('passNoMatch').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('passNoMatch').innerHTML = \"\";\n        document.getElementById('passTitle').style.marginTop = \"75px\";\n        document.getElementById('confirmTitle').style.marginTop = \"75px\";\n        document.getElementById('signButton').style.marginTop = \"75px\";\n\n\n        // Check if the email is in \"email format\" ___@___.___\n        if(!this.validateEmail(this.state.email)) {\n          document.getElementById('emailInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('emailError').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('emailError').innerHTML = \"Please enter a valid email.\";\n          document.getElementById('passTitle').style.marginTop = \"35px\";\n          return;\n        }\n\n        // Checks if password and verify password match\n        if(this.state.pass !== this.state.verify) {\n          document.getElementById('verifyInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').innerHTML = \"Passwords do not match.\";\n          document.getElementById('signButton').style.marginTop = \"35px\";\n          return;\n        }\n        \n        if (this.state.pass.length < 4) {\n          document.getElementById('verifyInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').innerHTML = \"Password must be at least 4 characters.\"\n          document.getElementById('signButton').style.marginTop = \"35px\";\n          return;\n        }\n\n        APIClient.register(this.state.email, this.state.pass).then((authToken) => {\n            window.location.reload();\n        }).catch(e => {\n            document.getElementById('emailInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailError').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailError').innerHTML = \"Account already exists.\";\n            document.getElementById('passTitle').style.marginTop = \"35px\";\n        });\n    }\n\n    validateEmail(email) {\n        var re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n      }\n\n    render(){\n        return(\n            <div className='navpop'>\n                <div className='header'>\n                    <h1>SIGN UP</h1>\n                    <br></br>\n                    <h2>Create an account below</h2>\n                </div>\n\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field' id=\"emailInput\">\n                        <p>Email</p>\n                        <br></br>\n                        <input \n                        type = 'text'\n                        className ='searchbar' \n                        name = 'email'\n                        value = {this.state.email} \n                        onChange={e => this.change(e)} />\n                        <p id='emailError'></p>\n                    </div>\n\n                    <div className='field' id=\"passInput\">\n                        <p id='passTitle' style={{marginTop: '75px'}}>Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'pass'\n                        value = {this.state.pass} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <div className='field' id=\"verifyInput\">\n                        <p id='confirmTitle' style={{marginTop: '75px'}}>Password Confirmation</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'verify'\n                        value = {this.state.verify} \n                        onChange={e => this.change(e)} />\n                        <p id='passNoMatch'></p>\n                    </div>\n\n                    <button id='signButton' className='center' onClick={e => this.onSubmit(e)}>SIGN UP</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Signup;","import React, {Component} from 'react';\nimport './_Components.css';\nimport APIClient from \"../api/APIClient.js\";\n\nclass Login extends Component {\n    state = {\n        email: '',\n        pass: '',\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n        document.getElementById('emailLogin').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailLoginError').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailLoginError').innerHTML = \"\";\n        document.getElementById('invalidLogin').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('invalidLoginError').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('invalidLoginError').innerHTML = \"\";\n        document.getElementById('titulo').style.marginTop = \"75px\";\n        document.getElementById('loginConfirm').style.marginTop = \"75px\";\n\n        if(!this.validateEmail(this.state.email)) {\n            document.getElementById('emailLogin').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailLoginError').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailLoginError').innerHTML = \"Please enter a valid email.\";\n            document.getElementById('titulo').style.marginTop = \"35px\";\n            return;\n        }\n\n        APIClient.login(this.state.email, this.state.pass).then((authToken) => {\n            window.location.reload();\n        }).catch(e => {\n            document.getElementById('invalidLogin').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('invalidLoginError').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('invalidLoginError').innerHTML = \"Invalid username or password.\";\n            document.getElementById('loginConfirm').style.marginTop = \"35px\";\n            // @David\n        });\n    }\n\n    validateEmail(email) {\n        var re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n    }\n\n    render(){\n        return(\n            <div className='navpop'>\n                <div className='header'>\n                    <h1>LOG IN</h1>\n                    <br></br>\n                    <h2>Enter your details below</h2>\n                </div>\n\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field' id='emailLogin'>\n                        <p>Email</p>\n                        <br></br>\n                        <input \n                        type = 'text'\n                        className ='searchbar' \n                        name = 'email'\n                        value = {this.state.email} \n                        onChange={e => this.change(e)} />\n                        <p id='emailLoginError'></p>\n                    </div>\n\n                    <div className='field' id='invalidLogin'>\n                        <p style={{marginTop: '75px'}} id='titulo'>Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'pass'\n                        value = {this.state.pass} \n                        onChange={e => this.change(e)} />\n                        <p id='invalidLoginError'></p>\n                    </div>\n\n                    <button id='loginConfirm' className='center' onClick={e => this.onSubmit(e)}>LOG IN</button>\n                </form>\n                <a href='/forgot_password'>Forgot your password?</a>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React, {Component} from 'react';\nimport Popup from 'reactjs-popup';\nimport Signup from './Signup.js';\nimport Login from './Login.js';\nimport './_Components.css';\nimport APIClient from \"../api/APIClient.js\";\nimport {toast} from 'react-toastify';\n\n\nclass Navbar extends Component {\n\n    constructor() {\n        super();\n        APIClient.addCallback((msg) => {\n            if (msg.type === \"auth\") {\n                // trigger a re-render\n                this.setState({authAction: msg.action});\n            }\n        });\n    }\n\n    redirect(e, route) {\n        e.preventDefault();\n        window.location.assign(route);\n    }\n\n    logout(e) {\n        e.preventDefault();\n        APIClient.logout();\n        toast(\"Logged Out\", {className: 'popup'});\n        window.location.reload();\n    }\n\n    render() {\n        // Render login navbar based on login\n        const loggedin = APIClient.isCurrentUserLoggedIn();\n\n        let logout_buttons =\n            <div>\n                <Popup trigger={<li>\n                    <button>LOG IN</button>\n                </li>} modal contentStyle={{height: '700px', width: '500px'}} closeOnDocumentClick>\n                    {close => (\n                        <div>\n                            <Login/>\n                            <button className='close close1' onClick={close}>\n                                &times;\n                            </button>\n                        </div>\n                    )}</Popup>\n                <Popup trigger={<li>\n                    <button>SIGN UP</button>\n                </li>} modal contentStyle={{height: '700px', width: '500px'}} closeOnDocumentClick>\n                    {close => (\n                        <div>\n                            <Signup/>\n                            <button className='close close2' onClick={close}>\n                                &times;\n                            </button>\n                        </div>\n                    )}</Popup>\n                <li>\n                    <button onClick={e => this.redirect(e, '/about')}>ABOUT</button>\n                </li>\n            </div>;\n\n        let login_buttons =\n            <div>\n                <Popup trigger={<li>\n                    <button className='dropper'>MY ACCOUNT</button>\n                </li>} position=\"bottom center\" on=\"hover\" closeOnDocumentClick mouseLeaveDelay={0} mouseEnterDelay={0}\n                       contentStyle={{padding: '0px', border: 'none'}}\n                       arrow={false}>\n                    <div className='dropdown'>\n                        <button onClick={e => this.redirect(e, '/history')}>HISTORY</button>\n                        <button onClick={e => this.redirect(e, '/favorites')}>FAVORITES</button>\n                        <button onClick={e => this.redirect(e, '/user')}>SETTINGS</button>\n                        <button onClick={e => this.logout(e)}>LOG OUT</button>\n                    </div>\n                </Popup>\n                <li>\n                    <button onClick={e => this.redirect(e, '/about')}>ABOUT</button>\n                </li>\n            </div>;\n\n        return (\n            <div className='navbar'>\n                <button className='logo' onClick={e => this.redirect(e, '/')}>SCRIPTOR</button>\n                <ul className='outer'>\n                    {loggedin ? login_buttons : logout_buttons}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n","import React, {Component} from 'react';\nimport './_Components.css';\nimport { withRouter } from 'react-router-dom';\nimport APIClient from \"../api/APIClient.js\";\nimport { toast } from 'react-toastify';\n\n\nclass Search extends Component {\n    state = {\n        query: '',\n        department: '',\n        course: '',\n        professor: '',\n        quarter: '',\n        showFilters: false,\n        results: [],\n        departments: [],\n        courses: [],\n        quarters: [],\n        professors: [],\n        course_codes: {},\n        depExists: false,\n        course_numbers: []\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value}, this.updateFilters);\n    }\n\n    \n    updateFilters() {\n        if(this.state.query.length > 0 || (this.state.department.length > 0 || this.state.course.length > 0\n        || this.state.professor.length > 0 || this.state.quarter.length > 0)) {\n            this.setState({showFilters: true});\n        } else {\n            this.setState({showFilters: false});\n        }\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.query.length);\n        if(this.state.query.length === 0){\n            document.getElementById('noResults').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('noResults').innerHTML = \"Please enter a query.\";\n            return;\n       }\n        this.props.history.push({\n        pathname: '/results',\n        search:\n            \"?query=\" + this.state.query\n            + \"&department=\" + this.state.department\n            + \"&course=\" + this.state.course\n            + \"&professor=\" + this.state.professor\n            + \"&quarter=\" + this.state.quarter,\n                    \n        state: {query: this.state.query, department: this.state.department, course: this.state.course, professor: this.state.professor, quarter: this.state.quarter}\n        })\n    }\n                   \n    \n    handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            toast(\"Press the Search Button\", {className: 'popup'});\n         }\n    }\n\n    checkDepExists(dep){\n        if(this.state.course_codes.hasOwnProperty(dep.toUpperCase())){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    componentDidMount(){\n        APIClient.searchProfessors(\"\").then(response => {\n            this.setState({professors: response})\n            }  \n       );\n        APIClient.searchQuarters(\"\").then(response => {\n            this.setState({quarters: response})\n            }  \n       );\n        APIClient.searchDepartments(\"\").then(response => {\n            this.setState({departments: response})\n            }  \n       );\n        APIClient.getAllCourseCodes().then(response => {\n            var course_to_codes = {};\n            for (var i = 0; i < response.length; i++) {\n                 var split = response[i].split(' ');\n                 if(!course_to_codes.hasOwnProperty(split[0])){\n                 course_to_codes[split[0].trim()] = [split[1].trim()];\n             }else{\n               course_to_codes[split[0].trim()].push(split[1].trim());\n               course_to_codes[split[0].trim()].sort(function(a, b){return a-b});\n             }\n            }\n            this.setState({course_codes: course_to_codes}) \n            }\n        )\n    }\n\n    render() {      \n        var course = this.state.course;\n        var course_numbers = [];   \n        let filters;\n        if(this.state.showFilters) {\n            filters = \n                <div className='filters'>\n                    <div className='filterinputs'>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='filterbar' \n                            name = 'department'\n                            list = \"department\"\n                            value = {this.state.department} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"department\">\n                            {this.state.departments.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ={!this.checkDepExists(this.state.department)  ? 'course_number' : 'course_number_active'}\n                            name = 'course'\n                            list = 'course_number'\n                            value={this.state.department === \"\" ? course = \"\": course}\n                            disabled = {!this.checkDepExists(this.state.department) ? true : false}\n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                        <datalist id=\"course_number\">\n                        {this.checkDepExists(this.state.department) ? course_numbers = this.state.course_codes[this.state.department.toUpperCase()] : course_numbers = [] }\n                         {course_numbers.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input\n                            autoComplete = 'off'                    \n                            type = 'text'\n                            className ='filterbar' \n                            name = 'professor'\n                            value = {this.state.professor} \n                            list = 'professor'\n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} \n                            />\n                        <datalist id=\"professor\">\n                            {this.state.professors.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='filterbar' \n                            name = 'quarter'\n                            list = 'quarter'\n                            value = {this.state.quarter} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                         <datalist id=\"quarter\">\n                            {this.state.quarters.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                    </div>\n                    <p style={{marginTop: '5px'}}>Department</p>\n                    <p>Course Number</p>\n                    <p>Professor</p>\n                    <p>Quarter</p>       \n                </div>\n        } else {\n            filters = null;\n        }\n\n        return (\n            <div className={this.state.showFilters ? 'searchform active' : 'searchform'}>\n                <form className='col-xs-1 text-center'>\n                    <h1 className='title'>SCRIPTOR</h1>\n                    <input \n                    type = 'text'\n                    className ='searchbar' \n                    name = 'query'\n                    placeholder = 'What do you want to learn?'\n                    value = {this.state.query} \n                    onChange={e => this.change(e)} />\n                    <p id='noResults'></p>\n                    {filters}\n                    <button className='center' onClick={e => this.onSubmit(e)}>Search</button>\n                </form> \n            </div>\n        )\n    }\n}\n\nexport default withRouter(Search);","import React from 'react';\nimport Search from './components/Search.js';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div>\n      <div className=\"parent\">\n        <Search />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport './About.css';\nimport Sabeel from './assets/Sabeel.png';\nimport Raghavan from './assets/Raghavan.png';\nimport Kelvin from './assets/Kelvin.png';\nimport Subhash from './assets/Subhash.png';\nimport Amithab from './assets/Amithab.png';\nimport Nikhil from './assets/Nikhil.png';\nimport Pranav from './assets/Pranav.png';\nimport Ayush from './assets/Ayush.png';\nimport David from './assets/David.png';\nimport Shuu from './assets/Shuu.png';\nimport Som from './assets/Som.png';\nimport Logo from './assets/ScriptorLogo.jpg';\n\n\nfunction About() {\n  return (\n    <div className='about'>\n\t  \n\t  <h1>ABOUT US</h1>\n\t  \n\t  <div className='statement'>\n\t  \t<h3><u>Who are we?</u></h3>\n\t  \t<p style={{color: 'rgba(72,136,163,.93)'}}>Scriptor is developed and maintained by eleven undergraduates at the University of California, San \n\t\t\t  Diego. Each of us is on a pursuit of revolution - revolution against all that is improper, all that is impractical,\n\t\t\t  and all that is impossible. Our collective goals are simple: to better our world, to provide for our\n\t\t\t  community, and to strive to be the best individuals we can be. And so, with this pursuit in our hearts and with \n\t\t\t  these goals in our minds, we bring forth Scriptor.\n\t\t  </p>\n\t  \t<h3><u>About Scriptor</u></h3>\n\t  \t<p style={{color: 'rgba(72,136,163,.93)'}}>Scriptor is our solution for streamlining studying and reviewing at the University of California,\n\t\t  San Diego. No longer do students have to manually search for specific information in the vast collection of knowledge that is the UC San Diego Podcast System; \n\t\t  rather, with Scriptor, they can simply search for the information they desire and be presented with the exact material they want. Scriptor connects users \n\t\t  with precise timestamps in podcasts that match the information they seek, efficiently parsing through the vast database of podcasts so students don't have to. \n\t\t  So, leave the searching to us and focus on learning. Happy podcasting!</p>\n\t  </div>\n\n\t  <div className='groupPhoto'>\t\n\t  \t<img src={Logo}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  </div>\n\n\t  <div className='team'> \n\t  <h1>MEET THE TEAM</h1>\n\t  </div>\n\n\t  <div className='teamList'>\n\t  \t<div className='teamRow1'>\n\t  \t<img className='profile' src={Subhash}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Subhash Ramesh</p>\n\t  \t<p className='description'>Software Architect</p>\n\t  \t</div>\n\n\t\t<div className='teamRow1'>\n\t  \t<img className='profile' src={Sabeel}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Sabeel Mansuri</p>\n\t  \t<p className='description'>User Interface Specialist</p>\n\t  \t</div>\n\n\t\t<div className='teamRow1'>\n\t  \t<img className='profile' src={Nikhil}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Nikhil Pathak</p>\n\t  \t<p className='description'>Software Development Lead</p>\n\t  \t</div>\n\n\t\t<div className='teamRow2'>\n\t  \t<img className='profile' src={Ayush}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Ayush Shukla</p>\n\t  \t<p className='description'>Quality Assurance Lead</p>\n\t  \t</div>\n\n\t\t<div className='teamRow2'>\n\t  \t<img className='profile' src={Kelvin}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Kelvin Chan</p>\n\t  \t<p className='description'>Senior System Analyst</p>\n\t  \t</div>\n\t  \t\n\t  \t<div className='teamRow2'>\n\t  \t<img className='profile' src={Pranav}\t\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Pranav Narasimmaraj</p>\n\t  \t<p className='description'>Algorithm Specialist</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow2'> \n\t  \t<img className='profile' src={Amithab}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Amithab Arumugam</p>\n\t  \t<p className='description'>Software Development Lead</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={Raghavan}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Raghavan Kope</p>\n\t  \t<p className='description'>Database Specialist</p>\n\t  \t</div>\n\t  \t\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={Som}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Som Dhar</p>\n\t  \t<p className='description'>Business Analyst</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={Shuu}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Shuu Yoshida</p>\n\t  \t<p className='description'>User Interface Specialist</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={David}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>David Febles</p>\n\t  \t<p className='description'>Project Manager</p>\n\t  \t</div>\n\t  </div>\n    </div>\n  );\n}\n\nexport default About;\n","import React, {Component} from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './_Components.css';\nimport APIClient from '../api/APIClient';\n\nclass Changepass extends Component {\n    state = {\n        oldpass: '',\n        newpass: '',\n        verify: ''\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.state.newpass.length < 4) {\n            toast(\"Password must be at least 4 characters.\", {className: 'popup error'});\n            return;\n        }\n\n        if(this.state.newpass !== this.state.verify) {\n            toast(\"New Passwords Don't Match\", {className: 'popup error'});\n            return;\n        }\n\n        APIClient.changePassword(this.state.oldpass, this.state.newpass).then((authToken) => {\n            toast(\"Password Updated\", {className: 'popup'});\n            this.setState({oldpass: ''});\n            this.setState({newpass: ''});\n            this.setState({verify: ''});\n        }).catch(e => {\n            toast(\"Invalid Old Password\", {className: 'popup error'});\n        }); \n\n    }\n\n    render(){\n        return(\n            <div className='settings'>\n                <div className='header'>\n                    <h1>CHANGE PASSWORD</h1>\n                    <br></br>\n                </div>\n\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field'>\n                        <p>Old Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'oldpass'\n                        value = {this.state.oldpass} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <div className='field'>\n                        <p>New Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'newpass'\n                        value = {this.state.newpass} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <div className='field'>\n                        <p>Verify New Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'verify'\n                        value = {this.state.verify} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <button className='center' onClick={e => this.onSubmit(e)}>RESET PASSWORD</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Changepass;","import React from 'react';\nimport Changepass from './components/Changepass.js'\nimport APIClient from './api/APIClient';\nimport './User.css';\n\nfunction User() {\n  const loggedin = APIClient.isCurrentUserLoggedIn();\n  if(loggedin) {\n    return (\n      <div>\n            <Changepass />\n      </div>\n    );\n  } else {\n    window.location.assign('/');\n  }\n}\n\nexport default User;\n","import React, {Component} from 'react';\nimport APIClient from './api/APIClient.js';\nimport './History.css';\nimport {toast} from 'react-toastify';\nimport {Link} from \"react-router-dom\";\n\n\nclass History extends Component {\n    state = {\n        queries: [],\n        podcasts: []\n    };\n\n    static returnURL(item) {\n        if (item.video_url.length < 1) {\n            item.video_url = item.audio_url\n        }\n        return item.video_url\n    }\n\n    static formatName(podcast) {\n        const quarter = podcast.quarter.split(' ');\n        const qString = quarter[0].substr(0, 1) + quarter[1].substr(2, 3);\n        var prof = podcast.professor;\n        prof = prof.substring(prof.indexOf(',') + 1, prof.length) + \" \" +\n            prof.substring(0, prof.indexOf(','));\n        return podcast.department + ' ' + podcast.course_num + \" - \" + podcast.title + \" [\" + podcast.section_id + \" - \" + qString + \"] | \" + prof + \" | Lecture \" + podcast.lecture_num\n    }\n\n    static areObjectsEqual(o1, o2) {\n        for (var k in o1) {\n            if (o2[k] !== o1[k])\n                return false;\n        }\n        return true;\n    }\n\n    static getSearchQueryURL(item) {\n        var url = \"?query=\" + item.search_query;\n        if (item.search_filters) {\n            let filters = item.search_filters;\n            if (filters.dept) {\n                url += \"&department=\" + filters.dept;\n            }\n            if (filters.course_num) {\n                url += \"&course=\" + filters.course_num;\n            }\n            if (filters.professor) {\n                url += \"&professor=\" + filters.professor;\n            }\n            if (filters.quarter) {\n                url += \"&quarter=\" + filters.quarter;\n            }\n        }\n        return url;\n    }\n\n    static getSearchTitle(item) {\n        let filters = item.search_filters;\n        let filterNames = Object.keys(filters);\n\n        if (filterNames.length === 0) {\n            return (\n                <div>\n                    <h3>\n                        {item.search_query}\n                    </h3>\n                </div>\n            );\n        }\n\n\n        var filtered_str = \"\";\n\n        let numFilters = filterNames.length;\n        var currentfilterIdx = 0;\n\n        for (var i = 0; i < filterNames.length; i++) {\n            let filter = filterNames[i];\n            let filterVal = filters[filter];\n\n            if (filter === \"dept\") {\n                filtered_str += \"Department: \" + filterVal;\n            } else if (filter === \"course_num\") {\n                filtered_str += \"Course number: \" + filterVal;\n            } else if (filter === \"professor\") {\n                filtered_str += \"Professor: \" + filterVal;\n            } else if (filter === \"quarter\") {\n                filtered_str += \"Quarter: \" + filterVal;\n            }\n\n            if (currentfilterIdx !== numFilters - 1) {\n                filtered_str += \", \";\n            }\n            currentfilterIdx += 1;\n        }\n\n        return (\n            <div>\n                <h3>\n                    {item.search_query}\n                    <br/>\n                    <p className=\"mt-2 text-muted\" style={{fontSize: \"50%\"}}>\n                        <b><i>{filtered_str}</i></b>\n                    </p>\n                </h3>\n            </div>\n        );\n    }\n\n    static getPodcastURL(item) {\n        return \"?blob_id=\" + item.blob_id;\n    }\n\n    doesSearchQueryExistInHistory(element) {\n        for (var i = 0; i < this.state.queries.length; i++) {\n            let query = this.state.queries[i];\n            if (query.search_query === element.search_query && query.type === element.type && History.areObjectsEqual(element.search_filters, query.search_filters)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    doesPodcastExistInHistory(element) {\n        for (var i = 0; i < this.state.podcasts.length; i++) {\n            if (this.state.podcasts[i].podcast.id === element.podcast.id)\n                return true;\n        }\n        return false;\n    }\n\n    componentDidMount() {\n        APIClient.getHistory().then(response => {\n            console.log(response);\n            response.forEach(element => {\n                if (element.type === 'SEARCH_QUERY') {\n                    if (!this.doesSearchQueryExistInHistory(element)) {\n                        this.setState(prevState => ({queries: [...prevState.queries, element]}));\n                    }\n                } else {\n                    if (!this.doesPodcastExistInHistory(element)) {\n                        this.setState(prevState => ({podcasts: [...prevState.podcasts, element]}));\n                    }\n                }\n            });\n        });\n    }\n\n    onClear(e) {\n        APIClient.clearHistory().then(() => {\n            this.setState({queries: []});\n            this.setState({podcasts: []});\n            toast(\"History Cleared\", {className: 'popup'});\n        });\n    }\n\n    renderSearchHistory() {\n        if (this.state.queries.length <= 0) {\n            return (<div className=\"row justify-content-center\" style={{marginTop: \"100px\"}}>\n                <div className=\"col text-center\">\n                    <h4>It's empty here.\n                        <br/>\n                        <small className=\"text-muted\" style={{fontSize: \"65%\"}}>\n                            This is where you'll see your most recent searches.\n                        </small>\n                    </h4>\n                </div>\n            </div>);\n        } else {\n            return (\n                <div className=\"mt-4\">\n                    <ul style={{\"list-style\": \"none\"}}>\n                        {this.state.queries.map((item, index) => (\n\n                            <Link to={{\n                                pathname: '/results',\n                                search: History.getSearchQueryURL(item)\n                            }} style={{color: 'rgba(72,136,163,.93)'}}>\n\n                                <li className=\"mt-4 mb-4\" key={index}>\n                                    {History.getSearchTitle(item)}\n                                </li>\n\n                            </Link>\n\n                        ))}\n                    </ul>\n                </div>\n            )\n        }\n    }\n\n    renderPodcastHistory() {\n        if (this.state.podcasts.length <= 0) {\n            return (<div className=\"row justify-content-center\" style={{marginTop: \"100px\"}}>\n                <div className=\"col text-center\">\n                    <h4>It's empty here.\n                        <br/>\n                        <small className=\"text-muted\" style={{fontSize: \"65%\"}}>\n                            This is where you'll see your recently-viewed podcasts.\n                        </small>\n                    </h4>\n                </div>\n            </div>);\n        } else {\n            return (<div className=\"mt-4\">\n                <ul style={{\"list-style\": \"none\"}}>\n                    {this.state.podcasts.map((item, index) => (\n                        <Link to={{\n                            pathname: '/podcast',\n                            search: History.getPodcastURL(item)\n                        }} style={{color: 'rgba(72,136,163,.93)'}}>\n                            <li className=\"mt-4 mb-4\" key={index}>\n                                <h3>{History.formatName(item.podcast)}</h3>\n                            </li>\n                        </Link>\n                    ))}\n                </ul>\n            </div>);\n        }\n    }\n\n    render() {\n        if (APIClient.isCurrentUserLoggedIn()) {\n\n            return (\n                <div className=\"history\">\n                    <div className='header'>\n                        <h1>HISTORY</h1>\n                        <button className='center' onClick={e => this.onClear(e)}>Clear</button>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className=\"col-3\">\n                            <h2>You've Searched For...</h2>\n                            {this.renderSearchHistory()}\n                        </div>\n                        <div className=\"col\">\n                            <h2>You've Found...</h2>\n                            {this.renderPodcastHistory()}\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            window.location.assign('/');\n        }\n    }\n}\n\nexport default History;\n","import React, {Component} from 'react';\nimport APIClient from '../api/APIClient.js';\nimport './_Components.css';\nimport starOff from '../assets/starOff.png';\nimport starOn from '../assets/starOn.png';\nimport {toast} from 'react-toastify';\nimport {Link} from \"react-router-dom\";\n\n\nclass FavResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isFav: [], favorites: []};\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    static formatTitle(item) {\n        // Add department and coursenum\n        let fulltitle = item.department + ' ' + item.course_num;\n\n        // Add truncated coursename\n        var coursename = item.title;\n        if (coursename.length > 25) {\n            coursename = coursename.substring(0, 25) + '...';\n        }\n        fulltitle += ' - ' + coursename;\n\n        // Add section id\n        var quarter = item.quarter;\n        quarter = quarter.substring(0, 2).toUpperCase() + quarter.substring(quarter.length - 2, quarter.length);\n        fulltitle += ' [' + item.section_id + '-' + quarter + ']';\n\n        // Add truncated professor\n        var professor = item.professor;\n        if (professor.length > 25) {\n            professor = professor.substring(0, 25) + '...';\n        }\n        // Swaps first and last name\n        professor = professor.substring(professor.indexOf(',') + 1, professor.length) + \" \" +\n            professor.substring(0, professor.indexOf(','));\n        fulltitle += ' | ' + professor;\n\n        // Add lecturenum\n        fulltitle += ' | Lecture ' + item.lecture_num;\n\n        return fulltitle;\n    }\n\n    static isPodcastInList(list, podcast) {\n        for (var i = 0; i < list.length; i++) {\n            if (podcast.id === list[i].id) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    handleClick(e, index, item) {\n        e.preventDefault();\n\n        const newFav = [...this.state.isFav];\n        newFav[index] = !this.state.isFav[index];\n\n        if (!newFav[index]) {\n            APIClient.removeFavoritePodcastById(item.favorite_podcast.id, item.favorite_blob.id).then(response => {\n                toast(\"Removed from Favorites\", {className: 'popup'});\n            });\n        } else {\n            APIClient.addFavoritePodcastById(item.favorite_podcast.id, item.favorite_blob.id).then(response => {\n                toast(\"Added to Favorites\", {className: 'popup'});\n            });\n        }\n\n        this.setState(state => ({\n            isFav: newFav\n        }));\n    }\n\n    componentDidMount() {\n        APIClient.getFavoritePodcasts().then(response => {\n            console.log(response);\n            let favorites = [];\n            for (var i = 0; i < response.length; i++) {\n                if (!FavResult.isPodcastInList(favorites, response[i].favorite_podcast))\n                    favorites.push(response[i]);\n            }\n            this.setState({favorites: favorites});\n            this.setState({isFav: favorites.map((element) => true)});\n        });\n    }\n\n    render() {\n\n        if (this.state.favorites.length <= 0) {\n\n            return (\n                <div className='favorites'>\n                    <div className='header'>\n                        <h1>FAVORITES</h1>\n                    </div>\n\n                    <div className=\"row mt-5 justify-content-center\">\n                        <div className=\"col text-center\">\n                            <h3>Got any favorites?\n                                <br/>\n                                <small className=\"text-muted\" style={{fontSize: \"65%\"}}>\n                                    Once you favorite a podcast snippet, you'll see it here.\n                                </small>\n                            </h3>\n                        </div>\n                    </div>\n                </div>\n            );\n\n        } else {\n\n            return (\n                <div className='favorites'>\n                    <div className='header'>\n                        <h1>FAVORITES</h1>\n                    </div>\n                    <div className='favList mt-4'>\n                        <ul>\n                            {this.state.favorites.map((item, index) => (\n                                <li className='favResult' key={index}>\n                                    <div className='each'>\n                                        <div className=\"row\">\n                                            <div className=\"col-8\">\n                                                <Link to={{\n                                                    pathname: '/podcast',\n                                                    search: \"?blob_id=\" + item.favorite_blob.id\n                                                }} style={{color: 'rgba(72,136,163,.93)'}}>\n                                                    {FavResult.formatTitle(item.favorite_podcast)}\n                                                </Link>\n                                            </div>\n                                            <div className=\"col-4\">\n                                                <img onClick={(e) => {\n                                                    this.handleClick(e, index, item)\n                                                }}\n                                                     src={this.state.isFav[index] ? starOn : starOff}\n                                                     alt=\"\" width=\"58\" height=\"58\"/>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\n\nexport default FavResult;\n","import React from 'react';\nimport Favorite from './components/FavResult.js';\nimport APIClient from './api/APIClient.js';\nimport './Favorites.css';\n\nfunction Favorites() {\n  const loggedin = APIClient.isCurrentUserLoggedIn();\n\n  if(loggedin) {\n    return (\n      <div>\n        <Favorite />\n      </div>\n    );\n  } else {\n    window.location.assign('/');\n  }\n}\n\nexport default Favorites;\n","import React, {Component} from 'react';\nimport {toast} from 'react-toastify';\nimport './PodcastPage.css';\nimport APIClient from './api/APIClient.js';\nimport queryString from 'query-string';\nimport {Link} from 'react-router-dom';\n\nclass PodcastPage extends Component {\n    values = queryString.parse(this.props.location.search);\n    state = {\n        isFavorited: false,\n        podcast: null,\n        podcast_blob: null\n    };\n\n    formatTitle() {\n        // Add department and coursenum\n        let fulltitle = this.state.podcast.department + ' ' + this.state.podcast.course_num;\n\n        // Add truncated coursename\n        var coursename = this.state.podcast.title;\n        if (coursename.length > 25) {\n            coursename = coursename.substring(0, 25) + '...';\n        }\n        fulltitle += ' - ' + coursename;\n\n        // Add section id\n        fulltitle += ' [' + this.state.podcast.section_id + ']';\n\n        // Add truncated professor\n        var professor = this.state.podcast.professor;\n        if (professor.length > 12) {\n            professor = professor.substring(0, 12) + '...';\n        }\n        fulltitle += ' | ' + professor;\n\n        // Add lecturenum\n        fulltitle += ' | Lecture ' + this.state.podcast.lecture_num;\n\n        return fulltitle;\n    }\n\n    formatVideoLink(mainurl) {\n        return (mainurl + '#t=' + this.state.podcast_blob.starting_timestamp_second);\n    }\n\n    formatRelevantText() {\n        if (this.state.podcast_blob.transcription_blob.length > 950) {\n            return this.state.podcast_blob.transcription_blob.substring(0, 950) + '...';\n        }\n        return this.state.podcast_blob.transcription_blob;\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        if (!APIClient.isCurrentUserLoggedIn()) {\n            toast(\"Log In to Favorite\", {className: 'popup error'});\n            return;\n        }\n\n        APIClient.checkFavoritePodcast(this.state.podcast.id, this.state.podcast_blob.id).then(response => {\n            if (response) {\n                APIClient.removeFavoritePodcastById(this.state.podcast.id, this.state.podcast_blob.id).then(response => {\n                    toast(\"Removed from Favorites\", {className: 'popup'});\n                });\n                this.setState({isFavorited: false});\n                document.getElementById('togglebutton').style.color = \"rgba(255,255,255,1)\";\n                document.getElementById('togglebutton').style.border = \"none\";\n                document.getElementById('togglebutton').style.backgroundColor = \"rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').innerHTML = \"FAVORITE\";\n            } else {\n                APIClient.addFavoritePodcastById(this.state.podcast.id, this.state.podcast_blob.id).then(response => {\n                    toast(\"Added to Favorites\", {className: 'popup'});\n                });\n                this.setState({isFavorited: true});\n                document.getElementById('togglebutton').style.color = \"rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').style.border = \"1px solid rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').style.backgroundColor = \"rgba(255,255,255,1)\";\n                document.getElementById('togglebutton').innerHTML = \"UNFAVORITE\";\n            }\n        });\n\n    }\n\n    relocate(e, mainurl) {\n        e.preventDefault();\n        window.location.assign(mainurl + '#t=' + this.state.podcast_blob.starting_timestamp_second);\n    }\n\n    componentDidMount() {\n        if (performance.navigation.type === 2) {\n            window.location.reload();\n        }\n\n        APIClient.getPodcastSnippet(this.values.blob_id).then(res => {\n            this.setState({podcast: res.podcast, podcast_blob: res.podcast_blob});\n\n\n            APIClient.checkFavoritePodcast(res.podcast.id, res.podcast_blob.id).then(response => {\n                if (response) {\n                    this.setState({isFavorited: true});\n                    document.getElementById('togglebutton').style.color = \"rgba(72,136,163,.93)\";\n                    document.getElementById('togglebutton').style.border = \"1px solid rgba(72,136,163,.93)\";\n                    document.getElementById('togglebutton').style.backgroundColor = \"rgba(255,255,255,1)\";\n                    document.getElementById('togglebutton').innerHTML = \"UNFAVORITE\";\n                } else {\n                    this.setState({isFavorited: false});\n                }\n            });\n\n        });\n    }\n\n    render() {\n        if (!this.state.podcast || !this.state.podcast_blob) {\n            // The podcast and podcast blob info haven't been loaded yet.\n            return (<div></div>);\n        } else {\n            let mainurl = (this.values.ucsd_podcast_video_url === '') ? this.state.podcast.ucsd_podcast_audio_url : this.state.podcast.ucsd_podcast_video_url;\n            return (\n                <div className='podpage'>\n                    <h1 className='title'><a className='link' href={mainurl + '#t=' + this.state.podcast_blob.starting_timestamp_second}>{this.formatTitle()}</a></h1>\n                    <div className='toplayer'>\n                        <video className='vid' controls autoPlay>\n                            <source src={this.formatVideoLink(mainurl)}/>\n                        </video>\n                        <div className='text'>\n                            <h3>Speech-to-Text</h3>\n                            <p style={{marginTop: '22px'}}>{this.formatRelevantText()}</p>\n                            <Link\n                                className='link'\n                                to={{\n                                    pathname: \"/transcript\",\n                                    search: \"?podcast_id=\" + this.state.podcast.id\n                                }}\n                            ><u>View Full Transcript</u></Link>\n                        </div>\n                    </div>\n                    <div className=\"btn-group pagewide fullgroup\">\n                        <div className=\"btn-group pagewide\">\n                            <button type=\"button\" className=\"btn\" id='togglebutton'\n                                    onClick={e => this.onSubmit(e)}>FAVORITE\n                            </button>\n                        </div>\n                        <div className=\"btn-group pagewide\">\n                            <button type=\"button\" className=\"btn\" onClick={e => this.relocate(e, mainurl)}>GO TO PODCAST</button>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n    }\n}\n\nexport default PodcastPage;","import React, {Component} from 'react';\nimport './_Components.css';\nimport {withRouter} from 'react-router-dom';\nimport APIClient from \"../api/APIClient.js\";\nimport {toast} from 'react-toastify';\n\nclass ResSearch extends Component {\n    query = \"\";\n    noResponse = false;\n    state = {\n        query: '',\n        department: '',\n        course: '',\n        professor: '',\n        quarter: '',\n        showFilters: false,\n        results: [],\n        departments: [],\n        courses: [],\n        quarters: [],\n        professors: [],\n        course_codes: {},\n        depExists: false,\n        course_numbers: [],\n\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value}, this.updateFilters);\n        if(this.state.department.length <= 1){\n            this.setState({course: \"\"});\n        }\n    };\n    handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            toast(\"Press the Search Button\", {className: 'popup'});\n        }\n    };\n\n    updateFilters() {\n        if (this.state.query.length > 0 || (this.state.department.length > 0 || this.state.course.length > 0\n            || this.state.professor.length > 0 || this.state.quarter.length > 0)) {\n            this.setState({showFilters: true});\n        } else {\n            this.setState({showFilters: false});\n        }\n    }\n\n    onSubmit(e) {\n        this.props.history.push({\n            search:\n                \"?query=\" + this.state.query\n                + \"&department=\" + this.state.department\n                + \"&course=\" + this.state.course\n                + \"&professor=\" + this.state.professor\n                + \"&quarter=\" + this.state.quarter,\n            state: {\n                query: this.state.query,\n                department: this.state.department,\n                course: this.state.course,\n                professor: this.state.professor,\n                quarter: this.state.quarter\n            }\n        })\n    }\n\n    checkDepExists(dep) {\n        if (!dep)\n            return false;\n        if (this.state.course_codes.hasOwnProperty(dep.toUpperCase())) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    handleClick(e) {\n        e.preventDefault();\n        this.setState({showFilters: true});\n    }\n\n    componentDidMount() {\n        APIClient.searchProfessors(\"\").then(response => {\n                this.setState({professors: response})\n            }\n        );\n        APIClient.searchQuarters(\"\").then(response => {\n                this.setState({quarters: response})\n            }\n        );\n        APIClient.searchDepartments(\"\").then(response => {\n                this.setState({departments: response})\n            }\n        );\n        APIClient.getAllCourseCodes().then(response => {\n            var course_to_codes = {};\n            for (var i = 0; i < response.length; i++) {\n                var split = response[i].split(' ');\n                if (!course_to_codes.hasOwnProperty(split[0])) {\n                    course_to_codes[split[0].trim()] = [split[1].trim()];\n                } else {\n                    course_to_codes[split[0].trim()].push(split[1].trim());\n                    course_to_codes[split[0].trim()].sort(function(a, b){return a-b});\n                }\n            }\n            this.setState({course_codes: course_to_codes})\n            }\n        );\n\n        this.setState({\n            query: this.props.query || \"\",\n            department: this.props.department || \"\",\n            course: this.props.course || \"\",\n            quarter: this.props.quarter || \"\",\n            professor: this.props.professor || \"\"\n        });\n    }\n\n    render() {\n        var course_numbers = [];\n        let filters;\n        if (this.state.showFilters) {\n            filters =\n                <div className='resfilters'>\n                    <div className='resfilterinputs'>\n                        <input\n                            autoComplete='off'\n                            type='text'\n                            className='resfilterbar'\n                            name='department'\n                            list='department'\n                            value={this.state.department}\n                            onChange={e => this.change(e)}\n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"department\">\n                            {this.state.departments.map((item, index) => (\n                                <option key={index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input\n                            autoComplete='off'\n                            type='text'\n                            className={!this.checkDepExists(this.state.department) ? 'course_number' : 'course_number_active'}\n                            name='course'\n                            list='course_number'\n                            disabled={!this.checkDepExists(this.state.department) ? true : false}\n                            value={this.state.course}\n                            onChange={e => this.change(e)}\n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"course_number\">\n                            {this.checkDepExists(this.state.department) ? course_numbers = this.state.course_codes[this.state.department.toUpperCase()] : course_numbers = []}\n                            {course_numbers.map((item, index) => (\n                                <option key={index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input\n                            autoComplete='off'\n                            type='text'\n                            className='resfilterbar'\n                            name='professor'\n                            list='professor'\n                            value={this.state.professor}\n                            onChange={e => this.change(e)}\n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"professor\">\n                            {this.state.professors.map((item, index) => (\n                                <option key={index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input\n                            autoComplete='off'\n                            type='text'\n                            className='resfilterbar'\n                            name='quarter'\n                            list='quarter'\n                            value={this.state.quarter}\n                            onChange={e => this.change(e)}\n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"quarter\">\n                            {this.state.quarters.map((item, index) => (\n                                <option key={index} value={item}></option>\n                            ))}\n                        </datalist>\n                    </div>\n                    <p style={{marginTop: '5px'}}>Department</p>\n                    <p>Course Number</p>\n                    <p>Professor</p>\n                    <p>Quarter</p>\n\n                </div>\n        } else {\n            filters = null;\n        }\n\n        return (\n            <div className={'ressearchform'}>\n                <form className='col-xs-1 text-center'>\n                    <input\n                        type='text'\n                        className='ressearchbar'\n                        name='query'\n                        value={this.state.query}\n                        onChange={e => this.change(e)}\n                        onClick={e => this.handleClick(e)}/>\n                    <p id=\"noResults\"></p>\n                    {filters}\n                    <button className='rescenter' onClick={e => this.onSubmit(e)}>Search</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(ResSearch);","import React, {Component} from 'react';\nimport './About.css';\nimport './Results.css';\nimport {Link} from 'react-router-dom';\nimport ResSearch from './components/ResSearch.js';\nimport APIClient from './api/APIClient.js';\nimport queryString from 'query-string';\n\n\nclass Results extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            results: []\n        }\n    }\n\n\n    componentDidMount() {\n        var values = queryString.parse(this.props.location.search);\n        if (values.query.length === 0) {\n            document.getElementById('noResults').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('noResults').innerHTML = \"Please enter a query.\";\n            return;\n        }\n        APIClient.searchPodcasts(values.query, {\n            dept: values.department,\n            course_num: values.course,\n            professor: values.professor,\n            quarter: values.quarter\n        }).then(response => {\n            if (response.length === 0) {\n                document.getElementById('noResults').style.color = \"rgba(207, 70, 70, 0.93)\";\n                document.getElementById('noResults').innerHTML = \"No results found.\";\n                return;\n            }\n            response.forEach((element) => {\n                APIClient.getPodcastMetadata(element.podcast_id).then(back => {\n                    const quarter = back.quarter.split(' ');\n                    const qString = quarter[0].substr(0, 1) + quarter[1].substr(2, 3);\n                    var minutes = Math.floor(element.starting_timestamp_second / 60);\n                    var seconds = element.starting_timestamp_second % 60;\n                    var updatedSeconds = ('0' + seconds).slice(-2);\n                    const timeStamp = minutes + \":\" + updatedSeconds;\n                    const vidUrl = back.ucsd_podcast_video_url;\n                    var prof = back.professor;\n                    prof = prof.substring(prof.indexOf(',') + 1, prof.length) + \" \" +\n                        prof.substring(0, prof.indexOf(','));\n                    var result = {\n                        description: back.department + ' ' + back.course_num + \" - \" + back.title + \" [\" + back.section_id + \" - \" + qString + \"] | \" + prof + \" | Lecture \" + back.lecture_num,\n                        blurb: element.transcription_blob,\n                        timestamp: timeStamp,\n                        url: vidUrl,\n                        podcast_id: element.podcast_id,\n                        blob_id: element.id,\n                        podcastPage: {\n                            department: back.department,\n                            course_num: back.course_num,\n                            title: back.title,\n                            section_id: back.section_id,\n                            professor: prof,\n                            lecture_num: back.lecture_num,\n                            ucsd_podcast_video_url: back.ucsd_podcast_video_url,\n                            starting_timestamp_second: element.starting_timestamp_second,\n                            transcription_blob: element.transcription_blob,\n                            ucsd_podcast_audio_url: back.ucsd_podcast_audio_url,\n                        }\n                    };\n                    this.setState(prevState => ({results: [...prevState.results, result]}));\n                });\n            });\n        });\n    }\n\n\n    render() {\n        var values = queryString.parse(this.props.location.search);\n        return (\n            <div className=\"results\">\n                <ResSearch query={values.query} department={values.department} course={values.course}\n                           quarter={values.quarter} professor={values.professor}/>\n                {this.state.results.map((result, index) => (\n                    <div key={index}>\n                        <li className=\"description\">\n                            <Link to={{\n                                pathname: '/podcast',\n                                search: \"?blob_id=\" + result.blob_id\n                            }}>\n                                {result.description}\n                            </Link>\n                        </li>\n                        <div className=\"times\">\n                            <li className=\"timeStamp\">\n                                <Link to={{\n                                    pathname: '/podcast',\n                                    search: \"?blob_id=\" + result.blob_id\n                                }}>\n                                    {result.timestamp}\n                                </Link>\n                            </li>\n                        </div>\n                        <li className=\"blurb\"> {result.blurb} </li>\n                        <div className=\"spacer\"></div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\n\nexport default Results;","import React, {Component} from 'react';\nimport {toast} from 'react-toastify';\nimport './Forgotpass.css';\nimport APIClient from \"./api/APIClient\";\n\nclass Forgotpass extends Component {\n    state = {\n        email: '',\n        passwordToken: '',\n        newPassword: '',\n        sentVerificationEmail: false\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onEmailFormSubmit(e) {\n        e.preventDefault();\n        APIClient.sendPasswordTokenEmail(this.state.email).then((success) => {\n            this.setState({sentVerificationEmail: true, email: this.state.email});\n            toast(\"Check your email for a verification token.\", {className: 'popup'});\n        }).catch((err) => {\n            this.setState({sentVerificationEmail: false, email: ''});\n            toast(err, {className: 'popup error'});\n        })\n    }\n\n    onResetPasswordFormSubmit(e) {\n        e.preventDefault();\n        if(this.state.newPassword.length < 4) {\n            toast('Password must be 4 or more characters.', {className: 'popup error'});\n            return;\n        }\n        APIClient.setNewPassword(this.state.email, this.state.newPassword, this.state.passwordToken).then((success) => {\n            toast(\"Your password has been changed.\", {className: 'popup'});\n\n            // Login the user & redirect them to the login page.\n            APIClient.login(this.state.email, this.state.newPassword).then(() => {\n                // Redirect the user to the home page.\n                this.props.history.push(\"/\");\n            }).then(() => {\n                window.location.reload();\n            });\n\n        }).catch((err) => {\n            toast(err, {className: 'popup error'});\n        });\n    }\n\n    getForm() {\n        if (!this.state.sentVerificationEmail) {\n            return (\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field'>\n                        <p>Email</p>\n                        <br></br>\n                        <input\n                            type='text'\n                            className='searchbar'\n                            name='email'\n                            value={this.state.email}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n\n                    <button className='center' onClick={e => this.onEmailFormSubmit(e)}>RESET PASSWORD</button>\n                </form>\n            )\n        } else {\n            return (\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field'>\n                        <p>Email</p>\n                        <br></br>\n                        <input\n                            type='text'\n                            className='searchbar'\n                            name='email'\n                            value={this.state.email}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n                    <div className='field'>\n                        <p>Password token</p>\n                        <br></br>\n                        <input\n                            type='text'\n                            className='searchbar'\n                            name='passwordToken'\n                            value={this.state.passwordToken}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n                    <div className='field'>\n                        <p>New password</p>\n                        <br></br>\n                        <input\n                            type='password'\n                            className='searchbar'\n                            name='newPassword'\n                            value={this.state.newPassword}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n\n                    <button className='center' onClick={e => this.onResetPasswordFormSubmit(e)}>RESET PASSWORD</button>\n                </form>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className='forgotpass'>\n                <div className='header'>\n                    <h1>RESET PASSWORD</h1>\n                </div>\n                {this.getForm()}\n            </div>\n        );\n    }\n}\n\nexport default Forgotpass;","import React, {Component} from 'react';\nimport queryString from 'query-string';\nimport APIClient from './api/APIClient.js';\nimport './Transcript.css';\n\nclass Transcript extends Component {\n    values = queryString.parse(this.props.location.search);\n\n    state = {\n        transcript: []\n    };\n\n    componentDidMount() {\n        APIClient.getPodcastTranscript(this.values.podcast_id).then(response => {\n            response.transcript_sections.forEach(element => {\n                this.setState(prevState => ({transcript: [...prevState.transcript, element]}));\n            });\n        });\n    }\n    \n    render() {\n        return(\n            <div className='transcript'>\n                {this.state.transcript.map((result, index) => (\n\t\t\t\t\t<div key={index}>\n                        {result}\n                        <br></br>\n                        <br></br>\n\t\t\t\t\t</div>\t\t\t\n\t\t\t\t))}\n            </div>\n        );\n    }\n}\n\nexport default Transcript;\n","import React from 'react';\nimport './NotFound.css';\n\nfunction submit(e) {\n  e.preventDefault();\n  window.location.assign('/');\n  \n}\n\nfunction NotFound() {\n  return (\n    <div className='notfound'>\n        <h1>Uh oh! Something went wrong.</h1>\n        <h5>Let's get you home:</h5>\n        <button onClick={e => submit(e)}>Home</button>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar.js';\nimport Home from './Home.js';\nimport About from './About.js';\nimport User from './User.js';\nimport History from './History.js';\nimport Favorites from './Favorites.js';\nimport PodcastPage from './PodcastPage.js';\nimport './App.css';\nimport Results from './Results.js';\nimport Forgotpass from './Forgotpass.js';\nimport Transcript from './Transcript.js';\nimport NotFound from './NotFound.js';\n\nclass App extends Component {\n    render() {\n        return (\n                <Router>\n                    <Navbar/>\n                    <div>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home}/>\n                            <Route path=\"/about\" component={About}/>\n                            <Route path=\"/user\" component={User}/>\n                            <Route path=\"/forgot_password\" component={Forgotpass}/>\n                            <Route path=\"/results\" component={Results}/>\n                            <Route path=\"/history\" component={History}/>\n                            <Route path=\"/favorites\" component={Favorites}/>\n                            <Route path=\"/podcast\" component={PodcastPage}/>\n                            <Route path=\"/transcript\" component={Transcript}/>\n                            <Route path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { toast } from 'react-toastify';\n\ntoast.configure({\n    autoClose: 4000,\n    draggable: false,\n    closeButton: false,\n    draggablePercent: 100,\n    progressClassName: 'ourbar',\n    position: 'top-left',\n    style: {top: '90px'}\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}