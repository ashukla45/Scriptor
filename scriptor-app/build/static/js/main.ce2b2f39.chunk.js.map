{
  "version": 3,
  "sources": [
    "assets/Sabeel.png",
    "assets/Raghavan.png",
    "assets/Kelvin.png",
    "assets/Subhash.png",
    "assets/Amithab.png",
    "assets/Nikhil.png",
    "assets/Pranav.png",
    "assets/Ayush.png",
    "assets/David.png",
    "assets/Shuu.png",
    "assets/Som.png",
    "assets/ScriptorLogo.jpg",
    "assets/starOff.png",
    "assets/starOn.png",
    "api/utils.js",
    "api/APIClient.js",
    "components/Signup.js",
    "components/Login.js",
    "components/Navbar.js",
    "components/Search.js",
    "Home.js",
    "About.js",
    "components/Changepass.js",
    "User.js",
    "History.js",
    "components/FavResult.js",
    "Favorites.js",
    "PodcastPage.js",
    "components/ResSearch.js",
    "Results.js",
    "Forgotpass.js",
    "Transcript.js",
    "NotFound.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "__webpack_require__",
    "p",
    "querystring",
    "query",
    "arguments",
    "length",
    "undefined",
    "qs",
    "Object",
    "entries",
    "filter",
    "pair",
    "map",
    "i",
    "encodeURIComponent",
    "join",
    "api_APIClient",
    "APIClient",
    "classCallCheck",
    "this",
    "state",
    "authToken",
    "localStorage",
    "getItem",
    "callbacks",
    "cb",
    "push",
    "message",
    "setItem",
    "removeItem",
    "getAuthToken",
    "isCurrentUserLoggedIn",
    "Authorization",
    "Content-Type",
    "_this",
    "Promise",
    "resolve",
    "reject",
    "fetch",
    "headers",
    "_getRequestHeaders",
    "then",
    "response",
    "json",
    "success",
    "current_user",
    "error",
    "email",
    "password",
    "_this2",
    "method",
    "body",
    "JSON",
    "stringify",
    "setAuthToken",
    "auth_token",
    "notifyCallbacks",
    "type",
    "action",
    "clearAuthToken",
    "_this3",
    "existingPassword",
    "newPassword",
    "_this4",
    "existing_password",
    "new_password",
    "userEmail",
    "_this5",
    "passwordToken",
    "_this6",
    "password_token",
    "podcastId",
    "_this7",
    "_this8",
    "has_favorited_podcast",
    "_this9",
    "_this10",
    "favorite_podcasts",
    "_this11",
    "history",
    "_this12",
    "text_query",
    "filters",
    "_this13",
    "url_query",
    "q",
    "queryString",
    "results",
    "_this14",
    "_this15",
    "_this16",
    "_this17",
    "blobId",
    "_this18",
    "podcast",
    "podcast_blob",
    "_this19",
    "_this20",
    "sentence_split",
    "Signup",
    "pass",
    "verify",
    "change",
    "e",
    "setState",
    "defineProperty",
    "target",
    "name",
    "value",
    "preventDefault",
    "document",
    "getElementById",
    "style",
    "color",
    "innerHTML",
    "marginTop",
    "validateEmail",
    "register",
    "window",
    "location",
    "reload",
    "catch",
    "test",
    "react_default",
    "a",
    "createElement",
    "className",
    "id",
    "onChange",
    "onClick",
    "onSubmit",
    "Component",
    "Login",
    "login",
    "href",
    "Navbar",
    "possibleConstructorReturn",
    "getPrototypeOf",
    "call",
    "addCallback",
    "msg",
    "authAction",
    "route",
    "assign",
    "logout",
    "toast",
    "loggedin",
    "logout_buttons",
    "reactjs_popup_es",
    "trigger",
    "modal",
    "contentStyle",
    "height",
    "width",
    "closeOnDocumentClick",
    "close",
    "components_Login",
    "components_Signup",
    "redirect",
    "login_buttons",
    "position",
    "on",
    "mouseLeaveDelay",
    "mouseEnterDelay",
    "padding",
    "border",
    "arrow",
    "Search",
    "department",
    "course",
    "professor",
    "quarter",
    "showFilters",
    "departments",
    "courses",
    "quarters",
    "professors",
    "course_codes",
    "depExists",
    "course_numbers",
    "updateFilters",
    "handleEnter",
    "key",
    "props",
    "pathname",
    "search",
    "dep",
    "hasOwnProperty",
    "toUpperCase",
    "searchProfessors",
    "searchQuarters",
    "searchDepartments",
    "getAllCourseCodes",
    "course_to_codes",
    "split",
    "trim",
    "autoComplete",
    "list",
    "onKeyDown",
    "item",
    "index",
    "checkDepExists",
    "disabled",
    "placeholder",
    "withRouter",
    "Home",
    "components_Search",
    "About",
    "src",
    "Logo",
    "alt",
    "Subhash",
    "Sabeel",
    "Nikhil",
    "Ayush",
    "Kelvin",
    "Pranav",
    "Amithab",
    "Raghavan",
    "Som",
    "Shuu",
    "David",
    "Changepass",
    "oldpass",
    "newpass",
    "changePassword",
    "User",
    "components_Changepass",
    "History",
    "queries",
    "podcasts",
    "video_url",
    "audio_url",
    "back",
    "qString",
    "substr",
    "prof",
    "substring",
    "indexOf",
    "course_num",
    "title",
    "section_id",
    "lecture_num",
    "getHistory",
    "forEach",
    "element",
    "prevState",
    "concat",
    "toConsumableArray",
    "formatName",
    "clearHistory",
    "onClear",
    "FavResult",
    "isFav",
    "handleClick",
    "bind",
    "assertThisInitialized",
    "newFav",
    "addFavoritePodcastById",
    "removeFavoritePodcastById",
    "fulltitle",
    "coursename",
    "getFavoritePodcasts",
    "formatTitle",
    "starOn",
    "starOff",
    "Favorites",
    "components_FavResult",
    "PodcastPage",
    "values",
    "parse",
    "isFavorited",
    "mainurl",
    "starting_timestamp_second",
    "transcription_blob",
    "checkFavoritePodcast",
    "podcast_id",
    "backgroundColor",
    "ucsd_podcast_video_url",
    "performance",
    "navigation",
    "getPodcastSnippet",
    "blob_id",
    "ucsd_podcast_audio_url",
    "controls",
    "autoPlay",
    "formatVideoLink",
    "formatRelevantText",
    "react_router_dom",
    "to",
    "relocate",
    "ResSearch",
    "noResponse",
    "Results",
    "searchPodcasts",
    "dept",
    "getPodcastMetadata",
    "timeStamp",
    "Math",
    "floor",
    "slice",
    "vidUrl",
    "result",
    "description",
    "blurb",
    "timestamp",
    "url",
    "podcastPage",
    "components_ResSearch",
    "Forgotpass",
    "sentVerificationEmail",
    "sendPasswordTokenEmail",
    "err",
    "POSITION",
    "TOP_RIGHT",
    "setNewPassword",
    "required",
    "onResetPasswordFormSubmit",
    "onEmailFormSubmit",
    "getForm",
    "Transcript",
    "transcript",
    "getPodcastTranscript",
    "transcript_sections",
    "NotFound",
    "submit",
    "App",
    "components_Navbar",
    "react_router",
    "exact",
    "path",
    "component",
    "Boolean",
    "hostname",
    "match",
    "configure",
    "autoClose",
    "draggable",
    "closeButton",
    "draggablePercent",
    "progressClassName",
    "top",
    "ReactDOM",
    "render",
    "src_App_0",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.ce2b2f39.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/Sabeel.8bad89e5.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Raghavan.6309c087.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Kelvin.9cdaa2b9.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Subhash.31ee9661.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Amithab.d7836891.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Nikhil.9a9562ef.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Pranav.5310381d.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Ayush.86aa5df8.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/David.b3506a21.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Shuu.8ed332db.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/Som.25a042f5.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/ScriptorLogo.0c85894f.jpg\";",
    "module.exports = __webpack_public_path__ + \"static/media/starOff.1668d9ae.png\";",
    "module.exports = __webpack_public_path__ + \"static/media/starOn.298685c0.png\";",
    "// Helper function to convert a json to a URL query string\nfunction querystring(query = {}) {\n    // get array of key value pairs ([[k1, v1], [k2, v2]])\n    const qs = Object.entries(query)\n    // filter pairs with undefined value\n        .filter(pair => pair[1] !== undefined)\n        // encode keys and values, remove the value if it is null, but leave the key\n        .map(pair => pair.filter(i => i !== null).map(encodeURIComponent).join('='))\n        .join('&');\n\n    return qs && '?' + qs;\n}\n\nexport default querystring;",
    "import querystring from \"./utils\";\n\nclass APIClient {\n    constructor() {\n        this.state = {\n            authToken: localStorage.getItem(\"authToken\")\n        };\n        this.callbacks = [];\n    }\n\n    addCallback(cb) {\n        this.callbacks.push(cb);\n    }\n\n    notifyCallbacks(message) {\n        for (var i = 0; i < this.callbacks.length; i++) {\n            this.callbacks[i](message);\n        }\n    }\n\n    setAuthToken(authToken) {\n        localStorage.setItem(\"authToken\", authToken);\n        this.state.authToken = authToken;\n    }\n\n    clearAuthToken() {\n        this.state.authToken = null;\n        localStorage.removeItem(\"authToken\")\n    }\n\n    getAuthToken() {\n        return this.state.authToken;\n    }\n\n    isCurrentUserLoggedIn() {\n        return this.getAuthToken() != null;\n    }\n\n    _getRequestHeaders() {\n        if (!this.isCurrentUserLoggedIn())\n            return {'Content-Type': 'application/json'};\n        else\n            return {\"Authorization\": \"Bearer \" + this.getAuthToken(), 'Content-Type': 'application/json'}\n    }\n\n    /** User-based functions **/\n    getCurrentUser() {\n        if (!this.isCurrentUserLoggedIn())\n            return null;\n\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/me/\", {headers: this._getRequestHeaders()}).then(response => response.json()).then((response) => {\n                if (response.success)\n                    resolve(response.current_user);\n                else\n                    reject(response.error);\n            })\n        });\n    }\n\n    // Implemented\n    login(email, password) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/login/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": email, \"password\": password})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        this.setAuthToken(response.auth_token);\n                        this.notifyCallbacks({type: \"auth\", action: \"login\"});\n                        resolve(response.auth_token);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    logout() {\n        this.clearAuthToken();\n        this.notifyCallbacks({type: \"auth\", action: \"logout\"});\n    }\n\n    // Implemented\n    register(email, password) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/register/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": email, \"password\": password})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        this.setAuthToken(response.auth_token);\n                        this.notifyCallbacks({type: \"auth\", action: \"login\"});\n                        resolve(response.auth_token);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    changePassword(existingPassword, newPassword) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/change_password/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"existing_password\": existingPassword, \"new_password\": newPassword})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    sendPasswordTokenEmail(userEmail) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/send_password_recovery_email/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": userEmail})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    setNewPassword(userEmail, newPassword, passwordToken) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/set_new_password/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders(),\n                body: JSON.stringify({\"email\": userEmail, \"password_token\": passwordToken, \"new_password\": newPassword})\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    addFavoritePodcastById(podcastId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\" + podcastId + \"/add/\", {\n                method: 'POST',\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    checkFavoritePodcast(podcastId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\" + podcastId + \"/check/\", {\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.has_favorited_podcast);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    // Implemented\n    removeFavoritePodcastById(podcastId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\" + podcastId + \"/remove/\", {\n                method: 'DELETE',\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getFavoritePodcasts() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/favorite_podcasts/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.favorite_podcasts);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getHistory() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/history/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.history);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    clearHistory() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/user/history/clear/\", {\n                method: \"DELETE\",\n                headers: this._getRequestHeaders()\n            }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(true);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n\n    /** Search-based functions **/\n    // Implemented unfiltered search to toast\n    searchPodcasts(text_query, filters) {\n        var url_query = filters;\n        url_query.q = text_query;\n        var queryString = querystring(url_query);\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/podcasts/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    /* Auxiliary search methods for input autocomplete */\n    searchDepartments(query) {\n        var queryString = querystring({q: query});\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/departments/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getAllCourseCodes() {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/get_all_course_codes/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    searchProfessors(query) {\n        var queryString = querystring({q: query});\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/professors/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    searchQuarters(query) {\n        var queryString = querystring({q: query});\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/search/quarters/\" + queryString, {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.results);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    /** Podcast-based functions **/\n    getPodcastSnippet(blobId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/podcasts/blobs/\" + blobId + \"/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve({podcast: response.podcast, podcast_blob: response.podcast_blob});\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getPodcastMetadata(podcastId) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/podcasts/\" + podcastId + \"/\", {headers: this._getRequestHeaders()}).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response.podcast);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n\n    getPodcastTranscript(podcastId, sentence_split = 5) {\n        return new Promise((resolve, reject) => {\n            fetch(\"/api/podcasts/\" + podcastId + \"/transcript/?sentence_split=\" + sentence_split,\n                {\n                    headers: this._getRequestHeaders(),\n                }).then(response => response.json())\n                .then((response) => {\n                    if (response.success) {\n                        resolve(response);\n                    } else {\n                        reject(response.error);\n                    }\n                })\n        });\n    }\n}\n\nexport default new APIClient();",
    "import React, {Component} from 'react';\nimport APIClient from \"../api/APIClient\";\nimport './_Components.css';\n\nclass Signup extends Component {\n    state = {\n        email: '',\n        pass: '',\n        verify: ''\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        document.getElementById('emailInput').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailError').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailError').innerHTML = \"\";\n        document.getElementById('verifyInput').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('passInput').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('passNoMatch').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('passNoMatch').innerHTML = \"\";\n        document.getElementById('passTitle').style.marginTop = \"75px\";\n        document.getElementById('confirmTitle').style.marginTop = \"75px\";\n        document.getElementById('signButton').style.marginTop = \"75px\";\n\n\n        // Check if the email is in \"email format\" ___@___.___\n        if(!this.validateEmail(this.state.email)) {\n          document.getElementById('emailInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('emailError').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('emailError').innerHTML = \"Please enter a valid email.\";\n          document.getElementById('passTitle').style.marginTop = \"35px\";\n          return;\n        }\n\n        // Checks if password and verify password match\n        if(this.state.pass !== this.state.verify) {\n          document.getElementById('verifyInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').innerHTML = \"Passwords do not match.\";\n          document.getElementById('signButton').style.marginTop = \"35px\";\n          return;\n        }\n        \n        if (this.state.pass.length < 4) {\n          document.getElementById('verifyInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').style.color = \"rgba(207, 70, 70, 0.93)\";\n          document.getElementById('passNoMatch').innerHTML = \"Password must be at least 4 characters.\"\n          document.getElementById('signButton').style.marginTop = \"35px\";\n          return;\n        }\n\n        APIClient.register(this.state.email, this.state.pass).then((authToken) => {\n            window.location.reload();\n        }).catch(e => {\n            document.getElementById('emailInput').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailError').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailError').innerHTML = \"Account already exists.\";\n            document.getElementById('passTitle').style.marginTop = \"35px\";\n        });\n    }\n\n    validateEmail(email) {\n        var re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n      }\n\n    render(){\n        return(\n            <div className='navpop'>\n                <div className='header'>\n                    <h1>SIGN UP</h1>\n                    <br></br>\n                    <h2>Create an account below</h2>\n                </div>\n\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field' id=\"emailInput\">\n                        <p>Email</p>\n                        <br></br>\n                        <input \n                        type = 'text'\n                        className ='searchbar' \n                        name = 'email'\n                        value = {this.state.email} \n                        onChange={e => this.change(e)} />\n                        <p id='emailError'></p>\n                    </div>\n\n                    <div className='field' id=\"passInput\">\n                        <p id='passTitle' style={{marginTop: '75px'}}>Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'pass'\n                        value = {this.state.pass} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <div className='field' id=\"verifyInput\">\n                        <p id='confirmTitle' style={{marginTop: '75px'}}>Password Confirmation</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'verify'\n                        value = {this.state.verify} \n                        onChange={e => this.change(e)} />\n                        <p id='passNoMatch'></p>\n                    </div>\n\n                    <button id='signButton' className='center' onClick={e => this.onSubmit(e)}>SIGN UP</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Signup;",
    "import React, {Component} from 'react';\nimport './_Components.css';\nimport APIClient from \"../api/APIClient.js\";\n\nclass Login extends Component {\n    state = {\n        email: '',\n        pass: '',\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n        document.getElementById('emailLogin').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailLoginError').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('emailLoginError').innerHTML = \"\";\n        document.getElementById('invalidLogin').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('invalidLoginError').style.color = \"rgba(0,0,0,.65)\";\n        document.getElementById('invalidLoginError').innerHTML = \"\";\n        document.getElementById('titulo').style.marginTop = \"75px\";\n        document.getElementById('loginConfirm').style.marginTop = \"75px\";\n\n        if(!this.validateEmail(this.state.email)) {\n            document.getElementById('emailLogin').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailLoginError').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('emailLoginError').innerHTML = \"Please enter a valid email.\";\n            document.getElementById('titulo').style.marginTop = \"35px\";\n            return;\n        }\n\n        APIClient.login(this.state.email, this.state.pass).then((authToken) => {\n            window.location.reload();\n        }).catch(e => {\n            document.getElementById('invalidLogin').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('invalidLoginError').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('invalidLoginError').innerHTML = \"Invalid username or password.\";\n            document.getElementById('loginConfirm').style.marginTop = \"35px\";\n            // @David\n        });\n    }\n\n    validateEmail(email) {\n        var re = /\\S+@\\S+\\.\\S+/;\n        return re.test(email);\n    }\n\n    render(){\n        return(\n            <div className='navpop'>\n                <div className='header'>\n                    <h1>LOG IN</h1>\n                    <br></br>\n                    <h2>Enter your details below</h2>\n                </div>\n\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field' id='emailLogin'>\n                        <p>Email</p>\n                        <br></br>\n                        <input \n                        type = 'text'\n                        className ='searchbar' \n                        name = 'email'\n                        value = {this.state.email} \n                        onChange={e => this.change(e)} />\n                        <p id='emailLoginError'></p>\n                    </div>\n\n                    <div className='field' id='invalidLogin'>\n                        <p style={{marginTop: '75px'}} id='titulo'>Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'pass'\n                        value = {this.state.pass} \n                        onChange={e => this.change(e)} />\n                        <p id='invalidLoginError'></p>\n                    </div>\n\n                    <button id='loginConfirm' className='center' onClick={e => this.onSubmit(e)}>LOG IN</button>\n                </form>\n                <a href='/forgot_password'>Forgot your password?</a>\n            </div>\n        );\n    }\n}\n\nexport default Login;",
    "import React, {Component} from 'react';\nimport Popup from 'reactjs-popup';\nimport Signup from './Signup.js';\nimport Login from './Login.js';\nimport './_Components.css';\nimport APIClient from \"../api/APIClient.js\";\nimport {toast} from 'react-toastify';\n\n\nclass Navbar extends Component {\n\n    constructor() {\n        super();\n        APIClient.addCallback((msg) => {\n            if (msg.type === \"auth\") {\n                // trigger a re-render\n                this.setState({authAction: msg.action});\n            }\n        });\n    }\n\n    redirect(e, route) {\n        e.preventDefault();\n        window.location.assign(route);\n    }\n\n    logout(e) {\n        e.preventDefault();\n        APIClient.logout();\n        toast(\"Logged Out\", {className: 'popup'});\n        window.location.reload();\n    }\n\n    render() {\n        // Render login navbar based on login\n        const loggedin = APIClient.isCurrentUserLoggedIn();\n\n        let logout_buttons =\n            <div>\n                <Popup trigger={<li>\n                    <button>LOG IN</button>\n                </li>} modal contentStyle={{height: '700px', width: '500px'}} closeOnDocumentClick>\n                    {close => (\n                        <div>\n                            <Login/>\n                            <button className='close close1' onClick={close}>\n                                &times;\n                            </button>\n                        </div>\n                    )}</Popup>\n                <Popup trigger={<li>\n                    <button>SIGN UP</button>\n                </li>} modal contentStyle={{height: '700px', width: '500px'}} closeOnDocumentClick>\n                    {close => (\n                        <div>\n                            <Signup/>\n                            <button className='close close2' onClick={close}>\n                                &times;\n                            </button>\n                        </div>\n                    )}</Popup>\n                <li>\n                    <button onClick={e => this.redirect(e, '/about')}>ABOUT</button>\n                </li>\n            </div>;\n\n        let login_buttons =\n            <div>\n                <Popup trigger={<li>\n                    <button className='dropper'>MY ACCOUNT</button>\n                </li>} position=\"bottom center\" on=\"hover\" closeOnDocumentClick mouseLeaveDelay={0} mouseEnterDelay={0}\n                       contentStyle={{padding: '0px', border: 'none'}}\n                       arrow={false}>\n                    <div className='dropdown'>\n                        <button onClick={e => this.redirect(e, '/history')}>HISTORY</button>\n                        <button onClick={e => this.redirect(e, '/favorites')}>FAVORITES</button>\n                        <button onClick={e => this.redirect(e, '/user')}>SETTINGS</button>\n                        <button onClick={e => this.logout(e)}>LOG OUT</button>\n                    </div>\n                </Popup>\n                <li>\n                    <button onClick={e => this.redirect(e, '/about')}>ABOUT</button>\n                </li>\n            </div>;\n\n        return (\n            <div className='navbar'>\n                <button className='logo' onClick={e => this.redirect(e, '/')}>SCRIPTOR</button>\n                <ul className='outer'>\n                    {loggedin ? login_buttons : logout_buttons}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Navbar;\n",
    "import React, {Component} from 'react';\nimport './_Components.css';\nimport { withRouter } from 'react-router-dom';\nimport APIClient from \"../api/APIClient.js\";\nimport { toast } from 'react-toastify';\n\n\nclass Search extends Component {\n    state = {\n        query: '',\n        department: '',\n        course: '',\n        professor: '',\n        quarter: '',\n        showFilters: false,\n        results: [],\n        departments: [],\n        courses: [],\n        quarters: [],\n        professors: [],\n        course_codes: {},\n        depExists: false,\n        course_numbers: []\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value}, this.updateFilters);\n    }\n\n    \n    updateFilters() {\n        if(this.state.query.length > 0 || (this.state.department.length > 0 || this.state.course.length > 0\n        || this.state.professor.length > 0 || this.state.quarter.length > 0)) {\n            this.setState({showFilters: true});\n        } else {\n            this.setState({showFilters: false});\n        }\n    }\n\n\n    onSubmit(e) {\n        if(this.state.query.length === 0){\n            document.getElementById('noResults').style.color = \"rgba(207, 70, 70, 0.93)\";\n            document.getElementById('noResults').innerHTML = \"Please enter a query.\";\n            return;\n       }\n        this.props.history.push({\n        pathname: '/results',\n        search:\n            \"?query=\" + this.state.query\n            + \"&department=\" + this.state.department\n            + \"&course=\" + this.state.course\n            + \"&professor=\" + this.state.professor\n            + \"&quarter=\" + this.state.quarter,\n                    \n        state: {query: this.state.query, department: this.state.department, course: this.state.course, professor: this.state.professor, quarter: this.state.quarter}\n        })\n    }\n                   \n    \n    handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            toast(\"Press the Search Button\", {className: 'popup'});\n         }\n    }\n\n    checkDepExists(dep){\n        if(this.state.course_codes.hasOwnProperty(dep.toUpperCase())){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    componentDidMount(){\n        APIClient.searchProfessors(\"\").then(response => {\n            this.setState({professors: response})\n            }  \n       );\n        APIClient.searchQuarters(\"\").then(response => {\n            this.setState({quarters: response})\n            }  \n       );\n        APIClient.searchDepartments(\"\").then(response => {\n            this.setState({departments: response})\n            }  \n       );\n        APIClient.getAllCourseCodes().then(response => {\n            var course_to_codes = {};\n            for (var i = 0; i < response.length; i++) {\n                 var split = response[i].split(' ');\n                 if(!course_to_codes.hasOwnProperty(split[0])){\n                 course_to_codes[split[0].trim()] = [split[1].trim()];\n             }else{\n               course_to_codes[split[0].trim()].push(split[1].trim());\n             }\n            }\n            this.setState({course_codes: course_to_codes}) \n            }\n        )\n    }\n\n    render() {      \n\n        var course_numbers = [];   \n        let filters;\n        if(this.state.showFilters) {\n            filters = \n                <div className='filters'>\n                    <div className='filterinputs'>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='filterbar' \n                            name = 'department'\n                            list = \"department\"\n                            value = {this.state.department} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"department\">\n                            {this.state.departments.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ={!this.checkDepExists(this.state.department)  ? 'course_number' : 'course_number_active'}\n                            name = 'course'\n                            list = 'course_number'\n                            value = {this.state.course} \n                            disabled = {!this.checkDepExists(this.state.department) ? true : false}\n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                        <datalist id=\"course_number\">\n                        {this.checkDepExists(this.state.department) ? course_numbers = this.state.course_codes[this.state.department.toUpperCase()] : course_numbers = [] }\n                         {course_numbers.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input\n                            autoComplete = 'off'                    \n                            type = 'text'\n                            className ='filterbar' \n                            name = 'professor'\n                            value = {this.state.professor} \n                            list = 'professor'\n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} \n                            />\n                        <datalist id=\"professor\">\n                            {this.state.professors.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='filterbar' \n                            name = 'quarter'\n                            list = 'quarter'\n                            value = {this.state.quarter} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                         <datalist id=\"quarter\">\n                            {this.state.quarters.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                    </div>\n                    <p style={{marginTop: '5px'}}>Department</p>\n                    <p>Course Number</p>\n                    <p>Professor</p>\n                    <p>Quarter</p>       \n                </div>\n        } else {\n            filters = null;\n        }\n\n        return (\n            <div className={this.state.showFilters ? 'searchform active' : 'searchform'}>\n                <form className='col-xs-1 text-center'>\n                    <h1 className='title'>SCRIPTOR</h1>\n                    <input \n                    type = 'text'\n                    className ='searchbar' \n                    name = 'query'\n                    placeholder = 'What do you want to learn?'\n                    value = {this.state.query} \n                    onChange={e => this.change(e)} />\n                    {filters}\n                    <button className='center' onClick={e => this.onSubmit(e)}>Search</button>\n                </form> \n            </div>\n        )\n    }\n}\n\nexport default withRouter(Search);",
    "import React from 'react';\nimport Search from './components/Search.js';\nimport './Home.css';\n\nfunction Home() {\n  return (\n    <div>\n      <div className=\"parent\">\n        <Search />\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n",
    "import React from 'react';\nimport './About.css';\nimport Sabeel from './assets/Sabeel.png';\nimport Raghavan from './assets/Raghavan.png';\nimport Kelvin from './assets/Kelvin.png';\nimport Subhash from './assets/Subhash.png';\nimport Amithab from './assets/Amithab.png';\nimport Nikhil from './assets/Nikhil.png';\nimport Pranav from './assets/Pranav.png';\nimport Ayush from './assets/Ayush.png';\nimport David from './assets/David.png';\nimport Shuu from './assets/Shuu.png';\nimport Som from './assets/Som.png';\nimport Logo from './assets/ScriptorLogo.jpg';\n\n\nfunction About() {\n  return (\n    <div className='about'>\n\t  \n\t  <h1>ABOUT US</h1>\n\t  \n\t  <div className='statement'>\n\t  \t<h3><u>Who are we?</u></h3>\n\t  \t<p style={{color: 'rgba(72,136,163,.93)'}}>Scriptor is developed and maintained by eleven undergraduates at the University of California, San \n\t\t\t  Diego. Each of us is on a pursuit of revolution - revolution against all that is improper, all that is impractical,\n\t\t\t  and all that is impossible. Our collective goals are simple: to better our world, to provide for our\n\t\t\t  community, and to strive to be the best individuals we can be. And so, with this pursuit in our hearts and with \n\t\t\t  these goals in our minds, we bring forth Scriptor.\n\t\t  </p>\n\t  \t<h3><u>About Scriptor</u></h3>\n\t  \t<p style={{color: 'rgba(72,136,163,.93)'}}>Scriptor is our solution for streamlining studying and reviewing at the University of California,\n\t\t  San Diego. No longer do students have to manually search for specific information in the vast collection of knowledge that is the UC San Diego Podcast System; \n\t\t  rather, with Scriptor, they can simply search for the information they desire and be presented with the exact material they want. Scriptor connects users \n\t\t  with precise timestamps in podcasts that match the information they seek, efficiently parsing through the vast database of podcasts so students don't have to. \n\t\t  So, leave the searching to us and focus on learning. Happy podcasting!</p>\n\t  </div>\n\n\t  <div className='groupPhoto'>\t\n\t  \t<img src={Logo}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  </div>\n\n\t  <div className='team'> \n\t  <h1>MEET THE TEAM</h1>\n\t  </div>\n\n\t  <div className='teamList'>\n\t  \t<div className='teamRow1'>\n\t  \t<img className='profile' src={Subhash}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Subhash Ramesh</p>\n\t  \t<p className='description'>Software Architect</p>\n\t  \t</div>\n\n\t\t<div className='teamRow1'>\n\t  \t<img className='profile' src={Sabeel}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Sabeel Mansuri</p>\n\t  \t<p className='description'>User Interface Specialist</p>\n\t  \t</div>\n\n\t\t<div className='teamRow1'>\n\t  \t<img className='profile' src={Nikhil}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Nikhil Pathak</p>\n\t  \t<p className='description'>Software Development Lead</p>\n\t  \t</div>\n\n\t\t<div className='teamRow2'>\n\t  \t<img className='profile' src={Ayush}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Ayush Shukla</p>\n\t  \t<p className='description'>Quality Assurance Lead</p>\n\t  \t</div>\n\n\t\t<div className='teamRow2'>\n\t  \t<img className='profile' src={Kelvin}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Kelvin Chan</p>\n\t  \t<p className='description'>Senior System Analyst</p>\n\t  \t</div>\n\t  \t\n\t  \t<div className='teamRow2'>\n\t  \t<img className='profile' src={Pranav}\t\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Pranav Narasimmaraj</p>\n\t  \t<p className='description'>Algorithm Specialist</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow2'> \n\t  \t<img className='profile' src={Amithab}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Amithab Arumugam</p>\n\t  \t<p className='description'>Software Development Lead</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={Raghavan}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Raghavan Kope</p>\n\t  \t<p className='description'>Database Specialist</p>\n\t  \t</div>\n\t  \t\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={Som}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Som Dhar</p>\n\t  \t<p className='description'>Business Analyst</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={Shuu}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>Shuu Yoshida</p>\n\t  \t<p className='description'>User Interface Specialist</p>\n\t  \t</div>\n\n\t  \t<div className='teamRow3'>\n\t  \t<img className='profile' src={David}\n\t  \t\talt=\"Error\"\n\t  \t\tstyle={{width: '100%'}}/>\n\t  \t<p className='name'>David Febles</p>\n\t  \t<p className='description'>Project Manager</p>\n\t  \t</div>\n\t  </div>\n    </div>\n  );\n}\n\nexport default About;\n",
    "import React, {Component} from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './_Components.css';\nimport APIClient from '../api/APIClient';\n\nclass Changepass extends Component {\n    state = {\n        oldpass: '',\n        newpass: '',\n        verify: ''\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.state.newpass.length < 4) {\n            toast(\"Password must be at least 4 characters.\", {className: 'popup error'});\n            return;\n        }\n\n        if(this.state.newpass !== this.state.verify) {\n            toast(\"New Passwords Don't Match\", {className: 'popup error'});\n            return;\n        }\n\n        APIClient.changePassword(this.state.oldpass, this.state.newpass).then((authToken) => {\n            toast(\"Password Updated\", {className: 'popup'});\n            this.setState({oldpass: ''});\n            this.setState({newpass: ''});\n            this.setState({verify: ''});\n        }).catch(e => {\n            toast(\"Invalid Old Password\", {className: 'popup error'});\n        }); \n\n    }\n\n    render(){\n        return(\n            <div className='settings'>\n                <div className='header'>\n                    <h1>CHANGE PASSWORD</h1>\n                    <br></br>\n                </div>\n\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field'>\n                        <p>Old Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'oldpass'\n                        value = {this.state.oldpass} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <div className='field'>\n                        <p>New Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'newpass'\n                        value = {this.state.newpass} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <div className='field'>\n                        <p>Verify New Password</p>\n                        <br></br>\n                        <input \n                        type = 'password'\n                        className ='searchbar' \n                        name = 'verify'\n                        value = {this.state.verify} \n                        onChange={e => this.change(e)} />\n                    </div>\n\n                    <button className='center' onClick={e => this.onSubmit(e)}>RESET PASSWORD</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Changepass;",
    "import React from 'react';\nimport Changepass from './components/Changepass.js'\nimport APIClient from './api/APIClient';\nimport './User.css';\n\nfunction User() {\n  const loggedin = APIClient.isCurrentUserLoggedIn();\n  if(loggedin) {\n    return (\n      <div>\n            <Changepass />\n      </div>\n    );\n  } else {\n    window.location.assign('/');\n  }\n}\n\nexport default User;\n",
    "import React, {Component} from 'react';\nimport APIClient from './api/APIClient.js';\nimport './History.css';\nimport {toast} from 'react-toastify';\n\n\nclass History extends Component {\n  state = {\n    queries: [],\n    podcasts: []\n  };\n  \n  returnURL(item){\n      if(item.video_url.length < 1){\n          item.video_url = item.audio_url\n      }\n      return item.video_url\n  }\n\n  formatName(back){\n    const quarter = back.quarter.split(' ');\n    const qString = quarter[0].substr(0,1) + quarter[1].substr(2,3);\n    var prof = back.professor;\n    prof = prof.substring(prof.indexOf(',') + 1, prof.length) + \" \" +\n        prof.substring(0, prof.indexOf(','))\n    return back.department + ' ' + back.course_num + \" - \" + back.title + \" [\" + back.section_id + \" - \" + qString + \"] | \" + prof + \" | Lecture \" + back.lecture_num\n  }\n\n  componentDidMount() {\n    APIClient.getHistory().then(response => {\n      response.forEach(element => {\n        if(element.type === 'SEARCH_QUERY') {\n          if(this.state.queries.indexOf(element.title) === -1) {\n            this.setState(prevState => ({queries: [...prevState.queries, element.title]}));\n          }\n        } else {\n            const name = this.formatName(element.podcast);\n            if(this.state.podcasts.indexOf(name) === -1) {\n              this.setState(prevState => ({podcasts: [...prevState.podcasts, name]}));\n            }\n        }\n      });\n    });\n  }\n\n  onClear(e) {\n    APIClient.clearHistory();\n    this.setState({queries: []}); \n    this.setState({podcasts: []});\n    toast(\"History Cleared\", {className: 'popup'});\n  }\n\n  render() {\n    if(APIClient.isCurrentUserLoggedIn()) {\n      return (\n        <div className = \"history\">\n          <div className='header'>\n            <h1>HISTORY</h1>\n            <button className='center' onClick={e => this.onClear(e)}>Clear</button>\n          </div>\n          <div className = \"search\" >\n            <h1> You've Searched For...\n              <div>\n                <ul>\n                {this.state.queries.map((item, index)  => (\n                  <li className = 'searches' key={index}>\n                    <div>\n                      {item}\n                    </div>\n                  </li>\n                ))}\n                </ul>\n              </div>\n            </h1>\n            <h2>You've Found...\n                <div>\n                  <ul>\n                  {this.state.podcasts.map((item, index)  => (\n                    <li className = 'results' key={index}>\n                      <div>{item}</div>\n                    </li>\n                  ))}\n                </ul>\n                </div>\n              </h2>\n          </div>\n        </div>\n      );\n    } else {\n      window.location.assign('/');\n    }\n  }\n}\nexport default History;\n",
    "import React, {Component} from 'react';\nimport APIClient from '../api/APIClient.js';\nimport './_Components.css';\nimport starOff from '../assets/starOff.png';\nimport starOn from '../assets/starOn.png';\nimport {toast} from 'react-toastify';\n\n\nclass FavResult extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {isFav : [], podcasts: []};\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(e, index, item) {\n        e.preventDefault();\n\n        const newFav = [...this.state.isFav]\n        newFav[index] = !this.state.isFav[index]\n\n        if(!newFav[index]) {\n            APIClient.removeFavoritePodcastById(item.id).then(response => {\n                toast(\"Removed from Favorites\", {className: 'popup'});\n            });\n        } else {\n            APIClient.addFavoritePodcastById(item.id).then(response => {\n                toast(\"Added to Favorites\", {className: 'popup'});\n            });\n        }   \n        this.setState(state => ({\n            isFav: newFav\n        }));\n    }\n\n    formatTitle(item) {\n        // Add department and coursenum\n        let fulltitle = item.department + ' ' + item.course_num;\n\n        // Add truncated coursename\n        var coursename = item.title;\n        if(coursename.length > 25) {\n            coursename = coursename.substring(0,25) + '...';\n        }\n        fulltitle += ' - ' + coursename;\n\n        // Add section id\n        var quarter = item.quarter;\n        quarter = quarter.substring(0, 2).toUpperCase() + quarter.substring(quarter.length - 2, quarter.length);\n        fulltitle += ' [' + item.section_id + '-' + quarter + ']';\n\n        // Add truncated professor\n        var professor = item.professor;\n        if(professor.length > 25) {\n            professor = professor.substring(0,25) + '...';\n        }\n        // Swaps first and last name\n        professor = professor.substring(professor.indexOf(',') + 1, professor.length) + \" \" +\n                    professor.substring(0, professor.indexOf(','))\n        fulltitle += ' | ' + professor;\n\n        // Add lecturenum\n        fulltitle += ' | Lecture ' + item.lecture_num;\n\n        return fulltitle;\n  }\n\n    componentDidMount() {\n        APIClient.getFavoritePodcasts().then(response => {\n            this.setState({podcasts: response});\n            this.setState({isFav: this.state.podcasts.map((element) => true)});\n        });\n    }\n\n    render(){\n        return(\n            <div className='favorites'>\n                <div className='header'>\n                    <h1>FAVORITES</h1>\n                </div>\n                <div className = 'favList'>\n                        <ul>\n                        {this.state.podcasts.map((item, index)  => (\n                            <li className = 'favResult' key={index}>\n                                <div className='each'>\n                                    <div>{this.formatTitle(item)}\n                                        <img onClick={(e) => {this.handleClick(e, index, item)}}\n                                        src={this.state.isFav[index] ? starOn : starOff}\n                                        alt=\"\" width=\"58\" height=\"58\"/>\n                                    </div>\n                                </div>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n export default FavResult;\n",
    "import React from 'react';\nimport Favorite from './components/FavResult.js';\nimport APIClient from './api/APIClient.js';\nimport './Favorites.css';\n\nfunction Favorites() {\n  const loggedin = APIClient.isCurrentUserLoggedIn();\n\n  if(loggedin) {\n    return (\n      <div>\n        <Favorite />\n      </div>\n    );\n  } else {\n    window.location.assign('/');\n  }\n}\n\nexport default Favorites;\n",
    "import React, {Component} from 'react';\nimport {toast} from 'react-toastify';\nimport './PodcastPage.css';\nimport APIClient from './api/APIClient.js';\nimport queryString from 'query-string';\nimport {Link} from 'react-router-dom';\n\nclass PodcastPage extends Component {\n    values = queryString.parse(this.props.location.search);\n    state = {\n        isFavorited: false\n    };\n    \n    formatTitle() {\n        // Add department and coursenum\n        let fulltitle = this.values.department + ' ' + this.values.course_num;\n\n        // Add truncated coursename\n        var coursename = this.values.title;\n        if(coursename.length > 25) {\n            coursename = coursename.substring(0,25) + '...';\n        }\n        fulltitle += ' - ' + coursename;\n\n        // Add section id\n        fulltitle += ' [' + this.values.section_id + ']';\n\n        // Add truncated professor\n        var professor = this.values.professor;\n        if(professor.length > 12) {\n            professor = professor.substring(0,12) + '...';\n        }\n        fulltitle += ' | ' + professor;\n\n        // Add lecturenum\n        fulltitle += ' | Lecture ' + this.values.lecture_num;\n\n        return fulltitle;\n    }\n\n    formatVideoLink(mainurl) {\n        return (mainurl + '#t=' + this.values.starting_timestamp_second);\n    }\n\n    formatRelevantText() {\n        if(this.values.transcription_blob.length > 950) {\n            return this.values.transcription_blob.substring(0, 950) + '...';\n        }\n        return this.values.transcription_blob;\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        if(!APIClient.isCurrentUserLoggedIn()) {\n            toast(\"Log In to Favorite\", {className: 'popup error'});\n            return;\n        } \n        \n        APIClient.checkFavoritePodcast(this.values.podcast_id).then(response => {\n            if(response) {\n                APIClient.removeFavoritePodcastById(this.values.podcast_id).then(response => {\n                    toast(\"Removed from Favorites\", {className: 'popup'});\n                });\n                this.setState({isFavorited: false});\n                document.getElementById('togglebutton').style.color = \"rgba(255,255,255,1)\";\n                document.getElementById('togglebutton').style.border = \"none\";\n                document.getElementById('togglebutton').style.backgroundColor = \"rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').innerHTML = \"FAVORITE\";\n            } else {\n                APIClient.addFavoritePodcastById(this.values.podcast_id).then(response => {\n                    toast(\"Added to Favorites\", {className: 'popup'});\n                });\n                this.setState({isFavorited: true});\n                document.getElementById('togglebutton').style.color = \"rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').style.border = \"1px solid rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').style.backgroundColor = \"rgba(255,255,255,1)\";\n                document.getElementById('togglebutton').innerHTML = \"UNFAVORITE\";\n            }   \n        });\n\n    }\n    \n    relocate(e) {\n        e.preventDefault();\n        window.location.assign(this.values.ucsd_podcast_video_url);\n    }\n\n    componentDidMount() {\n        if(performance.navigation.type === 2) {\n            window.location.reload();\n        }\n        APIClient.checkFavoritePodcast(this.values.podcast_id).then(response => {\n            if(response) {\n                this.setState({isFavorited: true});\n                document.getElementById('togglebutton').style.color = \"rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').style.border = \"1px solid rgba(72,136,163,.93)\";\n                document.getElementById('togglebutton').style.backgroundColor = \"rgba(255,255,255,1)\";\n                document.getElementById('togglebutton').innerHTML = \"UNFAVORITE\";\n            } else {\n                this.setState({isFavorited: false});\n            }   \n        });\n        APIClient.getPodcastSnippet(this.values.blob_id);\n    }\n\n    render(){\n        let mainurl;\n        this.values.ucsd_podcast_video_url === '' ? mainurl = this.values.ucsd_podcast_audio_url : mainurl = this.values.ucsd_podcast_video_url;\n        return(\n            <div className='podpage'>\n                <h1 className='title'><a className='link' href={mainurl}>{this.formatTitle()}</a></h1>\n                <div className='toplayer'>\n                    <video className='vid' controls autoPlay>\n                        <source src={this.formatVideoLink(mainurl)}/>\n                    </video>\n                    <div className='text'>\n                        <h3>Speech-to-Text</h3>\n                        <p style={{marginTop: '22px'}}>{this.formatRelevantText()}</p>\n                        <Link\n                        className='link'\n                        to={{\n                        pathname: \"/transcript\",\n                        search: \"?podcast_id=\" + this.values.podcast_id \n                        }}\n                        ><u>View Full Transcript</u></Link>\n                    </div>\n                </div>\n                <div className=\"btn-group pagewide fullgroup\">\n                    <div className=\"btn-group pagewide\">\n                        <button type=\"button\" className=\"btn\" id='togglebutton' onClick={e => this.onSubmit(e)}>FAVORITE</button>\n                    </div>\n                    <div className=\"btn-group pagewide\">\n                        <button type=\"button\" className=\"btn\" onClick={e => this.relocate(e)}>GO TO PODCAST</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PodcastPage;",
    "import React, {Component} from 'react';\nimport './_Components.css';\nimport { withRouter } from 'react-router-dom';\nimport APIClient from \"../api/APIClient.js\";\n\n\n\nclass ResSearch extends Component {\n    query = \"\";\n    noResponse = false;\n    state = {\n        query: '',\n        department: '',\n        course: '',\n        professor: '',\n        quarter: '',\n        showFilters: false,\n        results: [],\n        departments: [],\n        courses: [],\n        quarters: [],\n        professors: [],\n        course_codes: {},\n        depExists: false,\n        course_numbers: [],\n\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value}, this.updateFilters);\n    }\n    \n    updateFilters() {\n        if(this.state.query.length > 0 || (this.state.department.length > 0 || this.state.course.length > 0\n        || this.state.professor.length > 0 || this.state.quarter.length > 0)) {\n            this.setState({showFilters: true});\n        } else {\n            this.setState({showFilters: false});\n        }\n    }\n\n\n    onSubmit(e) {\n     this.props.history.push({\n     search:\n        \"?query=\" + this.state.query\n        + \"&department=\" + this.state.department\n        + \"&course=\" + this.state.course\n        + \"&professor=\" + this.state.professor\n        + \"&quarter=\" + this.state.quarter,\n     state: {query: this.state.query, department: this.state.department, course: this.state.course, professor: this.state.professor, quarter: this.state.quarter}\n    })\n }\n\n\n    checkDepExists(dep){\n        if(this.state.course_codes.hasOwnProperty(dep.toUpperCase())){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    componentDidMount(){\n        APIClient.searchProfessors(\"\").then(response => {\n            this.setState({professors: response})\n            }  \n       );\n        APIClient.searchQuarters(\"\").then(response => {\n            this.setState({quarters: response})\n            }  \n       );\n        APIClient.searchDepartments(\"\").then(response => {\n            this.setState({departments: response})\n            }  \n       );\n        APIClient.getAllCourseCodes().then(response => {\n            var course_to_codes = {};\n            for (var i = 0; i < response.length; i++) {\n                 var split = response[i].split(' ');\n                 if(!course_to_codes.hasOwnProperty(split[0])){\n                 course_to_codes[split[0].trim()] = [split[1].trim()];\n             }else{\n               course_to_codes[split[0].trim()].push(split[1].trim());\n             }\n            }\n            this.setState({course_codes: course_to_codes}) \n            }\n        )\n    }\n\n    handleEnter = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            this.onSubmit(e);         }\n    }\n\n\n    render() {  \n        var course_numbers = [];                    \n        let filters;\n        if(this.state.showFilters) {\n            filters = \n                <div className='resfilters'>\n                    <div className='resfilterinputs'>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='resfilterbar' \n                            name = 'department'\n                            list = 'department'\n                            value = {this.state.department} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)}/>\n                        <datalist id=\"department\">\n                            {this.state.departments.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ={!this.checkDepExists(this.state.department)  ? 'course_number' : 'course_number_active'}\n                            name = 'course'\n                            list = 'course_number'\n                            disabled = {this.state.department.length === 0 ? true : false}\n                            value = {this.state.course} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                        <datalist id=\"course_number\">\n                        {this.checkDepExists(this.state.department) ? course_numbers = this.state.course_codes[this.state.department.toUpperCase()] : course_numbers = [] }\n                         {course_numbers.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='resfilterbar' \n                            name = 'professor'\n                            list = 'professor'\n                            value = {this.state.professor} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                        <datalist id=\"professor\">\n                            {this.state.professors.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                        <input \n                            autoComplete = 'off'\n                            type = 'text'\n                            className ='resfilterbar' \n                            name = 'quarter'\n                            list = 'quarter'\n                            value = {this.state.quarter} \n                            onChange={e => this.change(e)} \n                            onKeyDown={e => this.handleEnter(e)} />\n                         <datalist id=\"quarter\">\n                            {this.state.quarters.map((item, index)  => (\n                             <option key = {index} value={item}></option>\n                            ))}\n                        </datalist>\n                    </div>\n                    <p style={{marginTop: '5px'}}>Department</p>\n                    <p>Course Number</p>\n                    <p>Professor</p>\n                    <p>Quarter</p>\n                    \n                </div>\n        } else {\n            filters = null;\n        }\n\n        return (\n            <div className={'ressearchform'}>\n                <form className='col-xs-1 text-center'>\n                    <input \n                    type = 'text'\n                    className ='ressearchbar' \n                    name = 'query'\n                    placeholder = {this.props.query}\n                    value = {this.state.query} \n                    onChange={e => this.change(e)} />\n                    <p id=\"noResults\"></p>\n                    {filters}\n                    <button className='rescenter' onClick={e => this.onSubmit(e)}>Search</button>\n                </form> \n            </div>\n        )\n    }\n}\n\nexport default withRouter(ResSearch);",
    "import React, {Component} from 'react';\nimport './About.css';\nimport './Results.css';\nimport { Link } from 'react-router-dom';\nimport ResSearch from './components/ResSearch.js';\nimport APIClient from './api/APIClient.js';\nimport queryString from 'query-string';\n\n\n\n\nclass Results extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n            results: []\n\t\t}\n\t}\n\n\n\ncomponentDidMount(){\n       var values = queryString.parse(this.props.location.search);\n       if(values.query.length === 0) {\n        document.getElementById('noResults').style.color = \"rgba(207, 70, 70, 0.93)\";\n        document.getElementById('noResults').innerHTML = \"Please enter a query.\";\n        return;\n       }\n        APIClient.searchPodcasts(values.query, {dept: values.department, course_num: values.course, professor: values.professor, quarter: values.quarter}).then(response => {\n            if(response.length === 0){\n                document.getElementById('noResults').style.color = \"rgba(207, 70, 70, 0.93)\";\n                document.getElementById('noResults').innerHTML = \"No results found.\";\n                return;\n            }\n            response.forEach((element) => {\n                APIClient.getPodcastMetadata(element.podcast_id).then(back => {\n                    const quarter = back.quarter.split(' ');\n                    const qString = quarter[0].substr(0,1) + quarter[1].substr(2,3);\n                    var minutes = Math.floor(element.starting_timestamp_second / 60);\n                    var seconds = element.starting_timestamp_second % 60;    \n                    var updatedSeconds = ('0' + seconds).slice(-2);\n                    const timeStamp = minutes + \":\" + updatedSeconds;\n                    const vidUrl = back.ucsd_podcast_video_url;\n                    var prof = back.professor;\n                    prof = prof.substring(prof.indexOf(',') + 1, prof.length) + \" \" +\n                        prof.substring(0, prof.indexOf(','))\n                    var result = {description: back.department + ' ' + back.course_num + \" - \" + back.title + \" [\" + back.section_id + \" - \" + qString + \"] | \" + prof + \" | Lecture \" + back.lecture_num, \n                        blurb: element.transcription_blob, \n                        timestamp: timeStamp, \n                        url: vidUrl,\n                        podcast_id: element.podcast_id,\n                        blob_id: element.id,\n                        podcastPage: {\n                            department: back.department,\n                            course_num: back.course_num,\n                            title: back.title,\n                            section_id: back.section_id,\n                            professor: prof,\n                            lecture_num: back.lecture_num,\n                            ucsd_podcast_video_url: back.ucsd_podcast_video_url,\n                            starting_timestamp_second: element.starting_timestamp_second,\n                            transcription_blob: element.transcription_blob,\n                            ucsd_podcast_audio_url: back.ucsd_podcast_audio_url,\n                        }\n                    }\n                    this.setState(prevState => ({results: [...prevState.results, result]}));\n                    });\n                });\n        });\n    }\n\n\n\trender(){\n        var values = queryString.parse(this.props.location.search);\n\t\treturn (\n\t\t\t<div className = \"results\">\n            <ResSearch query= {values.query} department= {values.department} course_num = {values.course} quarter ={values.quarter} />\n\t\t\t\t{this.state.results.map((result, index) => (\n\t\t\t\t\t<div key={index}>\n\t\t\t\t\t\t<li className= \"description\"> \n                            <Link to={{ \n\t\t\t\t\t\t\tpathname: '/podcast',\n                            search:  \n                            \"?department=\" + result.podcastPage.department \n                            + \"&course_num=\" + result.podcastPage.course_num\n                            + \"&title=\" + encodeURIComponent(result.podcastPage.title)\n                            + \"&section_id=\" + result.podcastPage.section_id\n                            + \"&professor=\" + result.podcastPage.professor\n                            + \"&lecture_num=\" + result.podcastPage.lecture_num\n                            + \"&ucsd_podcast_video_url=\" + result.podcastPage.ucsd_podcast_video_url\n                            + \"&starting_timestamp_second=\" + result.podcastPage.starting_timestamp_second\n                            + \"&transcription_blob=\" + result.podcastPage.transcription_blob\n                            + \"&ucsd_podcast_audio_url=\" + result.podcastPage.ucsd_podcast_audio_url\n\t\t\t\t\t\t\t+ \"&podcast_id=\" + result.podcast_id\n\t\t\t\t\t\t\t+ \"&blob_id=\" + result.blob_id\n                             }}>\n                             {result.description}\n                            </Link> \n                         </li>\n\t\t\t\t\t\t<div className=\"times\">\n\t\t\t\t\t\t\t<li className= \"timeStamp\"> \n                            <Link to={{ \n\t\t\t\t\t\t\tpathname: '/podcast',\n                            search:  \n                            \"?department=\" + result.podcastPage.department \n                            + \"&course_num=\" + result.podcastPage.course_num\n                            + \"&title=\" + encodeURIComponent(result.podcastPage.title)\n                            + \"&section_id=\" + result.podcastPage.section_id\n                            + \"&professor=\" + result.podcastPage.professor\n                            + \"&lecture_num=\" + result.podcastPage.lecture_num\n                            + \"&ucsd_podcast_video_url=\" + result.podcastPage.ucsd_podcast_video_url\n                            + \"&starting_timestamp_second=\" + result.podcastPage.starting_timestamp_second\n                            + \"&transcription_blob=\" + result.podcastPage.transcription_blob\n                            + \"&ucsd_podcast_audio_url=\" + result.podcastPage.ucsd_podcast_audio_url\n                            + \"&podcast_id=\" + result.podcast_id\n                            + \"&blob_id=\" + result.blob_id\n                             }}>\n                             {result.timestamp}\n                            </Link > \n\t\t\t\t\t\t\t</li> \n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<li className= \"blurb\"> {result.blurb} </li>\n\t\t\t\t\t\t<div className =\"spacer\"></div>\n\t\t\t\t\t</div>\t\t\t\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Results;",
    "import React, {Component} from 'react';\nimport {toast} from 'react-toastify';\nimport './Forgotpass.css';\nimport APIClient from \"./api/APIClient\";\n\nclass Forgotpass extends Component {\n    state = {\n        email: '',\n        passwordToken: '',\n        newPassword: '',\n        sentVerificationEmail: false\n    };\n\n    change = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    onEmailFormSubmit(e) {\n        e.preventDefault();\n        APIClient.sendPasswordTokenEmail(this.state.email).then((success) => {\n            this.setState({sentVerificationEmail: true, email: this.state.email})\n        }).catch((err) => {\n            this.setState({sentVerificationEmail: false, email: ''});\n            toast.error(err, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        })\n    }\n\n    onResetPasswordFormSubmit(e) {\n        e.preventDefault();\n        APIClient.setNewPassword(this.state.email, this.state.newPassword, this.state.passwordToken).then((success) => {\n            toast(\"Your password has been changed.\", {\n                position: toast.POSITION.TOP_RIGHT\n            });\n\n            // Login the user & redirect them to the login page.\n            APIClient.login(this.state.email, this.state.newPassword).then(() => {\n                // Redirect the user to the home page.\n                this.props.history.push(\"/\");\n            })\n\n        }).catch((err) => {\n            toast.error(err, {\n                position: toast.POSITION.TOP_RIGHT\n            });\n        });\n    }\n\n    getForm() {\n        if (!this.state.sentVerificationEmail) {\n            return (\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field'>\n                        <p>Email</p>\n                        <br></br>\n                        <input\n                            type='text'\n                            className='searchbar'\n                            name='email'\n                            value={this.state.email}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n\n                    <button className='center' onClick={e => this.onEmailFormSubmit(e)}>RESET PASSWORD</button>\n                </form>\n            )\n        } else {\n            return (\n                <form className='col-xs-1 text-center navform'>\n                    <div className='field'>\n                        <p>Email</p>\n                        <br></br>\n                        <input\n                            type='text'\n                            className='searchbar'\n                            name='email'\n                            value={this.state.email}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n                    <div className='field'>\n                        <p>Password token</p>\n                        <br></br>\n                        <input\n                            type='text'\n                            className='searchbar'\n                            name='passwordToken'\n                            value={this.state.passwordToken}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n                    <div className='field'>\n                        <p>New password</p>\n                        <br></br>\n                        <input\n                            type='password'\n                            className='searchbar'\n                            name='newPassword'\n                            value={this.state.newPassword}\n                            onChange={e => this.change(e)} required/>\n                    </div>\n\n                    <button className='center' onClick={e => this.onResetPasswordFormSubmit(e)}>RESET PASSWORD</button>\n                </form>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div className='forgotpass'>\n                <div className='header'>\n                    <h1>RESET PASSWORD</h1>\n                </div>\n                {this.getForm()}\n            </div>\n        );\n    }\n}\n\nexport default Forgotpass;",
    "import React, {Component} from 'react';\nimport queryString from 'query-string';\nimport APIClient from './api/APIClient.js';\nimport './Transcript.css';\n\nclass Transcript extends Component {\n    values = queryString.parse(this.props.location.search);\n\n    state = {\n        transcript: []\n    };\n\n    componentDidMount() {\n        APIClient.getPodcastTranscript(this.values.podcast_id).then(response => {\n            response.transcript_sections.forEach(element => {\n                this.setState(prevState => ({transcript: [...prevState.transcript, element]}));\n            });\n        });\n    }\n    \n    render() {\n        return(\n            <div className='transcript'>\n                {this.state.transcript.map((result, index) => (\n\t\t\t\t\t<div key={index}>\n                        {result}\n                        <br></br>\n                        <br></br>\n\t\t\t\t\t</div>\t\t\t\n\t\t\t\t))}\n            </div>\n        );\n    }\n}\n\nexport default Transcript;\n",
    "import React from 'react';\nimport './NotFound.css';\n\nfunction submit(e) {\n  e.preventDefault();\n  window.location.assign('/');\n  \n}\n\nfunction NotFound() {\n  return (\n    <div className='notfound'>\n        <h1>Uh oh! Something went wrong.</h1>\n        <h5>Let's get you home:</h5>\n        <button onClick={e => submit(e)}>Home</button>\n    </div>\n  );\n}\n\nexport default NotFound;\n",
    "import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar.js';\nimport Home from './Home.js';\nimport About from './About.js';\nimport User from './User.js';\nimport History from './History.js';\nimport Favorites from './Favorites.js';\nimport PodcastPage from './PodcastPage.js';\nimport './App.css';\nimport Results from './Results.js';\nimport Forgotpass from './Forgotpass.js';\nimport Transcript from './Transcript.js';\nimport NotFound from './NotFound.js';\n\nclass App extends Component {\n    render() {\n        return (\n                <Router>\n                    <Navbar/>\n                    <div>\n                        <Switch>\n                            <Route exact path=\"/\" component={Home}/>\n                            <Route path=\"/about\" component={About}/>\n                            <Route path=\"/user\" component={User}/>\n                            <Route path=\"/forgot_password\" component={Forgotpass}/>\n                            <Route path=\"/results\" component={Results}/>\n                            <Route path=\"/history\" component={History}/>\n                            <Route path=\"/favorites\" component={Favorites}/>\n                            <Route path=\"/podcast\" component={PodcastPage}/>\n                            <Route path=\"/transcript\" component={Transcript}/>\n                            <Route path=\"*\" component={NotFound} />\n                        </Switch>\n                    </div>\n                </Router>\n        );\n    }\n}\n\nexport default App;",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { toast } from 'react-toastify';\n\ntoast.configure({\n    autoClose: 4000,\n    draggable: false,\n    closeButton: false,\n    draggablePercent: 100,\n    progressClassName: 'ourbar',\n    style: {top: '90px'}\n  });\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}