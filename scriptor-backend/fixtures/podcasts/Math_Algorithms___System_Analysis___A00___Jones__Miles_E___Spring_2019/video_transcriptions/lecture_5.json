{
    "Blurbs": {
        "0 so now we have that we've shown that the limit of f over G is 0 what can we conclude from that? App is Big OMG. login Square Okay any questions? I would need to I would need to see some proof. I mean, I know we all kind of have the or a lot of us have them have a good feeling about how certain functions relate to ": [
            3064.7,
            3131.5,
            64
        ],
        "1 Am I allowed to do that? I guess so right. I just made it up louder than -1 is the number of words that have an odd number of zeros. I mean this doesn't really just doesn't really help us immediately. But maybe I can figure out what odd and -1 is since those rewrite what we have so far. Is equal to AUD of + - 1 + ": [
            682.4,
            715.8,
            9
        ],
        "10 to the 3rd How do we write this thing? It's an * N - 1 * n - 2 / 3 * 2 * 1. And so this is really a polynomial of degree 3. Can I make sense? Okay. Let's move on. Exercise what if I told you that a van over G of n is equal to 20 then what can I conclude from this? All right. ": [
            3584.6,
            3702.8,
            75
        ],
        "1? You plug it in and say sea of wine would be now. Maybe we won't see a 1. Cuz that would be 10 to the -1 10 to the 0 + 8 * 1/3 b 1 + 8 which is $0.09 Francs. Let's move on. Maybe if you guys wanted to exercise you can try to figure out why is it? Why is it this? What where does this ": [
            938.4,
            983.5,
            14
        ],
        "3 + sqrt + 2 + NG is N squared. What can we use to prove that f is Big O of G of an ore? Is f not big OG event. It was kind of like a nice equal spread around there. Let's try some out. Okay, let's start with a okay. So we wanted to prove that f is big ol G of n so if I let ": [
            1660.7,
            1737.6,
            31
        ],
        "420 for some let's say Let's go like this strictly greater than 2. assume that apps of J Is less than or equal to 2 to the J? for all J in between 1 and and take this my strong inductive hypothesis. now for the inductive step I need to I want to show. That s of n is less than or equal to 2 to the end. Okay, how ": [
            3314.9,
            3379.5,
            70
        ],
        "9 * C of n -1, right? Where are odd and -1 is number of strings? / 0 through 9 with audit many Zero's now anybody anybody tell me how to compute all of n -1 in terms of C. Good. So if there is an odd number of zeros though, or every string has to either have odd number of zeros or even number of zeros. So just subtract ": [
            715.8,
            766.4,
            10
        ],
        "And Cubed and squared + 1 square root + Reddit. n choose 3 login What are the end Square login? Yes, okay. What functions are in the family big fat events and cute? and cubes 3 + cubed + 2N squared + + + 7 Frank + x + squared + 3 All these kind of things where and Cubed is the is the fastest growing term. M cubed what ": [
            3933.7,
            3992.1,
            80
        ],
        "Big O of G&G is Big O of H than death is Big O of H. You can kind of think through this by using the definition. Add activity and multiplicative Ade. So if f is Big O of G and I'm you have some sort of non-negative function that you're multiplying by each of them. Then their product or some is bigger of the product or some. Sun is ": [
            2093.7,
            2119.9,
            40
        ],
        "Big O of G. Not right because it's because of this thing there are constant sore there exists Constance. Okay. It's just they need to exist. It's not enough to just show that two constants don't work. You need to show if you want to show the negation you have to show that all pairs of constants won't work. Okay, let's try this one. 3 N squared + 2 N ": [
            1776.6,
            1805.0,
            33
        ],
        "C & K B these things then I'm claiming that 3 + squared + 2 N is less than or equal to 1/3 and squared for all and greater than or equal to 2. Is this true? I know right? This is false. Okay. So for these values C&K this this does not prove that f is Big O of G. Is that enough to show that f is not ": [
            1737.6,
            1776.6,
            32
        ],
        "Hi. All right is this thing on? Alright, let's get started. Turn it up. I don't know. Let's get started. Does anybody have any questions before we start questions comments homework? Everybody good. Yes. Counting recursions So let's get started. Then what I wanted to do before we start today is go over a recursion that I wanted to do last time, but we kind of ran out of time. ": [
            102.0,
            178.3,
            0
        ],
        "Infinity limit of the denominator goes to Infinity. So it's sort of like a indeterminate value. Does anybody know how to resolve this kind of limit? l'hopital's rule does the O have a hat? I love that. does the a Okay. Well, how do you do l'hopital's rule? Take the derivative of the numerator and denominator. Okay, so the derivative so this is equal to limit and goes to Infinity ": [
            2956.8,
            2999.2,
            62
        ],
        "Is that of G that means that they have this property that they kind of have the same sort of growth rate. Okay. Okay. So before we get into big stay. Let's start talkin about big. Okay, so if G of n grows just as fast or faster than F of and then we say that stuff is big'o of G and we either use the set inclusion or equal ": [
            1540.2,
            1572.0,
            27
        ],
        "O of G look for constant C&K just like we did. I'm used some properties. Okay. So what properties are we talkin about? Well domination G is actually bigger than for all end. Then, you know f is Big O A G Wright? Cuz you can cuz the constant you can pick our c is equal to 1 K is equal to 1. Hey, what else transitivity if f is ": [
            2060.1,
            2093.7,
            39
        ],
        "Oak Lane. Okay. So f is Big O of G. if and only if the limit of f over G is some finite constant. So in this exercise is three of the N Big O of two to the end. Well, let's let's use this limit rule to prove or disprove this big old thing. What's the limit as n goes to Infinity of 3 to the end over to ": [
            2286.6,
            2333.0,
            45
        ],
        "Square what happens when you double the input size? If you're having trouble with trying to figure this out. What's nice to do is just plugging some values. See what happens. Let's say half of 2 is equal to what? 4 and then if I double the input size after 4 is equal to what? 16 increased by a factor of 4. What about Gigi of 2 is what? 12 ": [
            1399.1,
            1459.3,
            24
        ],
        "What what is the conclusion I told you all if you have a fan over G of n is equal to some constant some finite constant. We got what? Okay, we got. Half of n is Big O of G event do we get anything else? Half of an is Big Theta of G of an anything else. Okay big if it's big Sada of Giovanni, and it's got to ": [
            3704.0,
            3750.4,
            76
        ],
        "You can also conclude that it's not big Omega and it's not big Theta right sort of like giovan is a is a strict upper bound of Ativan. They don't grow at the same rate G event actually grows faster than ever been strictly. Strictly speaking. great questions about that Okay, let's some let's do a another exercise here. What functions are in the family Big O of n cubed? ": [
            3894.4,
            3930.0,
            79
        ],
        "a physical of G. If we say that she has to be greater than 0 or infinite. Can any questions? I know that these are two way if and only if okay, so approving their three main sweet ways to prove one is just to simplify. Like I said before can take care of get rid of all the lower terms and get rid of all the constants. We can ": [
            2725.9,
            2766.5,
            56
        ],
        "about this question? limit as n goes to Infinity of f of an over G of n is 0 then what is true noticed that these are all negations. What can I conclude from this limit? big 0 Okay, good. We're saying two of the above now. Which two? PNC cuz if F and over Juventus zero, that means that f is Big O G of n but it also. ": [
            3793.5,
            3894.4,
            78
        ],
        "algorithm. That's faster than exponential. Okay, and so we're going to kind of take a look at that. Some things that we're going to see that have these run times. Well, we have something called binary search. It runs in big'o live login. Where's my thing here? This is the fastest. algorithm runtime for sorting using comparisons Okay. But see here. I don't know if we're going to see some ": [
            4205.2,
            4271.0,
            86
        ],
        "and minus one. Characters left over cuz this is left over. How many ways can I fill this space in? CM -1 good, it could be any code word, right? Okay. So this one I have no choice. So this is nine times that just want to have no no choice of what it starts with us. Got to start with a zero going to be followed by I just ": [
            603.7,
            635.1,
            7
        ],
        "and see that my ex 70 and login squared is bigger than end screw in but then at 80th small and it looks like it continues to be smaller as you go. Is this enough evidence to show that f is Big O of G? No, right because this is just giving you a finite glimpse into how those functions grow. So if you wanted to use Witnesses, what you ": [
            2833.1,
            2864.4,
            59
        ],
        "approaches a constant that just means that as end is getting bigger. F is some constant multiple of G, right or is around some constant. Multiple OG Cancel that's when you get big fat. They grow at the same rate. If if we relax this and say that it could be zero, but it also could be see. Let's just write it in here. Would be zero. Then we get ": [
            2694.9,
            2725.9,
            55
        ],
        "are some valid code words this first one has Does not have any zeros it has zero zeros is 0 an even number. Yes. remember that this one has two and this one has four. So these are all Valley Court how many code words of LinkedIn are there? Okay, so I want you all to work with your neighbors. Think about this see if you can come up with ": [
            226.2,
            255.0,
            2
        ],
        "are what? What all code words have an even number of zeros? What's something that we kind of seen before when we did binary strings? How do we break those up? Start with zero start with one. So this one could be start with zero start with one start with to start with three start with four start with v I mean if it starts with anything other than zero, ": [
            519.6,
            558.9,
            5
        ],
        "asking for the recurrence if you want it, like unravel it, then you could get a closed form. Yeah, but I want it like just for this exercise coming up with that with the recursion is is the important part right with the recursion. Then there's a bunch of different ways. You can solve for it or you can plug it into Wolfram Alpha you can you know, you can ": [
            1044.0,
            1071.9,
            16
        ],
        "be both Big O and big Omega. case with all three any questions In fact, it's impossible to just get two of these right? Cuz once you have two of them, then you have the other one for free, right if you just have big O big Theta if you have big fat, then you get both of these so They're all kind of like related. trick questions Okay. How ": [
            3750.4,
            3793.5,
            77
        ],
        "because you have nplusone squares in the log and then all this stuff than it gets kind of messy. It's doable. So I think a cleaner way to do it is to use the limit argument. Hey, so let's just take the limit. So we can cancel out at 10, right? We can simplify the numerator. I ain't use a log rule. Okay. Now limit of the numerator goes to ": [
            2901.2,
            2956.8,
            61
        ],
        "big state of N squared? Do you say 3 m squared? Did you say 3 in squared + 1? Anybody else? 3 m squared plus 2 good M. time's end Yes. Yeah, you get the ideas that they're all all the things. That's all the functions in this family. Are functions where N squared is the fastest growing term? There's not anything less right? There's no like and is not ": [
            2595.7,
            2660.6,
            53
        ],
        "call this function or what? Are we going to call the number of code words of size end? See you then. Okay, I like that. So let see you then. Be the number. of code words of length and okay, so let some Let's break this up so we can do a recursion. What's kind of a natural way we can break up the set of all code words. The ": [
            473.2,
            519.6,
            4
        ],
        "certain strings more than once. Usher so 10 to the end - 1 counts the number of strings of length n -1, right so you can split up that set into all the ones that have an odd number of zeros and all the ones that have an even number of zeros. Pretty tricky though, huh? The other questions or comments. bass case is city of What is 0 is ": [
            863.8,
            938.4,
            13
        ],
        "come from? Where does this 8 come from? Where's the 10 to the N minus 1 come from? Print something that might be something to think about. See if one should equal 9. See if one. Yes. Yes. Now you can have nine of them. You can have one two, three four, right if you have any single number than that, there's no zeros. Oh, what's up? I was just ": [
            983.5,
            1044.0,
            15
        ],
        "could do is say you could say claim. n log N squared is less than or equal to and let's just say one less AC is one One X + sqrt n For all and greater than or equal to 8. Your base case will be at and is equal to 80 use induction to kind of get their kind of a messy proof though using induction on this thing ": [
            2864.4,
            2901.2,
            60
        ],
        "definition is okay. Here it is. 4 functions f and g we say that f is Big OMG. What does that mean? That means that there are constant C and K such that F of n is less than or equal to c x g of n for all n greater than equal to K. Okay, what is that look like? Okay, basically what it means is that you can ": [
            1601.0,
            1626.7,
            29
        ],
        "detail, but what it what we mean by saying is that when I increase and these functions and squared + 3 m squared increased by the same amount not to to the end is going to Sort of passed them all no matter how much you increase it. So we'll talk about all of this and try to put it into a form of context so that we can use ": [
            1334.0,
            1364.0,
            22
        ],
        "do I show that will start with the left hand side at the van right it out in terms of its. In terms of its definition pursue mean that and is greater than 2 so we know that it's defined enough, right? So f a n is equal to 1/2 + -1 + 1/2 + -2 this is got to be less than or equal to. 2 to the N ": [
            3379.5,
            3406.9,
            71
        ],
        "double logarithm. Logarithm polylogarithm. It's just some logarithm to a power linear log linear polynomial quadratic cubic exponential factorial and whatever you want to call that end to the end. What is it? Yeah big number. I'm so in general what we're going to use these for and what people use as atomic notation for especially in computer science is to measure the efficiency of algorithms. So we're going to ": [
            4090.4,
            4136.5,
            83
        ],
        "each other by how log and grows really slowly and it grows slower than any polynomial this kind of thing, but Just wanted to kind of give you the whole proof just in case so that you can figure it out yourself. Okay. Oh, wow. Okay. Okay. So let's look at some exercises and maybe you guys can do these at home. I'm going to do one of them with ": [
            3131.5,
            3162.1,
            65
        ],
        "else? and for and 5 and 2/5 what else? 2N cute 2 to the power end, okay. 2 to the power and factorial Okay. and to the end what event is white? Okay. Good. You get the idea right these things grow? I deserve to be like very fast functions that grow faster equal to or faster than and Cubed. So in a sense you can think about each one ": [
            3992.1,
            4050.2,
            81
        ],
        "end done any questions This is because I know to the end - 2 is less than 2 the N -1 so this sum is less than that song. What makes you? Because this is my target, right? That's what I'm trying to show. Just trying to like work towards that. Yeah, exactly. Yeah, yeah. Okay, let's move on. Well, maybe let's let's let's just go off of intuition and ": [
            3445.5,
            3513.9,
            73
        ],
        "equal to 1 to the 1 is equal to the verified. I guess I should say base case is equal to 1 to the 2 is equal to 4 also verified done. Okay, inductive hypothesis. okay, I'm going to choose to use a strong inductive hypothesis because the Fibonacci numbers don't only depend on the number before but they depend on the two numbers before so I'm going to say ": [
            3281.9,
            3313.2,
            69
        ],
        "function is a little tricky right because these things are not easy to just compute in your head. You can plug them into Wolfram Alpha. Like I did here and you can get these two grass and you see that and login is bigger than N2 the three over to all up until around 80 and then the other one takes over. Or you can just look at the values ": [
            2804.1,
            2833.1,
            58
        ],
        "generate some small numbers, but other than that. Yeah, I just want to recursion here any other questions. What 9? this this is the number of code words that start with that don't start with zero so they can start with any of the nine other digits. What? already art to see what we're going to move into now is a big ol or asymptotic classes. So up until this ": [
            1071.9,
            1152.7,
            17
        ],
        "get an estimation on how big those things are and basically how did those sets grow as those as an grows? How does the cetera or how does the function graph? So let's start off with this example. Okay, we have remember the frequency is CB. Okay, so we have three graphs here. We have two to the end. We have 3 m squared and we have and squared. Okay, ": [
            1178.1,
            1211.8,
            19
        ],
        "going to be and -1 other positions. Did you guys get this far? So what can I put any code word in here? No, right because then I'm going to get an odd number of zeros when I had this one up. I do start. It was 00. What are the needs to be an odd number zero is right. Let's just do this. let's say this is Audubon - ": [
            635.1,
            682.4,
            8
        ],
        "have FN over G of n we can kind of do a little bit of analysis use the triangle inequality and then get this. Does any quality here by the definition of limit? And so basically you have that F of n is less than Epsilon X limit x g event. for all n greater than or equal to n For all n greater than a Mustang. So this turns ": [
            2506.3,
            2537.4,
            50
        ],
        "in here or or square root and those things are not in here, but these ones are okay good. So for each one of these asymptotic classes we get a corresponding limit rule. Okay. Let's go to these. so if your limit turns out to be some finite constancy. then f is Theta of G right because think about what happens when a limit when the limit of a ratio ": [
            2660.6,
            2694.9,
            54
        ],
        "into their closed form and then take the limit of that but maybe a more direct straightforward way to do it is by using induction. Okay, so this would be an example of where you come up with constant the witnesses, then you use induction to justify it. Okay, so f What is the Fibonacci numbers F1 is 1? Nf2 is one. Kf1 is 1 f 2 is 1. So ": [
            3201.5,
            3240.8,
            67
        ],
        "is less than or equal to 5 and squared for all and greater than equal to one. Is that true? Yes, that's actually true. How do you show it? algebra before induction Yeah. I guess you could do some some algebra be easy, right cuz you know that is always less than or equal to 2 and squared and you can do it that way. These are witnesses to the ": [
            1805.0,
            1842.6,
            34
        ],
        "it later. Okay, so this is what I was saying before. We've been counting to get exact number of objects. Now. We're going to start talking about the rate at which integer sequences grow without being exact. Okay, so now let's look at these two functions that we looked at before. And think about the consequences of what happens when you double the input size in square Juventus 3 on ": [
            1364.0,
            1399.1,
            23
        ],
        "it's kind of the same thing, right so Is equal to number? all blanks and code words that start with zero right Plus without zero Okay, let's look at those out zero Kate's first. This one is a little bit easier to compute if it doesn't start with 0 then how many options do I have for the first character? 9 options for the first character and then I have ": [
            558.9,
            603.7,
            6
        ],
        "linear time algorithms some polynomial time algorithm is where you know, you have and squared and Cubed and the higher number the K the less desirable the algorithm right there less efficient. It is going to see some exponential's and pretty much it. any questions Okay. See you all on Thursday. ": [
            4271.0,
            4301.8,
            87
        ],
        "maximum. If you have a sum of a bunch of functions, the maximum one that they're all Big O of the maximum one. And this one is going to come into play a bunch when we start trying to simplify these functions. Okay. Also ignoring Constance. These are sort of related. But if you have some constant x a function, you can just ignore it right because when you do ": [
            2119.9,
            2151.1,
            41
        ],
        "mean in this particular case in this particular case f&g grow at the same rate, right? And so there are going to be going to beach other. Yes, and we'll see what the what the consequences of that are. For this particular case, but that's not always the case. Okay. so name some functions that are in the family Big O of and squared. Okay just shot him out. M ": [
            1889.8,
            1925.2,
            36
        ],
        "minus 1 plus 2 to the N minus 2 by the inductive hypothesis So this is true. We know that to the end - 2 is less than 2 to the N -1 right? So this whole thing is less than 2 to the N - 1 + 2 to the N minus 1 but what is 2 million - 1 + 2 the end - 1 right to the ": [
            3406.9,
            3445.5,
            72
        ],
        "multiply see by a big enough number so that if you go far enough out this way. Far enough out down the the grass g is always going to be bigger than f for the rest of time. So really these these Big O notation talked about the behavior of the grass as an gets really really big. Okay, so let's look at an example. F is 3 n + ": [
            1626.7,
            1660.7,
            30
        ],
        "n d d n of N squared is 2N V different rates of growth. so the answer is D. They're all different. But that's if you're taking a Calculus class. We're not in a Calculus class. right so it's e that's why I put saying and quotes, right it kind of depends on what is your definition of saying? Frank let's go. Look at this in a little bit more ": [
            1282.4,
            1334.0,
            21
        ],
        "of ddn of two login. over ddn square root in Okay. So in the numerator we get what 2 / n in the denominator? What's the derivative of sqrt n? 1/2 square root of 10 Yes, right. Okay. So now this is limit as n goes to Infinity of what? four square root 10 / n Which is limit. and goes to Infinity of 4 / sqrt and which is ": [
            2999.2,
            3064.7,
            63
        ],
        "of these. Families as a set of functions, right? And I mean a really big set of infinite set of functions. Where is the intersection of Big O and big Omega, it's where they intersect. Okay. So this is sort of like a preview for the next topic that we're going to look at. And here's just some common classes that we're going to encounter. Okay, so we have constant ": [
            4050.2,
            4090.4,
            82
        ],
        "off all the even number 0 things to see and the remaining things you got are the odd number of zeros odd of N - 1 is equal to 10 to the N - 1 - C and -1 K is equal to 10 to the end - 1 - 2 C of N - 1 + 9 * C + -1 and we can simplify this to 10 to ": [
            766.4,
            798.4,
            11
        ],
        "opposite that just means that g is in big all of that. Okay, so we can Define the big Omega in terms of Big O. And then there's the fader there's one that we've seen before. This is like when the two functions grow at the same rate. That means that f is Big O of G&G is big old fat. What are some of the functions in the family ": [
            2569.8,
            2595.7,
            52
        ],
        "out to be your see value in this is your K value. That is the definition of being big. Oh, so there you go. There you have it. Okay. now let's go on to some of the other asymptotic classes. There's big'o we've talked about that. We've Define it we've done some examples. Okay. Another one is bigger Mega. So f is in Big O Negative G. That's just the ": [
            2537.4,
            2569.8,
            51
        ],
        "point what we've been doing in this class has been counting things. Right? And for those problems it's been important to us to count the thing exactly. We want to know exactly how many things there are in certain set of objects. So now we're going to shift gears and we're going to use these big old classes and these are going to allow us to count certain things but ": [
            1152.7,
            1178.1,
            18
        ],
        "sign so that they're both they're both correct. You can use either one of them. I'll probably go back and forth from one of the other but it's just basically means is Big O of G, which means he grows faster or just as fast as f Okay, but still we should have some sort of mathematical definition so that we can have something to Anchor it to mathematically the ": [
            1572.0,
            1601.0,
            28
        ],
        "so let's do that. And I presented to you as exercise first. But then we'll kind of figure it out together. Okay, so because it's I will tell you it's kind of a tricky problem and you'll see why when we when we saw it. Okay, so let's just have digits from 0 to 9 case of 10 different digits. That have an even number of zeros. okay, so here ": [
            179.1,
            226.2,
            1
        ],
        "some ideas on how to compute them to enumerate them use recursion or anything like that. Okay. Ready go. Find me. Okay, help me get started here. What's something that I can use to start? What's a good place to start? Okay. Okay, I'll put that over here. There are 10 to the end words. Over the alphabet zero through nine, right? Okay good. What what are we going to ": [
            255.0,
            473.2,
            3
        ],
        "squared 4N 4 M squared what else? 1 + log in login 1 / + but let's only talk about functions increasing in increasing. functions What is the other one? login What about end to the 1.5? What about into the 1.8? Okay, you got the idea write any questions about those? Any constant? 11 I guess that's not an increasing function. What's a non decreasing? And the reason I ": [
            1925.2,
            2004.4,
            37
        ],
        "that. But for those of you who like to see how everything works, this is why the limit proof the limit rule works. Okay. So suppose that the limit is some, some value El right now we can we can talk about what that means in Calculus if the limit is some value that means that for any positive Epsilon no matter how small. There exists some big and such ": [
            2444.1,
            2472.0,
            48
        ],
        "that. The difference between the ratio and the limit is less than that value Epsilon for all and bigger than big and did you guys ever do this in calculus? The Epsilon proofs is basically saying that Alfano Virginia van is getting closer as close as you want to El if you take an out far enough to take and it's big. so let's just kind of Rewrite this we ": [
            2472.0,
            2506.3,
            49
        ],
        "the definition you can just make a constant that's even bigger, right. SOC x f event is bigger better than no matter how big she is. Okay. Alright, let's move on. So one kind of rule of thumb that we can use is you take whatever your expression is. Look at each term one-by-one and drop all the constant then only keep the maximum term in there and then that ": [
            2151.1,
            2185.1,
            42
        ],
        "the end - 1 + 8 C + - 1 Play any questions or comments. I'm just trying to figure out what is this what is odd and -1 Oh this one. like that Oh, yeah. Thank you. That was a typo. Thank you. Yeah, that's a very kind of common mistake in these counting arguments. If you do that, then you're going to over count. We're going to count ": [
            798.4,
            863.8,
            12
        ],
        "the end? Raise your hand if you know it. Infinity good Are there any questions about that? Okay. So the limit of f over G is not a finite there a finite constant there for f is not Big O of G of n or cuz remember if you have this if and only if this is a biconditional which means that if this is true, then that's true if ": [
            2333.0,
            2403.3,
            46
        ],
        "then you guys can do these all these exercises is one true or false. true, right What about 2? false 3 true 4 true right Yeah, or another thing you can think about is if you do the the limit thing like the ends will cancel and get login over end and then you do l'hopital's rule in. Okay, what about 5? How does this thing grow? What is it? ": [
            3513.9,
            3582.7,
            74
        ],
        "this is false and that's false, right? So you get these both of them. So the answer here is no. any questions Okay. So, where is this coming from? Why where is his limit rule come from? Well, we'll just do one direction of the proof and I don't know. This is not super important because we're just going to use it without proof in our homework and stuff like ": [
            2403.3,
            2444.1,
            47
        ],
        "time algorithm. So I'm in fact. This is kind of like a very notorious threshold here and in a certain sense everything to the left of this line. You can kind of think of as a reasonable run time for an algorithm. Where is everything to the right would be very slow and there are algorithms out there that we have no known problems out there where there's no known ": [
            4167.7,
            4205.2,
            85
        ],
        "to this statement. F is big ol G of n are these the only two Values we can pick to show that f is Big O of G. This one works to write. In fact, once you once you find that there exists these values. Any bigger numbers will also work. Okay, so really this had two answers B and C. any questions but you have to stay at You ": [
            1842.6,
            1889.8,
            35
        ],
        "use a limit argument like those ones. We saw or we can just find a Witnesses in proof by induction. Okay, so here's an example. We want to show that an login squared is Big O of n square root in. Where in this case was just think that the log is the natural log? Okay. Okay. so one way to do it is to find witnesses, right? For this ": [
            2766.5,
            2804.1,
            57
        ],
        "use these types of functions for run times of algorithms. That's why I said we're going to restrict ourselves to increasing functions. So you're talking about the rate of that these the The rate of growth of the time it takes for these functions to determine a right. And so basically the faster the function grows the slower. The algorithm is exponential time. Algorithm is much slower than a polynomial ": [
            4136.5,
            4167.7,
            84
        ],
        "wanted wanted to kind of Say Non decreasing functions is because we're going to basically be using this to talk about run times of algorithms and the algorithms take longer to run in general when an increases. A N squared + B + + C Okay. Yeah, it could even be zero though, right? Okay, good any other questions or comments? Okay. Okay how to determine if f is Big ": [
            2004.4,
            2060.1,
            38
        ],
        "way it works but we're going to do next is kind of Describe it using mathematics with a particular notation and a particular definition so that we can use it freely with this intuition. Okay, so since a van and give him quote on quote behave similarly when you increase the input, we say that f&g grow at the same rate another way to say that in our new patient. ": [
            1503.3,
            1540.2,
            26
        ],
        "we can pick pick. Seed to be equal to 1 + K to be equal to 1 then what that saying is that f n is less than or equal to 2 to the end or One X to the end for all and greater than or equal to K. Okay, so let's write that down as a claim. And now it's proved that clean. striped bass case F1 is ": [
            3240.8,
            3281.9,
            68
        ],
        "we're going to look a little bit more detail into this in a minute, but both A&B would work. These kind of like a tighter bound, right? There their they're sort of growing at the same rate. Where are sort of like a looser upper bound, but they still both work. They still would both create true statements. Okay. Here is another. way To compute or to verify a big ": [
            2242.5,
            2286.6,
            44
        ],
        "what did you have for? 48th and also increased by a factor of 4 so the answer here is a Bowser x 4 so this is really what we mean by they have the same growth growth rate when you double the input size they both increased by the same amount if both are in a x the same factor any questions okay, so that's kind of in general the ": [
            1459.3,
            1503.3,
            25
        ],
        "which one of these functions do you think has the same rate of growth? Okay, let's see what people say hear a lot of people Stacy and squared + 3 squared +. Maybe 7:30 of the ball now. It's going down. Okay, who here has taken calculus? I want to show you off something. Rate of change is derivative. DDX or Dede end of 3 m squared is what 6 ": [
            1211.8,
            1282.4,
            20
        ],
        "will kind of simplify the problem down and you can use that to compare it to other functions. Okay, let's look at this exercise. What could Gia van be what was which one of these following things? Could you have NB? in the expression Okay good. So we're all kind of on the same page here. We're mostly saying more than one of the above which ones A&B right? So ": [
            2185.1,
            2242.5,
            43
        ],
        "you together. Just so you get to see another way to prove them. They most of these we can do with limit rule limit arguments l'hopital's rule think that's usually the easiest way. This one here. It's really going to be a hard to do l'hopital's rule. I do a limit because well you could convert. Sorry. I say this is the Fibonacci numbers. You could convert the Fibonacci numbers ": [
            3162.1,
            3201.5,
            66
        ]
    },
    "File Name": "Math_Algorithms___System_Analysis___A00___Jones__Miles_E___Spring_2019-lecture_5.flac",
    "Full Transcript": "Hi. All right is this thing on? Alright, let's get started.  Turn it up.  I don't know. Let's get started. Does anybody have any questions before we start questions comments homework?  Everybody good.  Yes.  Counting recursions  So let's get started. Then what I wanted to do before we start today is go over a recursion that I wanted to do last time, but we kind of ran out of time.  so  let's do that.  And I presented to you as exercise first.  But then we'll kind of figure it out together.  Okay, so  because it's I will tell you it's kind of a tricky problem and you'll see why when we when we saw it. Okay, so let's just have digits from 0 to 9 case of 10 different digits.  That have an even number of zeros.  okay, so here are some valid code words this first one has  Does not have any zeros it has zero zeros is 0 an even number.  Yes.  remember that  this one has two and this one has four. So these are all Valley Court how many code words of LinkedIn are there? Okay, so I want you all to work with your neighbors. Think about this see if you can come up with some ideas on how to compute them to enumerate them use recursion or anything like that. Okay. Ready go.  Find me.  Okay, help me get started here.  What's something that I can use to start?  What's a good place to start?  Okay.  Okay, I'll put that over here. There are 10 to the end words.  Over the alphabet zero through nine, right?  Okay good.  What what are we going to call this function or what? Are we going to call the number of code words of size end?  See you then.  Okay, I like that. So let  see you then.  Be the number.  of code words  of length  and okay, so let some  Let's break this up so we can do a recursion. What's kind of a natural way we can break up the set of all code words.  The are what?  What all code words have an even number of zeros?  What's something that we kind of seen before when we did binary strings? How do we break those up?  Start with zero start with one. So this one could be start with zero start with one start with  to start with three start with four  start with v  I mean if it starts with anything other than zero, it's kind of the same thing, right so  Is equal to number?  all blanks  and code words  that start  with zero  right Plus without zero  Okay, let's look at those out zero Kate's first. This one is a little bit easier to compute if it doesn't start with 0 then how many options do I have for the first character?  9 options for the first character and then I have and minus one.  Characters left over cuz this is left over. How many ways can I fill this space in?  CM -1 good, it could be any code word, right?  Okay. So this one I have no choice. So this is nine times that just want to have no no choice of what it starts with us. Got to start with a zero going to be followed by  I just going to be and -1 other positions. Did you guys get this far?  So what can I put any code word in here? No, right because then I'm going to get an odd number of zeros when I had this one up.  I do start. It was 00.  What are the needs to be an odd number zero is right.  Let's just do this.  let's say  this is  Audubon - 1  Am I allowed to do that?  I guess so right. I just made it up louder than -1 is the number of words that have an odd number of zeros.  I mean this doesn't really just doesn't really help us immediately. But maybe I can figure out what odd and -1 is since those rewrite what we have so far.  Is equal to AUD of + - 1 + 9 * C of n -1, right?  Where are odd and -1 is number of strings?  / 0 through 9 with audit many  Zero's now  anybody anybody tell me how to compute all of n -1 in terms of C.  Good. So if there is an odd number of zeros though, or every string has to either have odd number of zeros or even number of zeros. So just subtract off all the even number 0 things to see and the remaining things you got are the odd number of zeros odd of N - 1 is equal to 10 to the N - 1 -  C and -1 K is equal to 10 to the end - 1 - 2 C of N - 1  + 9 * C + -1 and we can simplify this to 10 to the end - 1 + 8 C + - 1  Play any questions or comments.  I'm just trying to figure out what is this what is odd and -1  Oh this one.  like that  Oh, yeah. Thank you. That was a typo. Thank you.  Yeah, that's a very kind of common mistake in these counting arguments. If you do that, then you're going to over count. We're going to count certain strings more than once.  Usher so 10 to the end - 1 counts the number of strings of length n -1, right so you can split up that set into all the ones that have an odd number of zeros and all the ones that have an even number of zeros.  Pretty tricky though, huh?  The other questions or comments.  bass case is city of  What is 0 is 1?  You plug it in and say sea of wine would be now. Maybe we won't see a 1.  Cuz that would be 10 to the -1 10 to the 0 + 8 * 1/3 b 1 + 8 which is $0.09 Francs.  Let's move on.  Maybe if you guys wanted to exercise you can try to figure out why is it? Why is it this? What where does this come from? Where does this 8 come from?  Where's the 10 to the N minus 1 come from?  Print something that might be something to think about.  See if one should equal 9.  See if one.  Yes.  Yes.  Now you can have nine of them. You can have one two, three four, right if you have any single number than that, there's no zeros.  Oh, what's up? I was just asking for the recurrence if you want it, like unravel it, then you could get a closed form.  Yeah, but I want it like just for this exercise coming up with that with the recursion is is the important part right with the recursion. Then there's a bunch of different ways. You can solve for it or you can plug it into Wolfram Alpha you can you know, you can generate some small numbers, but other than that.  Yeah, I just want to recursion here any other questions.  What 9?  this  this is the number of code words that start with that don't start with zero so they can start with any of the nine other digits.  What?  already  art to see what we're going to move into now is a big ol or asymptotic classes.  So up until this point what we've been doing in this class has been counting things. Right? And for those problems it's been important to us to count the thing exactly. We want to know exactly how many things there are in certain set of objects. So now we're going to shift gears and we're going to use these big old classes and these are going to allow us to count certain things but get an estimation on how big those things are and basically how did those sets grow as those as an grows? How does the cetera or how does the function graph?  So let's start off with this example. Okay, we have remember the frequency is CB.  Okay, so we have three graphs here. We have two to the end. We have 3 m squared and we have and squared. Okay, which one of these functions do you think has the same rate of growth?  Okay, let's see what people say hear a lot of people Stacy and squared + 3 squared +.  Maybe 7:30 of the ball now. It's going down.  Okay, who here has taken calculus?  I want to show you off something.  Rate of change is derivative.  DDX or Dede end of 3 m squared is what 6 n d d n of N squared is 2N V different rates of growth.  so the answer is  D. They're all different.  But that's if you're taking a Calculus class. We're not in a Calculus class.  right  so it's e  that's why I put saying and quotes, right it kind of depends on what is your definition of saying?  Frank  let's go. Look at this in a little bit more detail, but what it what we mean by saying is that when I increase and these functions and squared + 3 m squared increased by the same amount not to to the end is going to  Sort of passed them all no matter how much you increase it. So we'll talk about all of this and try to put it into a form of context so that we can use it later.  Okay, so this is what I was saying before.  We've been counting to get exact number of objects. Now. We're going to start talking about the rate at which integer sequences grow without being exact.  Okay, so now let's look at these two functions that we looked at before.  And think about the consequences of what happens when you double the input size in square Juventus 3 on Square what happens when you double the input size?  If you're having trouble with trying to figure this out.  What's nice to do is just plugging some values. See what happens.  Let's say half of 2 is equal to what?  4  and then if I double the input size after 4 is equal to what?  16 increased by a factor of 4. What about Gigi of 2 is what?  12 what did you have for?  48th and also increased by a factor of 4  so  the answer here is a  Bowser x 4 so this is really what we mean by they have the same growth growth rate when you double the input size they both increased by the same amount if both are in a x the same factor any questions  okay, so that's kind of in general the way it works but we're going to do next is kind of  Describe it using mathematics with a particular notation and a particular definition so that we can use it freely with this intuition.  Okay, so since a van and give him quote on quote behave similarly when you increase the input, we say that f&g grow at the same rate another way to say that in our new patient. Is that of G that means that they have this property that they kind of have the same sort of growth rate. Okay.  Okay. So before we get into big stay. Let's start talkin about big. Okay, so if G of n grows just as fast or faster than F of and then we say that stuff is big'o of G and we either use the set inclusion or equal sign so that they're both they're both correct. You can use either one of them. I'll probably go back and forth from one of the other but it's just basically means is Big O of G, which means he grows faster or just as fast as f  Okay, but still we should have some sort of mathematical definition so that we can have something to Anchor it to mathematically the definition is okay. Here it is.  4 functions f and g  we say that f is Big OMG. What does that mean? That means that there are constant C and K such that F of n is less than or equal to c x g of n for all n greater than equal to K.  Okay, what is that look like? Okay, basically what it means is that you can multiply see by a big enough number so that if you go far enough out this way.  Far enough out down the the grass g is always going to be bigger than f for the rest of time. So really these these Big O notation talked about the behavior of the grass as an gets really really big.  Okay, so let's look at an example.  F is 3 n + 3 + sqrt + 2 + NG is N squared. What can we use to prove that f is Big O of G of an ore?  Is f not big OG event.  It was kind of like a nice equal spread around there.  Let's try some out. Okay, let's start with a  okay.  So we wanted to prove that f is big ol G of n so if I let C & K B these things then I'm claiming that 3 + squared + 2 N is less than or equal to 1/3 and squared for all and greater than or equal to 2. Is this true?  I know right? This is false.  Okay. So for these values C&K this this does not prove that f is Big O of G. Is that enough to show that f is not Big O of G.  Not right because it's because of this thing there are constant sore there exists Constance. Okay. It's just they need to exist. It's not enough to just show that two constants don't work. You need to show if you want to show the negation you have to show that all pairs of constants won't work. Okay, let's try this one.  3  N squared + 2 N is less than or equal to 5 and squared for all and greater than equal to one. Is that true?  Yes, that's actually true. How do you show it?  algebra  before induction  Yeah.  I guess you could do some some algebra be easy, right cuz you know that is always less than or equal to 2 and squared and you can do it that way. These are witnesses to the to this statement. F is big ol G of n are these the only two  Values we can pick to show that f is Big O of G.  This one works to write. In fact, once you once you find that there exists these values.  Any bigger numbers will also work.  Okay, so really this had two answers B and C.  any questions  but you have to stay at  You mean in this particular case in this particular case f&g grow at the same rate, right? And so there are going to be going to beach other. Yes, and we'll see what the what the consequences of that are.  For this particular case, but that's not always the case.  Okay.  so  name some functions that are in the family Big O of and squared. Okay just shot him out.  M squared  4N  4 M squared  what else?  1 + log in  login  1 / + but let's only talk about functions increasing in increasing.  functions  What is the other one?  login  What about end to the 1.5?  What about into the 1.8?  Okay, you got the idea write any questions about those?  Any constant?  11  I guess that's not an increasing function. What's a non decreasing?  And the reason I wanted wanted to kind of Say Non decreasing functions is because we're going to basically be using this to talk about run times of algorithms and the algorithms take longer to run in general when an increases.  A N squared + B + + C  Okay. Yeah, it could even be zero though, right?  Okay, good any other questions or comments?  Okay.  Okay how to determine if f is Big O of G look for constant C&K just like we did.  I'm used some properties. Okay. So what properties are we talkin about? Well domination G is actually bigger than for all end. Then, you know f is Big O A G Wright?  Cuz you can cuz the constant you can pick our c is equal to 1 K is equal to 1.  Hey, what else transitivity if f is Big O of G&G is Big O of H than death is Big O of H. You can kind of think through this by using the definition.  Add activity and multiplicative Ade.  So if f is Big O of G and I'm you have some sort of non-negative function that you're multiplying by each of them. Then their product or some is bigger of the product or some.  Sun is maximum.  If you have a sum of a bunch of functions, the maximum one that they're all Big O of the maximum one.  And this one is going to come into play a bunch when we start trying to simplify these functions.  Okay. Also ignoring Constance.  These are sort of related. But if you have some constant x a function, you can just ignore it right because when you do the definition you can just make a constant that's even bigger, right.  SOC x f event is bigger better than no matter how big she is.  Okay.  Alright, let's move on.  So one kind of rule of thumb that we can use is you take whatever your expression is. Look at each term one-by-one and drop all the constant then only keep the maximum term in there and then that will kind of simplify the problem down and you can use that to compare it to other functions.  Okay, let's look at this exercise.  What could Gia van be what was which one of these following things? Could you have NB?  in the expression  Okay good. So we're all kind of on the same page here.  We're mostly saying more than one of the above which ones A&B right? So we're going to look a little bit more detail into this in a minute, but both A&B would work.  These kind of like a tighter bound, right?  There their they're sort of growing at the same rate. Where are sort of like a looser upper bound, but they still both work. They still would both create true statements.  Okay.  Here is another.  way  To compute or to verify a big Oak Lane. Okay. So f is Big O of G.  if and only if  the limit of f over G is some finite constant.  So in this exercise is three of the N Big O of two to the end.  Well, let's let's use this limit rule to prove or disprove this big old thing. What's the limit as n goes to Infinity of 3 to the end over to the end?  Raise your hand if you know it.  Infinity good  Are there any questions about that?  Okay. So the limit of f over G is not a finite there a finite constant there for f is not Big O of G of n or cuz remember if you have this if and only if this is a biconditional which means that if this is true, then that's true if this is false and that's false, right? So you get these both of them. So the answer here is no.  any questions  Okay. So, where is this coming from? Why where is his limit rule come from? Well, we'll just do one direction of the proof and  I don't know. This is not super important because we're just going to use it without proof in our homework and stuff like that. But for those of you who like to see how everything works, this is why the limit proof the limit rule works. Okay. So suppose that the limit is some, some value El right now we can we can talk about what that means in Calculus if the limit is some value that means that for any positive Epsilon no matter how small.  There exists some big and such that.  The difference between the ratio and the limit is less than that value Epsilon for all and bigger than big and did you guys ever do this in calculus? The Epsilon proofs is basically saying that  Alfano Virginia van is getting closer as close as you want to El if you take an out far enough to take and it's big.  so let's just kind of  Rewrite this we have FN over G of n we can kind of do a little bit of analysis use the triangle inequality and then get this.  Does any quality here by the definition of limit? And so basically you have that F of n is less than Epsilon X limit x g event.  for all n greater than or equal to n  For all n greater than a Mustang. So this turns out to be your see value in this is your K value.  That is the definition of being big. Oh, so there you go. There you have it.  Okay.  now  let's go on to some of the other asymptotic classes. There's big'o we've talked about that. We've Define it we've done some examples.  Okay. Another one is bigger Mega. So f is in Big O Negative G. That's just the opposite that just means that g is in big all of that. Okay, so we can Define the big Omega in terms of Big O.  And then there's the fader there's one that we've seen before. This is like when the two functions grow at the same rate.  That means that f is Big O of G&G is big old fat.  What are some of the functions in the family big state of N squared?  Do you say 3 m squared?  Did you say 3 in squared + 1?  Anybody else?  3 m squared plus 2 good  M.  time's end  Yes.  Yeah, you get the ideas that they're all all the things. That's all the functions in this family.  Are functions where N squared is the fastest growing term?  There's not anything less right? There's no like and is not in here or or square root and those things are not in here, but these ones are  okay good. So for each one of these asymptotic classes we get a corresponding limit rule. Okay. Let's go to these.  so  if your limit turns out to be some finite constancy.  then  f is Theta of G right because think about what happens when a limit when the limit of a ratio approaches a constant that just means that as end is getting bigger. F is some constant multiple of G, right or is around some constant. Multiple OG  Cancel that's when you get big fat. They grow at the same rate.  If if we relax this and say that it could be zero, but it also could be see. Let's just write it in here.  Would be zero.  Then we get a physical of G.  If we say that she has to be greater than 0 or infinite.  Can any questions?  I know that these are two way if and only if  okay, so approving their three main sweet ways to prove one is just to simplify. Like I said before can take care of get rid of all the lower terms and get rid of all the constants.  We can use a limit argument like those ones. We saw or we can just find a Witnesses in proof by induction.  Okay, so here's an example. We want to show that an login squared is Big O of n square root in.  Where in this case was just think that the log is the natural log? Okay.  Okay.  so  one way to do it is to find witnesses, right?  For this function is a little tricky right because these things are not easy to just compute in your head. You can plug them into Wolfram Alpha.  Like I did here and you can get these two grass and you see that and login is bigger than N2 the three over to all up until around 80 and then the other one takes over.  Or you can just look at the values and see that my ex 70 and login squared is bigger than end screw in but then at 80th small and it looks like it continues to be smaller as you go. Is this enough evidence to show that f is Big O of G?  No, right because this is just giving you a finite glimpse into how those functions grow.  So if you wanted to use Witnesses, what you could do is say  you could say claim.  n log N squared is less than or equal to and let's just say one less AC is one One X + sqrt n  For all and greater than or equal to 8.  Your base case will be at and is equal to 80 use induction to kind of get their kind of a messy proof though using induction on this thing because you have nplusone squares in the log and then all this stuff than it gets kind of messy. It's doable.  So I think a cleaner way to do it is to use the limit argument.  Hey, so let's just take the limit.  So we can cancel out at 10, right?  We can simplify the numerator.  I ain't use a log rule.  Okay. Now limit of the numerator goes to Infinity limit of the denominator goes to Infinity. So it's sort of like a indeterminate value. Does anybody know how to resolve this kind of limit?  l'hopital's rule  does the O have a hat?  I love that.  does the a  Okay. Well, how do you do l'hopital's rule?  Take the derivative of the numerator and denominator. Okay, so the derivative so this is equal to limit and goes to Infinity of ddn of two login.  over ddn square root in  Okay. So in the numerator we get what 2 / n in the denominator? What's the derivative of sqrt n?  1/2 square root of 10  Yes, right.  Okay. So now this is limit as n goes to Infinity of what?  four square root 10 / n  Which is limit.  and goes to Infinity of 4 / sqrt and which is 0  so now we have that we've shown that the limit of f over G is 0 what can we conclude from that?  App is Big OMG.  login Square  Okay any questions?  I would need to I would need to see some proof.  I mean, I know we all kind of have the  or a lot of us have them have a good feeling about how certain functions relate to each other by how log and grows really slowly and it grows slower than any polynomial this kind of thing, but  Just wanted to kind of give you the whole proof just in case so that you can figure it out yourself.  Okay.  Oh, wow. Okay. Okay. So let's look at some exercises and maybe you guys can do these at home. I'm going to do one of them with you together. Just so you get to see another way to prove them. They most of these we can do with limit rule limit arguments l'hopital's rule think that's usually the easiest way.  This one here.  It's really going to be a hard to do l'hopital's rule. I do a limit because well you could convert. Sorry. I say this is the Fibonacci numbers.  You could convert the Fibonacci numbers into their closed form and then take the limit of that but maybe a more direct straightforward way to do it is by using induction. Okay, so this would be an example of where you come up with constant the witnesses, then you use induction to justify it. Okay, so  f  What is the Fibonacci numbers F1 is 1?  Nf2 is one.  Kf1 is 1 f 2 is 1.  So we can pick pick.  Seed to be equal to 1 + K to be equal to 1 then what that saying is that f n is less than or equal to 2 to the end or One X to the end for all and greater than or equal to K.  Okay, so let's write that down as a claim.  And now it's proved that clean.  striped bass case  F1 is equal to 1 to the 1 is equal to the verified. I guess I should say base case is equal to 1 to the 2 is equal to 4 also verified done.  Okay, inductive hypothesis.  okay, I'm going to choose to use a strong inductive hypothesis because the Fibonacci numbers don't only depend on the number before but they depend on the two numbers before so I'm going to say  420  for some  let's say  Let's go like this strictly greater than 2.  assume that  apps of J  Is less than or equal to 2 to the J?  for all J in between  1  and and  take this my strong inductive hypothesis.  now for the inductive step  I need to I want to show.  That s of n is less than or equal to 2 to the end.  Okay, how do I show that will start with the left hand side at the van right it out in terms of its.  In terms of its definition pursue mean that and is greater than 2 so we know that it's defined enough, right? So f a n is equal to 1/2 + -1  + 1/2 + -2  this is got to be less than or equal to.  2 to the N minus 1  plus 2 to the N minus 2 by the inductive hypothesis  So this is true.  We know that to the end - 2 is less than 2 to the N -1 right? So this whole thing is less than 2 to the N - 1 + 2 to the N minus 1  but what is 2 million - 1 + 2 the end - 1  right  to the end done any questions  This is because I know to the end - 2 is less than 2 the N -1 so this sum is less than that song.  What makes you?  Because this is my target, right? That's what I'm trying to show.  Just trying to like work towards that.  Yeah, exactly. Yeah, yeah.  Okay, let's move on.  Well, maybe let's let's let's just go off of intuition and then you guys can do these all these exercises is one true or false.  true, right  What about 2?  false  3 true  4  true  right  Yeah, or another thing you can think about is if you do the the limit thing like the ends will cancel and get login over end and then you do l'hopital's rule in.  Okay, what about 5?  How does this thing grow?  What is it?  10 to the 3rd  How do we write this thing?  It's an * N - 1 * n - 2 / 3 * 2 * 1.  And so this is really a polynomial of degree 3.  Can I make sense?  Okay.  Let's move on.  Exercise what if I told you that a van over G of n is equal to 20 then what can I conclude from this?  All right.  What what is the conclusion I told you all if you have a fan over G of n is equal to some constant some finite constant.  We got what?  Okay, we got.  Half of n is Big O of G event do we get anything else?  Half of an is Big Theta of G of an anything else.  Okay big if it's big Sada of Giovanni, and it's got to be both Big O and big Omega.  case with all three  any questions  In fact, it's impossible to just get two of these right? Cuz once you have two of them, then you have the other one for free, right if you just have big O big Theta if you have big fat, then you get both of these so  They're all kind of like related.  trick questions  Okay. How about this question?  limit as n goes to Infinity of f of an over G of n is 0 then what is true noticed that these are all  negations. What can I conclude from this limit?  big 0  Okay, good. We're saying two of the above now.  Which two?  PNC  cuz if F and over Juventus zero, that means that f is Big O G of n but it also. You can also conclude that it's not big Omega and it's not big Theta right sort of like giovan is a is a strict upper bound of Ativan. They don't grow at the same rate G event actually grows faster than ever been strictly. Strictly speaking.  great questions about that  Okay, let's some let's do a another exercise here.  What functions are in the family Big O of n cubed?  And Cubed and squared + 1 square root + Reddit.  n choose 3  login  What are the end Square login?  Yes, okay. What functions are in the family big fat events and cute?  and cubes  3 + cubed + 2N squared + + + 7  Frank  + x + squared + 3  All these kind of things where and Cubed is the is the fastest growing term.  M cubed what else?  and for  and 5 and 2/5 what else?  2N  cute  2 to the power end, okay.  2 to the power and factorial  Okay.  and to the end  what event is white?  Okay. Good. You get the idea right these things grow?  I deserve to be like very fast functions that grow faster equal to or faster than and Cubed.  So in a sense you can think about each one of these.  Families as a set of functions, right? And I mean a really big set of infinite set of functions. Where is the intersection of Big O and big Omega, it's where they intersect.  Okay.  So this is sort of like a preview for the next topic that we're going to look at.  And here's just some common classes that we're going to encounter. Okay, so we have constant double logarithm. Logarithm polylogarithm. It's just some logarithm to a power linear log linear polynomial quadratic cubic exponential factorial and whatever you want to call that end to the end.  What is it?  Yeah big number.  I'm so in general what we're going to use these for and what people use as atomic notation for especially in computer science is to measure the efficiency of algorithms. So we're going to use these types of functions for run times of algorithms. That's why I said we're going to restrict ourselves to increasing functions. So you're talking about the rate of that these the  The rate of growth of the time it takes for these functions to determine a right. And so basically the faster the function grows the slower. The algorithm is exponential time. Algorithm is much slower than a polynomial time algorithm.  So I'm in fact.  This is kind of like a very notorious threshold here and in a certain sense everything to the left of this line.  You can kind of think of as a reasonable run time for an algorithm. Where is everything to the right would be very slow and there are algorithms out there that we have no known problems out there where there's no known algorithm. That's faster than exponential. Okay, and so we're going to kind of take a look at that.  Some things that we're going to see that have these run times. Well, we have something called binary search.  It runs in big'o live login.  Where's my thing here?  This is the fastest.  algorithm  runtime  for sorting  using comparisons  Okay.  But see here.  I don't know if we're going to see some linear time algorithms some polynomial time algorithm is where you know, you have and squared and Cubed and the higher number the K the less desirable the algorithm right there less efficient. It is going to see some exponential's and pretty much it.  any questions  Okay. See you all on Thursday. "
}