{
  "Blurbs": {
    "10th useful to know what's 64. What's the log base 2 of 64? That's right. So this is to the 16 equals two to the one with two days to go to the to the six 706 are we going to play the power of two game? Rigo 31st Nest account off and powers of to the people in the back of a really hard time because it takes in ": [
      3712.3,
      3739.1,
      106
    ],
    "2 of 16 is for the index bits as long as the number of sets. And so this tells me how many bits I need to index into my array. So if I like here this is a bad example because it has five. Let's say it only had two four and six fatally Aziz for a p r i would need two bits, right? Cuz there's four possible locations ": [
      3410.7,
      3437.2,
      100
    ],
    "30. It'll be something like 40 Cycles something like to nanoseconds in Philly. In fact or slower than the level above it. And the big job happens when I go off shift. So this is all on die. So this is all connected by very very tiny very very short wires that are really really fast. But now we have to go off ship And that means we have to ": [
      1076.8,
      1103.4,
      28
    ],
    "ABS again equals 8 times 64 times 1/6 equals 4 that equals 64 so we offset is going to be log base to a 64 Sixpence you next is going to be six bits. The tag is going to be 20 minutes. What does that mean? The answer is? the cast of The Hundred twenty-eight cents Any questions about that one? Play recommended gun. Be there Nexus 6 bits, which ": [
      3925.0,
      3968.3,
      109
    ],
    "All right. so are we going to do here? So how many of the following statements about right back and right through policies are correct? So he even numbered and there's four of them out how how many of them are correct? I have to pay attention to them and can reduce the number of rights to the lower level of the memory hierarchy. How many how many of you ": [
      4283.4,
      4312.8,
      120
    ],
    "Alright, let's get started. Where is the screen? so last Friday, I think we released the grades on gradescope I think I told you last time that the regrade requested to be in by the beginning of class today. Since I was a little bit slow and releasing them will give you tell them give me a class on Thursday, but after that things are pretty much set. any lingering ": [
      229.9,
      276.8,
      0
    ],
    "And this has been the 1024 Escalade. The answer of the question mark there but I should have brought a? Here actually the amount of spatial locality visor and graduate school used to tell me that every graduate student who does computer architecture at one point tries to come up with the definitive measure of spatial and temporal locality and then two years later. I tried to do that and ": [
      2117.5,
      2153.1,
      60
    ],
    "And those are the very thing of a pair of the smallest one is called the on ship L1 Cache. No one stands for level one because it's closest to the processor usually kill the numbers for Intel's latest processor is the L1 cache is on the current Intel processors are about 30 to kill in size. Text about 5 Cycles to access. The clock rates are very is a ": [
      942.4,
      973.4,
      23
    ],
    "I did before and I have to fetch data from probably on the memory hierarchy. Basically, I was inside of a substitute because you don't have to do the update. More about the eviction policies are at the choose which line or going to kick out if we have an associative cache and the choice based on the eviction policy random is actually a pretty good choice reading practice. But ": [
      4456.7,
      4487.3,
      126
    ],
    "If I do it right? I have a hit a couple of options in cash for the first option is all I can do is call the right through son right through cash. I write to my this cash and then I also write to the next cash down the memory hierarchy is well through the cash. Only alternative is called right back. So right back cast what I do ": [
      4065.2,
      4093.7,
      112
    ],
    "Otherwise, they unified in the slide. All right, sounds like a little bit dress briefly about why we have different insta captions for instructions and data. So there's a couple of reasons that we do. This one is the instructions and data are very different. So they usually four different areas of memory. So my data is over here in my instructions over here. There's not a lot of self-modifying ": [
      2326.7,
      2353.6,
      68
    ],
    "Ram. Cicerone up to up to somewhere like to gigahertz effective is a 1 gigahertz or so clock running gigahertz, and there's something like sixteen outside or maybe it's 24 gigabytes per second per diem that you can get out of it and you can attach multiple gyms to the same bus so you can stick to these right next to each other character in the same wires that hook ": [
      673.5,
      702.4,
      13
    ],
    "So that means a three of the four statements are correct. All right. We're not going to do this because no one actually does that in real life. All right. So so I kind of the same thing and I read a time. That's great so I can use my cash fiction policy to decide which one I'm going to have to ride it back. If it's dirty just like ": [
      4412.3,
      4456.7,
      125
    ],
    "So the L1 data cache on the Athlon 64 is 64 kilobytes is to a 7/64 by block. I will send a memory addresses are 32 bits. So then which of the following is correct? The tag is 17 bits the index of they fit the Austin is 7 bits and the cat has 124 story none of the above. So take a moment and think about that. When do ": [
      3516.9,
      3543.7,
      103
    ],
    "a little while. Alright, so how we going to make this work? So it goes want to keep the important stuff up here in our own one caches and then you know the important stuff here and I'll two of them slightly less than for the stuff until 3, and hopefully we never have to go to my memory has something called locality. Socality is a really useful. Phenomenon and ": [
      1507.2,
      1534.3,
      43
    ],
    "a lot of money. These are also usually multi-port and we talked about how multi-port it us Rams are more expensive than single ported us around until that drives with their counts as well. Very very close to the doctor today to come from the second level of the L2 cache. It's also on ship also / core set said bigger already right here in this will be something on ": [
      1004.4,
      1026.3,
      25
    ],
    "a read Miss cuz something and I'm getting written in my memory hierarchy. Yes, right because of the thing I decide to evict his dirty. Then I'll have to write that further down the memory hierarchy to the next level of the cash using right through policy is constant. Who think that is true? Pick a question. I think the answer is no because I may or may not incur ": [
      4359.4,
      4393.3,
      123
    ],
    "a silver. What are they going to do? And they decided they were probably going to start building microprocessors. And so they decided they should probably do that themselves rather than wait for someone to come and take their company away and sat there until I'm not getting into the processor business as we all know who's done pretty well for them. So that's be around members. The big swell ": [
      886.4,
      909.0,
      21
    ],
    "address and it will go and get me the data that lives at that address. So everything about the detail between processors so you can look back over the history of Intel processors. They all implement the same I say but they are very different memory systems used to only be a single on Trip cast of the second on second on the cast members on Level 3 cache on ": [
      2827.8,
      2852.7,
      84
    ],
    "all kinds of computer systems. So it's used in the weather things called proxy Cash's that's it and keep content that a lot of people in Access near to where they want to access things called content distribution networks, which are basically Cash's that keep data next to the people that want to access it and data access is not random intense to be predictable and in processor is this ": [
      1534.3,
      1562.9,
      44
    ],
    "all of that. You can change nothing in the software at least semantically has to change. Houses with all the performance optimization to kind of hide the fact that our bigflo memory is where most overrated actually lives. All right. I can fast-forward. Here. We are. Alright, so we have a couple of it's not look right. All right. So we have a we have a hardware. We're going to ": [
      2852.7,
      2989.1,
      85
    ],
    "almost is a good rule of thumb whenever you're faced with a decision when designing a computer system consider doing things randomly because it's very robust like pathological actually very good for security. Actually. We'll see how this plays out later on in the quarter. How are you is pretty, we talked about that a little while ago is also have a policy called prefer clean. So one thing you ": [
      4487.3,
      4516.3,
      127
    ],
    "are a couple of different options. If it's a direct mapped cache that means there's only one choice because there's only one place that I can put the cash I need to bring in. So I'll just kick out the thing that's in my spot. That's easy. If there are if they if I have enough cash then I have to make a decision and there's a couple of different ": [
      4188.7,
      4205.5,
      116
    ],
    "asking the same thing over and over again, right? It's not that something is nearby. It's actually the same thing same data as we can also predictably access different data. So I'm linked list with her for going walking a linked list or bouncing all over memory. This is interesting because this doesn't really have spatial locality or temporal locality but still predictable and so you could imagine building a ": [
      1821.2,
      1849.4,
      54
    ],
    "associative cache. This is a two-way associative cache. So I actually have two separate memory erase. And we're going to take a single address from the processor going to break it up into the same pieces. And then we're going to go look. So we take the spot in this case is 0 1 2 3 so the next 3 and both of the caches we fetch two lines at ": [
      3175.1,
      3200.9,
      92
    ],
    "at the building. You have to go look for something that's building to take me 10 minutes to go walk around the building and find what I'm looking for. If I have to go to main memory. That's the equivalent of having your drive to LA. Right through imagine Lee I think about this like this is my head or my room or my backpack. So like today, I forgot ": [
      1271.9,
      1291.7,
      34
    ],
    "bits do we need? 10 Remember us. Log, X is the number of an expense. 9 and then how much are TAG? everything else 17 Hey is the answer? That makes sense. All right. Let's do another one. so hair work on this one for a few minutes and then we will go and do the math as well. All right locking your answers. so here is the math. seagulls ": [
      3785.0,
      3925.0,
      108
    ],
    "cash is going to look like this. So we have is going to be three pieces of Alabama tag in the daytime. This is really dated was actually don't pay too much attention to that as far as designing the cash. Give me and what we'll do is we're going to break into the three pieces were going to take the index and the index is how we're going to ": [
      2666.2,
      2690.5,
      78
    ],
    "cash performance. Yes. Say it again. Yeah, that's four. ": [
      4676.6,
      4714.9,
      133
    ],
    "change and sequential Logic on the rising and so there's a clock that runs along the bits they going to come out of the ship and originally they would just transfer data on the rising of the clock but DDR made the Innovation not you could transfer data on both edges the clock so both rising and falling to get twice as much data. Cross the bus series of iterations ": [
      441.1,
      471.6,
      6
    ],
    "choices different races that I could make something for least recently used. So I keep track of which most recently recently and I kicked out one that I haven't used in a while. I'm getting this exactly right turns out to be hard and Hardware it's kind of expensive so you'll be some sort of approximation for lru. So something that I've used, you know, one of the older tagline, ": [
      4205.5,
      4237.0,
      117
    ],
    "clicker questions without clickers and then we will discuss it. All right, so locking your answers in your head. Your five more seconds to lock in your interest in your head. Let's go through and do this. Sorry, I'm 64 kg to a set associative 64-bit block. So we have the first question. So you're the farthest person to the right. When can you see my chalk? Can you see ": [
      3543.7,
      3660.5,
      104
    ],
    "close to 10 or not. So this is going to kind of depends when I get into actually looking at the other things work. It's going to kind of depend on what are particular Cash System. Does Mother 3 is supposed to 10 we can call this I know because that's what I wrote in the next life is kind of the key. How about for spatial or temporal? special ": [
      1987.9,
      2007.0,
      57
    ],
    "code in modern program. And so that means that some of the problems are going to do with caches is that if too much stuff needs to fit into the cash then stuff is going to start falling out of the cash and performances going to go down the Raiders going to go down. But if we have two different reasons of memory, we can cash them separately. And now ": [
      2353.6,
      2372.8,
      69
    ],
    "command lines to all nine ships in parallel and they all moved to that state machine in perfect Unison so that I owe from the processors perspective a kind of looks like I'm talking to one ship that provides l72 bits instead of 9 ships to provide 850h. That requires that they are the timings inside the d'ram of how it moves through this transition and how all this stuff ": [
      726.0,
      750.6,
      15
    ],
    "could do is you can look at them. I'll have to write it back so I can try to evict something it's clean and that would have laid the the right back penalty. So this is you want to evict The Cash Line his next uses farthest into the future. Who thinks they could Implement farther farthest for future use in Hardware because it involves producing the future and this ": [
      4516.3,
      4551.4,
      128
    ],
    "decide where to look in the cat. So in this case really what starts with 0 0 1 2 3 4 Sri Lankan slept for of the cash based on the index. We're going to read this row over here or else I'm going to get the car and we're going to compare this came from the others from the processor. If these two are the same. And the cash ": [
      2690.5,
      2717.2,
      79
    ],
    "decided it was not possible and now my graduate students try to do it as well and the principal is very important. Alright, so here is the vocabulary that we're going to need. So the first thing as a hit so our cash hits is when you look in a cash and you find it in for flip a good thing you want lots of cash is when you look ": [
      2153.1,
      2181.2,
      61
    ],
    "for me to look. make a log of the number of steps to get the how to get the number of index Betts and then the tag bits are the address length minus the offset bit and the block that so the tag is everything else. So if I have a 7 facts and myths I would have 24 bits of tag because my address is R32 this one. And ": [
      3437.2,
      3466.0,
      101
    ],
    "for the L1 cache is more complicated because it could go to the Altoona could go to the L3 could go down to d'ram. We have to be more careful calculating. This is about the head time is our is a measure of there's a product of the design of the cash that you're looking at. Are there lots of casual stacked on top of each other? If you miss ": [
      2275.0,
      2297.5,
      66
    ],
    "for them to be valid then we know that it's a hit. So if a tag that were accessed from the address for the Target store in the array, that means it's the right data because there could be anything here, right? So this is this is this is a four or five line cast. There are potentially millions of different cash lines that could reside in that row of ": [
      2717.2,
      2741.0,
      80
    ],
    "get off the ship. We have to go too much fat or wires. They have to go to the package. They have to go through the motherboard and over to the dims and these so-called main memory and there can be lots of this gigabytes or even terabytes of this now so you can get a high-end Intel server with I don't know at least 6 terabytes of deer and ": [
      1103.4,
      1125.1,
      29
    ],
    "grab the light glowing things out so they can download the the the the date of the plans for the Death Star that's basically a tape drive robot. So apparently a long time ago in a galaxy far far away. We already had that chip is actually doing pretty well as an industry. These are thoughts of archival stuff. They have it in the cloud II Amazon. The glacier storage ": [
      1340.1,
      1365.7,
      37
    ],
    "had before and then a bunch of companies and they just started building as well and until I was kind of getting out competed on cost and so some of the founders of Intel kind of famous in their office trying to figure out how to dig themselves out of this hole and one of them said Well, when the company goes bankrupt and the creditors come in and take ": [
      861.7,
      886.4,
      20
    ],
    "have a match direct map is much more efficient because I actually just have to read one tag, but then the person I was going to be quite a bit lower. So this is an important equation. Sosie Jose vs. So she is the capacity of the cache a is the level of associativity B is the block size of the cache line size and S is the number of ": [
      3344.9,
      3371.8,
      98
    ],
    "if I really poor data cash performance, maybe it won't affect my instruction cash performance and vice versa. I make it a different kinds of access patterns. So I cash it has to have really good spatial locality because I asked us instructions one after another item constantly walking through the program increment increment of my program count counter. That's very good sequential spatial locality if I could branches are ": [
      2372.8,
      2404.5,
      70
    ],
    "in one cashew try in the lower-level cash, this is a little bit non-intuitive because we draw them like this or the lower-level cash cast of This is a low-level Cash's I go when I look in the lower level caps, and then I look in the lord of the castle. There can also be separate couches for data and instructions which case the column section cash in the native. ": [
      2297.5,
      2326.7,
      67
    ],
    "in the cash, that's not there such a bad thing. The hit rate is the number of hits divided by the Total Access. So you'll like my cash it right to be 95% or 99% on the Mist ride is just the opposite of 2 1-2 hit rate talked about The Cash Line is the basic unit of data in a cash. So we have to in the first part ": [
      2181.2,
      2204.6,
      62
    ],
    "intelligent probably a good idea. I'll probably already been written about Lewisport all kinds of things variety of ways in parallel compare comparisons and reading the all of the addresses and all the data to the tack Shack limits associativity of Alan Castleman practice to between 2 and you're like us to be higher because it makes the cash payment of a cash it right hire, but if it gets ": [
      4610.1,
      4646.3,
      131
    ],
    "is I do the update to the local cash. I started Dirty Bit. It says I have modified this Cash Line That's All Things lower down in the in the memory hierarchy is Raquel to or vice versa. I can make these decisions individual each of the cash lines what the potential disadvantage of doing a right through cash. Slow I thought he's a good disadvantage. If I default in ": [
      4093.7,
      4131.0,
      113
    ],
    "is another situation is kind of silver to Branch prediction where we're going to exploit the fact that behavior is not totally random. Lots of reasons why memory access is might be predictable just like branches are predictable. So here's some examples. Oops access every element in the loop is spatial locality or temporal locality. Special Italian right? I'm going to walk right through the loop and things are accessing ": [
      1755.2,
      1788.1,
      52
    ],
    "is what you want to do. So if you want to compare how good your cash eviction policy is you can compare it to fry this feature used and it'll tell you like how close are you to the best possible thing that you could do? This is another number. I talked about how there's been, you know until the papers about Branch Christian every house phones cover way that ": [
      4551.4,
      4581.8,
      129
    ],
    "it works. But this is what was in this is what was in my I like the first computer I got in college was how to steer a minute and then there was the first big advance in terms of interconnect between the deer and then the rest of the computer something called ddr4 devil data rate. So usually knows you live in 140, you know, the signals if things ": [
      415.5,
      441.1,
      5
    ],
    "like 5 minutes or so. I've been number all right time to the 7th. So this is I asked equals to tonight. So this equals that 512? Traffic on 512 so then how many? How many bits of offset do we need? 6 bits for the offset because that's how we need to name individual bite inside of our inside our cash line. So this is 6 how many index ": [
      3739.1,
      3785.0,
      107
    ],
    "like what kind of Branchburg can do for a broken pipe line do for a hook an out-of-order do for us while we were talking about speedups of like 2X or what and a half axe or 1.2 axe or something. Right? All of that kind of pales in comparison to what the memory system can doing with it. What its impact is on application performance. Set alarm thinking about ": [
      1701.2,
      1725.6,
      50
    ],
    "long has it been there? What do you mean? When was what? When was it invented? When was water invented? ddr4 two or three years, I think. But all of them all that all their gyms have work like this basically since the beginning that used to be more chips, but back in the old days. So it's 64 bits plus eight bits of Eric Russian submarines. If there's some ": [
      600.2,
      647.3,
      11
    ],
    "lot depending on where the processor is running but it's somewhere between 1 and 4 gigahertz or so. So the access time is something like five something like a nanosecond little more than a nanosecond you buy a processor, but real estate on a modern, you know on a high-end processor is very very expensive cuz it takes up space and Intel's cutting a thousand so forth. So it cost ": [
      973.4,
      1004.4,
      24
    ],
    "lot of power to drive the signals so quickly and get data off the dims as quickly as they would like to continue to see my scaling but that's slowing down. We talked about the x squared size of the fell last time that's probably not going to change for deer and particularly. making a whole lot of money building deram because it was a huge improvement over what they ": [
      826.9,
      861.7,
      19
    ],
    "machine. But if this is what it is, then you can see that rcpo is going to be terrible and we are going to get speed up of .02. What does a 98% drop in performance? So poor memory performance can totally destroy the performance of your computer, right? If you think back to those kind of problems we've done in the first half of the course we're talking about ": [
      1680.0,
      1701.2,
      49
    ],
    "mass at size of this cash is is to alright 32 special cases that we talked about. The first is the called a fully associative cache and a fully associative cache. The set size is equal to the cache size. So a line can go anywhere in the cash. And the other one, direct mapped cache where there is officially a one way set associative cache to just one option ": [
      3256.4,
      3288.1,
      95
    ],
    "me the cash is working correctly. Now I have two choices right and now I don't know when we want to choose where to put something in the cash. We can put it either on the left or the right and you can generalize this to as many ways as you want. So this is these to Reliance here for my set and then the rise and set times for ": [
      3231.1,
      3256.4,
      94
    ],
    "memory has a small fast memory and now we're going to talk about how we can organize these into a useful computer system memory system for a computer. So this is basically what it's called the memory hierarchy looks like in a modern processor are faster and smaller ones farther away are bigger and sore next to the course is a quad-core processor. You can see the assertive are rectangles. ": [
      909.0,
      942.4,
      22
    ],
    "memory system that might try to exploit that fact is this is a bigger race and also spatial Acuity after each other until they also have spatial locality. Because they're nearby. So here, is that all right? how old man since I don't have my hour look what I can do. I am at I can do. Cumbersome riding with my fingertip through this sequence of spatial temporal spatial locality ": [
      1849.4,
      1917.4,
      55
    ],
    "memory. Is it between 1628 and we need to figure out which of the particular words inside the cash when we're going to need I had another date is there a mrs. When it's not in there and we're going to use this very basic hash function. It's like the simplest hash function possible. So we just find me the address which is playing with the block address modulo the ": [
      2583.3,
      2629.0,
      76
    ],
    "module. And this is what you actually sticking your computer on the way. This works is that you have a bunch of deer and chips which one of these is a deer a die and there's nine of them. So it's 64 bits, which is 62 or 64 bits of data and eight bits of Paradis so that if it goes wrong somehow the the computer can recover. Yes. How ": [
      568.2,
      600.2,
      10
    ],
    "move between the different states. That's as far as we got and then I'll clean up finish up this the last little bit of that deer and so has been around for a long time. It was kind of first came to kind of rose to prominence in the late 70s and intel was actually originally Deere & company. So their first big project with a deer and Chip and ": [
      358.2,
      388.0,
      3
    ],
    "mrs. Further down the memory hierarchy, right? So if I do it right through to here If I had a hits are you right? I have a head on a right I hid in the other one. And then the latency of that request is going to depend on whether I hit or miss in the altitude. I thought I never I never be so it's going to be constant. ": [
      4393.3,
      4412.3,
      124
    ],
    "my Ellen Cassius red more secure bike from theft more reliable Oh, it's very very cheap. So if I want a store like petabytes of data that I'm not going to access very often and tape as a really good alternative. It also has very nice data retention characteristics or data stays on for a long time. So those girls were two reasons. Mostly it's a security. Well, obviously as ": [
      1412.4,
      1453.7,
      40
    ],
    "my truck over here? Alright, so I have this little tiny piece of space. So what is the capacity? 64 kg what is the associative Leti? What is the block size? And then what is s? We don't know what else is. Alright, so this is the other part of the course. It's worth brushing up on your powers of 2. so 64 and 1 kg is 2 to the ": [
      3660.5,
      3712.3,
      105
    ],
    "need and then we're not going to talk about a butt tape is actually of these tapes. How many of you have on glasses before how to get on cassette tapes Army refuse like wall full of it. It's actually very similar. How many of you have seen Rogue one? Yeah, you know what the end where they're up in the big tower. And there's that robot that's going to ": [
      1312.9,
      1340.1,
      36
    ],
    "never start anything on flash memory that you actually want to keep like your data retention time for flash memory for a brand new Flash dip is 10 years, but we've done that show like, you know, you really shouldn't count on it for more than a couple of months, especially if it's like sitting in your car when it's hot or you've had the the inner memory stick for ": [
      1481.9,
      1507.2,
      42
    ],
    "number of blocks. trailers going to work Take our address. This is the address that came from the processor and were going to break it into three pieces. Set a tag is the part over there on the left and the tag of the hired of it, and that's how we're going to identify. Where which actual address that particular Cashland corresponds to? So the array of the Of the ": [
      2629.0,
      2666.2,
      77
    ],
    "of begin to rise. Is a third cash on ship this is the shared L3 cache. This is common among all those course, they can all access it will be many megabytes their capacity to play scales with the number. Of course, I think at Intel's latest. It's like 1.5 megabytes per core, but there's like twenty six cores the high on those processors so it could be 20 or ": [
      1051.8,
      1076.8,
      27
    ],
    "of giving a little bit more a choice about where in the car. We're in the cash a particular line should live. The level of associativity is the number of possible locations for particular cash line. So you can adapt to a social activity or four-way associativity and the group of lines of Correspondence in Texas called and what each line and a set of Callaway. So here is a ": [
      3150.7,
      3175.1,
      91
    ],
    "of power of 2 plus one. So they occupy 516 bites. I looked as soon as I can power lines under 512 by boundary if I have cash so does 400 in hex bifen it then this means that fool and bar are both going to map to the same line the cat going to the same index pits. Right because because of the way that the because we have ": [
      3092.3,
      3127.1,
      89
    ],
    "of the class we talked about. I don't know if he ever actually to find this but they're called words. So the word of memory in mips is 8 x 4 x processor that they fights with a 64-bit and in cash as they don't work on the Edward granularity and we'll see why they don't but they work on something a little bit bigger call The Cash Line as ": [
      2204.6,
      2226.7,
      63
    ],
    "of these is not correct. See I searched up there keep you on your toes. All right, I'm sure why the funk. T I fix this stuff earlier and I don't know what happened to my changes. All right. All right. It's not. Alright, so here is the basic pieces. You have a CPU the L1 and L2. So let's talk about what happens on a hit. I understand how ": [
      3968.3,
      4024.6,
      110
    ],
    "on this the first service DDR and there was ddr2 and DDR3 and ddr4 which is the current state of Technology, but they're all pretty much the same. So basically what happens if there's a new which each new row with each new version of DDR. There's a increasing capacity increase in the clock rate. There's some electrical changes to make that work but basically the DDR memory look look ": [
      471.6,
      501.7,
      7
    ],
    "once. One from each of the array perform to tag check. So we take the tag from here. It is compared to her and also run it over here this comparator and one of these will be a hit. Kashlan sad both be hits that would be an error because it means that we have the same Cash Line in both arrays, which they should never happen. If so send ": [
      3200.9,
      3231.1,
      93
    ],
    "one for poor cash. I feel that's a good reason to have separate instruction data caches, and that's what all modern processors do. Thank you. All right. Okay. So that's a very particular kind of hash table. No way that's animated like that and each had a Gentry is a block has a cash block or cash line and the Box are power to incise that contain multiple words and ": [
      2523.1,
      2583.3,
      75
    ],
    "operations. If we think about like the register file is corresponding to like my head where I try to think of something, you know, and remember something and maybe takes me like a minute to think of remember some important fact take out of their bass lines. Is there something like this room? So I have to look for something in this room. Maybe it'll take me a couple minutes ": [
      1250.0,
      1271.9,
      33
    ],
    "or how much how depressing it is that it's not that much worse than my normal handwriting. both 190 neither 11 12:30 12 special 182 so how far is 182 from 190? All right, so, it's actually I guess it's a little bit farther than 3 we had more questions over here. So either these either one 90 and 180 to our clothes and 3 and 10 closed or not. ": [
      2065.1,
      2117.5,
      59
    ],
    "or temporal locality or neither. special temporal Neither neither to question so none. special three spatial or temporal 10 special or temporal neither maybe if you're going to the way I mean because a question right of how close is 3 to 10. Thank you. Play my best response. I've gotten to a question. I'll quarter basic arithmetic. Alright, so Alright, son 7 between 3 and 10 so is 3 ": [
      1917.4,
      1987.9,
      56
    ],
    "other and that is at the program is likely to access the same data repeatedly same part of the array again because that's the day that I'm currently chewing on. So what's the temperature going to be on CPI? So I ran into a bunch of problems like this here and there to see how these things are going to different optimizations going to affect memory performance or any of ": [
      1591.8,
      1622.1,
      46
    ],
    "part of the I say so we talked about the meaning of the instructions that the processor executes. And we do this picture of the beginning of the last lecture. I said the picture that we have from the processors have a processor connected to a huge linear write a bike. That's at the IFA assumes right? It's like a name and address. I can load a star from this ": [
      2806.8,
      2827.8,
      83
    ],
    "part of the reproductive behavior of two branches that happened to Matt to the same spot in the branch predictor, they'll interfere with each other. Like why is if I have some instructions and someday that happened to light land in the same part of the cash still interfere with each other as well. So in this picture, right we drew these a separate memories in the reason one of ": [
      2435.0,
      2461.4,
      72
    ],
    "predictable right though, if my Branch branches are are highly correlated and performance is going to be really good as well. If I mix them all together my data would start evicting my instructions and the instruction cash performance would go down. Anna's like I said, they can interfere interference and Branch picture. But basically this is where two different parts of the programmer fighting with each other over some ": [
      2404.5,
      2435.0,
      71
    ],
    "probably a good bit more. I feeling to pay enough money. So that's about $0.01 per megabyte right now. So terabyte. 1000 terabyte is a lot of money, right? So it is 1000 megabytes. That's about right. America's time is a lot worse 60 nanoseconds. So if we're running a 240 Cycles Answer you can imagine if we start going to main memory a lot then our CPI is going ": [
      1125.1,
      1183.1,
      30
    ],
    "questions about the midterm or any other administrative stuff? Alright, so last time. We were talking about d'ram. We are on. Remember we saw that most really all memories to look at memories look like this. We have a bigger re calling Dakota that can pull out a slice of that already. And we went through some of the details of how this works. This is a modern. As I ": [
      276.8,
      326.7,
      1
    ],
    "response time of a right back cash is better than a right through cash. Should the performance of right-back be better or worse than right through? Should be better, right cuz I don't have to do the right back further down the memory hierarchy. I'm going to correct. I may still result in rights if the cash uses are right back policy. So if I'm right back and I have ": [
      4331.9,
      4359.4,
      122
    ],
    "said, this is a modern worship is a bunch of these Banks inside. They're all kind of Independence has lots of parallelism inside a single-chip. I show you this big block diagram where we had a lot of sort of the memory arrays with a bunch of other logic wrapped around them and that all that logic has been complicated State machine and this is sort of the you can ": [
      326.7,
      358.2,
      2
    ],
    "sense. Let me start at the beginning. key points that makes more sense. All right, there they keep on this way. You know that cashes that are we know how to find Aiden the cash how to tell if it's the right data and what decisions we need to make in designing a cash cashing policies. We talked about the memory hierarchy already going to go through that. Is not ": [
      2773.1,
      2806.8,
      82
    ],
    "set. So if you take the product of those three things you get the towing capacity of the cash. American preschool. How convenient that is the upside down here. This is the log of Beast remember be is the number of bytes in my cash line. So if I have a 16x cash then the offset bits are there going to be for offset bits, right? Cuz a log base ": [
      3371.8,
      3410.7,
      99
    ],
    "slide. Hold on. sore on my Mac laptop today because I lost my little stylus that I used to draw on my Windows laptop search now of my terrible handwriting on the side. So ddr4 the current state-of-the-art. Come on. So the way this works is that they did it pass is actually 72 bits wide out of selection. This is so this is, this is a dual in-line memory ": [
      528.1,
      568.2,
      9
    ],
    "so they go back here. What are some disadvantages of having multiple ways in my cash having a two-way cash? What's bad about it? I have to do the convocation twice and even worse. I have to read to have to read the two values write a comparison is pretty cheap reading this stuff out of the array is 5 expensive it take a lot of energy to access because ": [
      3288.1,
      3323.2,
      96
    ],
    "something in the cash, right? So if I'm going to bring in I know I've tried to start something. I needed to be there in order to modify us. So I have to bring something in that usually means that I have to display something that thing that it displaces is called the victim block. We're going to find a victim and we're going to kick it out. Now. There ": [
      4168.5,
      4188.7,
      115
    ],
    "sort of corruption that happened to the gym or in one of these chips controller on the processor. Can I recover the correct data? They're actually pretty susceptible to a highly energetic cosmic rays that come in from outer space and can come in and crash through the through the package and I'm putting the silicon and they can knock the charge off of one of the capacitors and Maddie ": [
      647.3,
      673.5,
      12
    ],
    "system is is tape face going to the Galaxy Andromeda to get data very very far away. So we really want to keep stuff like down here in this room or in my head or something like that. Who's having such thing of a processor? So this is our kind of generic 5-stage pipeline. We talked about that. There's an instruction memory and a date of memory. Those are actually ": [
      1365.7,
      1388.0,
      38
    ],
    "that you can get you know, it's like I think it's like a hundred and twenty tens or something after those dens and keep them all very tightly synchronize across the entire bus. So, do you have a husband scaling scaling a slowing down? So I used to be the deer and was the first thing you would put on a brand new process technology. So those as soon as ": [
      778.1,
      804.7,
      17
    ],
    "that's the modified version of the event address in to make sure I don't lose its not to send it down the memory hierarchy. How to bring in the data from the lower layers of the memory hierarchy it comes in as a cash box. I bring a whole cash Block in from the L2 in this case the time it takes to do that is called the missed penalty. ": [
      4253.4,
      4275.2,
      119
    ],
    "the L1 instruction cash and the L1 cache several caches for instructions and data will talk about a couple of reasons why you might do that and then they talk to unified L2 unified L3 and then made memory which is a whole bunch of memory. And tell the whole game here is like how do I manage thing? So if the stuff that I usually need is up in ": [
      1388.0,
      1412.4,
      39
    ],
    "the atoms represent the average the percentage of the of the program that the memory instructions and lab is going to be the average memory latency dcpi of the bay CPI with a single cycle data memory. We're not going to talk too much about the instruction instruction memory so we can calculate The tallest Epi is just the base CPI plus the memory latency time. So the memory latency ": [
      1622.1,
      1653.7,
      47
    ],
    "the cash to pay. Which address we aren't we are accessing the one that's actually there is identified by this particular tag. So if you want to make sure we're getting the right data or updating their I did I would do the memory access we do the time check. Where am I you know what I did. I started on flight 15. That's why it doesn't make so much ": [
      2741.0,
      2773.1,
      81
    ],
    "the charger for my laptop and like this is like I have to drive to LA because I don't have that thing that I need with me. That's my memory disk is Pluto. Right side to take a spaceship to go to Pluto. So basically I can cut a Pluto like, you know once in my life, so I better make sure if I go I bring back everything I ": [
      1291.7,
      1312.9,
      35
    ],
    "the cheapest one I could find online. So that's like this is a penny. So this is like to milliseconds per megabyte certification perspective. This is a cool kind of graphic put together by this guy named Jim Gray who did a whole into work on databases at Microsoft research in konjac. So the registers of the fastest memory in the system, right? That's the register file. We're actually strumming ": [
      1214.4,
      1250.0,
      32
    ],
    "the order of like a megabyte or so. I am in the latest on Intel processors. It's like 15 Cycles. So two or three nanoseconds something like that to access one cash and now, you know our loads of stores that end up having to go to the L1 cache figure they'll to cash. You're going to start taking something like 15 Cycles so you can watch her CPI kind ": [
      1026.3,
      1051.8,
      26
    ],
    "the reasons was that we need to dispatch an instruction of recycle and we often had to do a memory operation on the given cycle. And if we only had one memory there would have been a structural Hazard. So instructions batch would have had to stall for access to these actually cleaned that up and the third thing how the final reason. is I guess there's So this this ": [
      2461.4,
      2496.9,
      73
    ],
    "the same there's a parallel world of DDR. This is for graphics cards. These are even faster than electrically little bit different but basically internally, they're all the same so the internals of the array and everything looks the same and then what's difference between all of these is just how they communicate with the rest of the computer. I'm so out of this is terrible. This is an embarrassing ": [
      501.7,
      528.1,
      8
    ],
    "the way the addresses workout is going to be really low going to be really low and what's annoying is that they should almost put in the cash, right pool and bar should both be able there's room for both of them the cash almost and so we should get much better performance. For the way that we deal with this was something called associativity and this is a way ": [
      3127.1,
      3150.7,
      90
    ],
    "then conveniently with math. I can just figure out what the index is. I taken the address and dividing by the block size and then taking the mod by the number of steps. So here is a Clickers. How much time do we have? We're not going to do flickers. Sorry cuz I don't have it set up on this laptop. You can click along at home. Simple example problem. ": [
      3466.0,
      3516.9,
      102
    ],
    "they can do brunch fiction better. When I went to buy this famous quite old computer architect and he was giving a keynote address of something another and the talk was 2000 papers about Cashes in 2020 Urban. Mm. Mm research papers written about how to manage caches and some fraction of them about eviction policies. So if you have some cool idea about how to do eviction policies more ": [
      4581.8,
      4610.1,
      130
    ],
    "they figured out how to make the you know slightly smaller and I was driving a lot of the performance in density Grossman deer and that sort of changed now and now you do if you don't flash memory instead of what goes in your phones and your cameras in your memory cards in your ssds because there's more money more money in it serious power problems that takes a ": [
      804.7,
      826.9,
      18
    ],
    "they knows what we talked about. Last time is bingo me raising his long wires and so forth. We need to send signals along to get the data out. So you can imagine actually associative is some of the best case I can put a cash on anywhere but it also means I have to read all of the tags in the in the entire cast to see if I ": [
      3323.2,
      3344.9,
      97
    ],
    "they're not that I've seen all this one. You can also do random you can do first in first out so you just pick stuff out of the already brought it in with all sorts of choices. You could make the other thing you have to do is if that cash so if I had a ride back Ashley Market dirty, I also have to write back that day. Because ": [
      4237.0,
      4253.4,
      118
    ],
    "thing is usually multi-port it which means it's going to be bigger and sore and more expensive this thing on the processor might be single ported or a might also be reported. But since it is better to keep you separate because of a deer am cell grows with the square of the number of ports. So it's cheaper to have two to four caches than it is to have ": [
      2496.9,
      2523.1,
      74
    ],
    "things that are near two other things I have accessed. How about this one? So I keep saying food of our plus to this lot of the array for Plus on configuration parameter. If I do that over and over again is a racial equality or temporal locality. Christo's temporal Who says special? Who is afraid to commit? If you refer to commit to this is temporal locality because we're ": [
      1788.1,
      1821.2,
      53
    ],
    "think that is true right back and reduce the number of rights to go farther down the memory hierarchy. Right. So right back means that when I was going to do a store. I just do it locally and I don't have to propagate the updates downtown is an eviction. So I think number one is true. So at least on B through e is ready answer all the average ": [
      4312.8,
      4331.9,
      121
    ],
    "this class mail to at least for right traffic and one of the goals of the of the cash is actually to reduce the amount of traffic that flows further down the memory hierarchy. So if you do right through doesn't really reduce that that Ben was very much right back and then we'll see when the right back actually happened something out on a Miss. We have to replace ": [
      4131.0,
      4168.5,
      114
    ],
    "this right this really suggest that we should pay a lot of attention to memory. But remember animals law tells us that we should not ignore the potential slowdown and this is a good example of that right? Because even though it's just 20% of our program it can lead to huge performance problems. All right. cell why would we expect cash into work and you can think about this ": [
      1725.6,
      1755.2,
      51
    ],
    "this was replacing something called core memory, which is actually made it a little tiny magnetic donut-shaped bees that are strung on by hand on this complicated latticework was a pretty big Advanced over that when things are just gotten faster in denser and so forth ever since Originally, there was something called sdram what should for synchronous deer and I don't actually know a lot about what it how ": [
      388.0,
      415.5,
      4
    ],
    "those is going to end up being a cache Miss and that'll really hurt her performance. Someone called interference interference happens by bad luck or some pathological behavior in the program. Where a particular Cash Line. Is it being highly contended? And this happens, you know and in this is one of these things are this may happen relatively rarely, right? Maybe it happens in one Cash Line in a ": [
      3041.4,
      3067.5,
      87
    ],
    "thousand forgiven program. Remember that handles lost those that even things that are very infrequent can really her performance. And so this small number of cases where we end up with bad interference on a particular Cash Line can have a kind of an outside source. There's an example of how this can happen. So we have these are raised that are sort of unfortunate size. Right? So they're kind ": [
      3067.5,
      3092.3,
      88
    ],
    "times the fraction of the program is memory operations. So for instance, if I basically I was one and twenty percent of our instructions are member instructions and the latency of those is 240 Cycles in the total CPI is 49, right? So 240 Cycles. This is the deer and latency. So if I'm getting bad performance out of that, I hadn't replied earlier course of Darius from machine to ": [
      1653.7,
      1680.0,
      48
    ],
    "to go way up. Next up we have solid state drives. I don't have a picture of one with a little black boxes about an order of magnitude cheaper, but there are good flowers for 69 seconds 20 microseconds. This is a lot of psychosis is what 80000 Cycles and then there's desk. So this is 1010 milliseconds. So what is that? That's like forty million Cycles really really cheap ": [
      1183.1,
      1214.4,
      31
    ],
    "to hit time is the time. It takes to service a and a miss time is a time. It takes to service a miss. This is the function of the lower-level Cash's so they hid time is the function of the immediate cash. So I showed you on the flight earlier than the L1 cache takes by cycle facts that so they had time is 5 Cycles the Miss time ": [
      2254.9,
      2275.0,
      65
    ],
    "to write allocate policy which is sort of the the default. If I do an access and I break up my address into its constituent pieces the tag heat index in the offset. And if I find that I have a head, that's great. I updo the right. I have faith that portion of The Cash Line and I keep going to miss. So what I do. is All right. ": [
      4024.6,
      4065.2,
      111
    ],
    "too big and it gets too slow for 5 years ago had an eighth weigh out a 16 way L2 and L3 tivity to be able to in all three can actually be quite a bit higher. Because I can be quite a bit slower. I also Francis McClure to which came before and he'll on the L2 is 24 way. Little tiny text. All right, so that I can ": [
      4646.3,
      4676.6,
      132
    ],
    "up to the to the CPU a really cool thing about this and this is one of the real challenges of engineering d'ram is all of these chips execute or operate in perfect synchronization in lockstep. So there's this big state machine back here. And this is a state machine for one of those chips. And what they do is they send all of the address line, but all the ": [
      702.4,
      726.0,
      14
    ],
    "use the speed up our memory system Are you done powerful at like? Okay. So strange that one index. So to cast vines that I want to use have a say the next they are going to interfere with each other on top of each other and there's only room for one of them. And so they're going to kick each other out and that means that each one of ": [
      2989.1,
      3041.4,
      86
    ],
    "usually several were those the power of two words so maybe 16x or 32 or 64-bit. And this is one of the basic unit which the cash manipulation stores data that is stored along with the data to identify the actual address of the Dead in the cash. We'll see how that works. But you can think of the tag is just the hired or bits of the memory address ": [
      2226.7,
      2254.9,
      64
    ],
    "we all know from seeing Rogue one a documentary about David security that is not very secure because you can just break in with a Droid and steal it and then being it up to a some sort of laser cannon data link paper, and it's very very cheap. Flash by the way, while we're talking about reliability. This is my little Public Service Announcement. So flash memory, you should ": [
      1453.7,
      1481.9,
      41
    ],
    "works when we're pumping address is in and getting data billing fees on that. I'll have to be completely deterministic and completely consistent because all of the chips are supposed to produce their bits on exactly the same clock cycle makes it really hard. Deram is the fastest kind of highest bandwidth interconnecting Eric and computer systems now and there's a whole lot of engineering that goes into making sure ": [
      750.6,
      778.1,
      16
    ],
    "would have two kinds there's two kinds of first is held spatial locality. And that is the the kind of observation or the behavior of the program is likely to access favorite is closed today due to its already accessed. So if I'm accessing 100 elements in an array, it's likely to access the elements that either side of that element in the array, right because that's related to each ": [
      1562.9,
      1591.8,
      45
    ],
    "yeah 1800 No, clearly now. 11 special 30 Will say no but you know, it's not so far away from 10111. Temporal okay anything else? special right because of temporal because it's next to one over here that was recent and it also has spatial because the two is to his recent also so does spatial and temporal 2 balthier 350Z I don't know. What's worse how bad this is ": [
      2007.0,
      2065.1,
      58
    ]
  },
  "File Name": "Intro_to_Computer_Architecture___A00___Swanson__Steven_James___Fall_2018-lecture_14.flac",
  "Full Transcript": "Alright, let's get started. Where is the screen?  so  last Friday, I think we released the  grades on gradescope  I think I told you last time that the regrade requested to be in by the beginning of class today.  Since I was a little bit slow and releasing them will give you tell them give me a class on Thursday, but after that things are pretty much set.  any lingering questions about the midterm or  any other administrative stuff?  Alright, so last time.  We were talking about d'ram.  We are on.  Remember we saw that most really all memories to look at memories look like this. We have a bigger re calling Dakota that can pull out a slice of that already.  And we went through some of the details of how this works.  This is a modern. As I said, this is a modern worship is a bunch of these Banks inside. They're all kind of Independence has lots of parallelism inside a single-chip. I show you this big block diagram where we had a lot of sort of the memory arrays with a bunch of other logic wrapped around them and that all that logic has been complicated State machine and this is sort of the you can move between the different states.  That's as far as we got and then I'll clean up finish up this the last little bit of that deer and so has been around for a long time. It was kind of first came to  kind of rose to prominence in the late 70s and intel was actually originally Deere & company. So their first big project with a deer and Chip and this was replacing something called core memory, which is actually made it a little tiny magnetic donut-shaped bees that are strung on by hand on this complicated latticework was a pretty big Advanced over that when things are just gotten faster in denser and so forth ever since  Originally, there was something called sdram what should for synchronous deer and I don't actually know a lot about what it how it works. But this is what was in this is what was in my I like the first computer I got in college was how to steer a minute and then there was the first big advance in terms of interconnect between the deer and then the rest of the computer something called ddr4 devil data rate. So usually knows you live in 140, you know, the signals if things change and sequential Logic on the rising and so there's a clock that runs along the bits they going to come out of the ship and originally they would just transfer data on the rising of the clock but DDR made the Innovation not you could transfer data on both edges the clock so both rising and falling to get twice as much data.  Cross the bus series of iterations on this the first service DDR and there was ddr2 and DDR3 and ddr4 which is the current state of Technology, but they're all pretty much the same. So basically what happens if there's a new which each new row with each new version of DDR. There's a increasing capacity increase in the clock rate. There's some electrical changes to make that work but basically the DDR memory look look the same there's a parallel world of DDR. This is for graphics cards. These are even faster than electrically little bit different but basically internally, they're all the same so the internals of the array and everything looks the same and then what's difference between all of these is just how they communicate with the rest of the computer.  I'm so out of this is terrible. This is an embarrassing slide. Hold on.  sore on my Mac laptop today because I lost my little stylus that I used to draw on my  Windows laptop  search now of my terrible handwriting on the side. So ddr4 the current state-of-the-art.  Come on.  So the way this works is that they did it pass is actually 72 bits wide out of selection. This is so this is, this is a dual in-line memory module. And this is what you actually sticking your computer on the way. This works is that you have a bunch of deer and chips which one of these is a deer a die and there's nine of them. So it's 64 bits, which is 62 or 64 bits of data and eight bits of Paradis so that if it goes wrong somehow the the computer can recover. Yes.  How long has it been there? What do you mean?  When was what?  When was it invented?  When was water invented?  ddr4  two or three years, I think.  But all of them all that all their gyms have work like this basically since the beginning that used to be more chips, but back in the old days. So it's 64 bits plus eight bits of Eric Russian submarines. If there's some sort of corruption that happened to the gym or in one of these chips controller on the processor. Can I recover the correct data? They're actually pretty susceptible to a highly energetic cosmic rays that come in from outer space and can come in and crash through the through the package and I'm putting the silicon and they can knock the charge off of one of the capacitors and Maddie Ram.  Cicerone up to up to somewhere like to gigahertz effective is a 1 gigahertz or so clock running gigahertz, and there's something like sixteen outside or maybe it's 24 gigabytes per second per diem that you can get out of it and you can attach multiple gyms to the same bus so you can stick to these right next to each other character in the same wires that hook up to the to the CPU a really cool thing about this and this is one of the real challenges of engineering d'ram is all of these chips execute or operate in perfect synchronization in lockstep. So there's this big state machine back here.  And this is a state machine for one of those chips. And what they do is they send all of the address line, but all the command lines to all nine ships in parallel and they all moved to that state machine in perfect Unison so that I owe from the processors perspective a kind of looks like I'm talking to one ship that provides l72 bits instead of 9 ships to provide 850h.  That requires that they are the timings inside the d'ram of how it moves through this transition and how all this stuff works when we're pumping address is in and getting data billing fees on that. I'll have to be completely deterministic and completely consistent because all of the chips are supposed to produce their bits on exactly the same clock cycle makes it really hard.  Deram is the fastest kind of highest bandwidth interconnecting Eric and computer systems now and there's a whole lot of engineering that goes into making sure that you can get you know, it's like I think it's like a hundred and twenty tens or something after those dens and keep them all very tightly synchronize across the entire bus.  So, do you have a husband scaling scaling a slowing down?  So I used to be the deer and was the first thing you would put on a brand new process technology. So those as soon as they figured out how to make the you know slightly smaller and I was driving a lot of the performance in density Grossman deer and that sort of changed now and now you do if you don't flash memory instead of what goes in your phones and your cameras in your memory cards in your ssds because there's more money more money in it serious power problems that takes a lot of power to drive the signals so quickly and get data off the dims as quickly as they would like to continue to see my scaling but that's slowing down. We talked about the x squared size of the fell last time that's probably not going to change for deer and particularly.  making a whole lot of money building deram because it was a huge improvement over what they had before and then a bunch of companies and they just started building as well and until  I was kind of getting out competed on cost and so some of the founders of Intel kind of famous in their office trying to figure out how to dig themselves out of this hole and one of them said Well, when the company goes bankrupt and the creditors come in and take a silver. What are they going to do? And they decided they were probably going to start building microprocessors. And so they decided they should probably do that themselves rather than wait for someone to come and take their company away and sat there until I'm not getting into the processor business as we all know who's done pretty well for them.  So that's be around members. The big swell memory has a small fast memory and now we're going to talk about how we can organize these into a useful computer system memory system for a computer.  So this is basically what it's called the memory hierarchy looks like in a modern processor are faster and smaller ones farther away are bigger and sore next to the course is a quad-core processor. You can see the assertive are rectangles. And those are the very thing of a pair of the smallest one is called the on ship L1 Cache. No one stands for level one because it's closest to the processor usually kill the numbers for Intel's latest processor is the L1 cache is on the current Intel processors are about 30 to kill in size.  Text about 5 Cycles to access.  The clock rates are very is a lot depending on where the processor is running but it's somewhere between 1 and 4 gigahertz or so. So the access time is something like five something like a nanosecond little more than a nanosecond you buy a processor, but real estate on a modern, you know on a high-end processor is very very expensive cuz it takes up space and Intel's cutting a thousand so forth. So it cost a lot of money. These are also usually multi-port and we talked about how multi-port it us Rams are more expensive than single ported us around until that drives with their counts as well. Very very close to the doctor today to come from the second level of the L2 cache. It's also on ship also / core set said bigger already right here in this will be something on the order of like a megabyte or so.  I am in the latest on Intel processors. It's like 15 Cycles. So two or three nanoseconds something like that to access one cash and now, you know our loads of stores that end up having to go to the L1 cache figure they'll to cash. You're going to start taking something like 15 Cycles so you can watch her CPI kind of begin to rise.  Is a third cash on ship this is the shared L3 cache. This is common among all those course, they can all access it will be many megabytes their capacity to play scales with the number. Of course, I think at Intel's latest. It's like 1.5 megabytes per core, but there's like twenty six cores the high on those processors so it could be 20 or 30. It'll be something like 40 Cycles something like to nanoseconds in Philly. In fact or slower than the level above it.  And the big job happens when I go off shift. So this is all on die. So this is all connected by very very tiny very very short wires that are really really fast. But now we have to go off ship  And that means we have to get off the ship. We have to go too much fat or wires. They have to go to the package. They have to go through the motherboard and over to the dims and these so-called main memory and there can be lots of this gigabytes or even terabytes of this now so you can get a high-end Intel server with I don't know at least 6 terabytes of deer and probably a good bit more. I feeling to pay enough money. So that's about $0.01 per megabyte right now. So terabyte.  1000 terabyte is a lot of money, right? So it is 1000 megabytes.  That's about right.  America's time is a lot worse 60 nanoseconds. So if we're running a 240 Cycles  Answer you can imagine if we start going to main memory a lot then our CPI is going to go way up.  Next up we have solid state drives. I don't have a picture of one with a little black boxes about an order of magnitude cheaper, but there are good flowers for 69 seconds 20 microseconds. This is a lot of psychosis is what 80000 Cycles  and then there's desk.  So this is 1010 milliseconds. So what is that? That's like forty million Cycles really really cheap the cheapest one I could find online. So that's like this is a penny. So this is like to milliseconds per megabyte certification perspective. This is a cool kind of graphic put together by this guy named Jim Gray who did a whole into work on databases at Microsoft research in konjac. So the registers of the fastest memory in the system, right? That's the register file. We're actually strumming operations. If we think about like the register file is corresponding to like my head where I try to think of something, you know, and remember something and maybe takes me like a minute to think of remember some important fact take out of their bass lines.  Is there something like this room? So I have to look for something in this room. Maybe it'll take me a couple minutes at the building. You have to go look for something that's building to take me 10 minutes to go walk around the building and find what I'm looking for. If I have to go to main memory. That's the equivalent of having your drive to LA.  Right through imagine Lee I think about this like this is my head or my room or my backpack. So like today, I forgot the charger for my laptop and like this is like I have to drive to LA because I don't have that thing that I need with me. That's my memory disk is Pluto.  Right side to take a spaceship to go to Pluto. So basically I can cut a Pluto like, you know once in my life, so I better make sure if I go I bring back everything I need and then we're not going to talk about a butt tape is actually of these tapes. How many of you have on glasses before how to get on cassette tapes Army refuse like wall full of it. It's actually very similar. How many of you have seen Rogue one?  Yeah, you know what the end where they're up in the big tower. And there's that robot that's going to grab the light glowing things out so they can download the the the the date of the plans for the Death Star that's basically a tape drive robot. So apparently a long time ago in a galaxy far far away. We already had that chip is actually doing pretty well as an industry. These are thoughts of archival stuff. They have it in the cloud II Amazon. The glacier storage system is is tape face going to the Galaxy Andromeda to get data very very far away. So we really want to keep stuff like down here in this room or in my head or something like that.  Who's having such thing of a processor? So this is our kind of generic 5-stage pipeline. We talked about that. There's an instruction memory and a date of memory. Those are actually the L1 instruction cash and the L1 cache several caches for instructions and data will talk about a couple of reasons why you might do that and then they talk to unified L2 unified L3 and then made memory which is a whole bunch of memory.  And tell the whole game here is like how do I manage thing? So if the stuff that I usually need is up in my Ellen Cassius red  more secure  bike from theft  more reliable  Oh, it's very very cheap.  So if I want a store like petabytes of data that I'm not going to access very often and tape as a really good alternative. It also has very nice data retention characteristics or data stays on for a long time.  So those girls were two reasons. Mostly it's a security. Well, obviously as we all know from seeing Rogue one a documentary about David security that is not very secure because you can just break in with a Droid and steal it and then being it up to a some sort of laser cannon data link paper, and it's very very cheap.  Flash by the way, while we're talking about reliability. This is my little Public Service Announcement. So flash memory, you should never start anything on flash memory that you actually want to keep like your data retention time for flash memory for a brand new Flash dip is 10 years, but we've done that show like, you know, you really shouldn't count on it for more than a couple of months, especially if it's like sitting in your car when it's hot or you've had the the inner memory stick for a little while.  Alright, so how we going to make this work? So it goes want to keep the important stuff up here in our own one caches and then you know the important stuff here and I'll two of them slightly less than for the stuff until 3, and hopefully we never have to go to my memory has something called locality.  Socality is a really useful.  Phenomenon and all kinds of computer systems. So it's used in the weather things called proxy Cash's that's it and keep content that a lot of people in Access near to where they want to access things called content distribution networks, which are basically Cash's that keep data next to the people that want to access it and data access is not random intense to be predictable and in processor is this would have two kinds there's two kinds of first is held spatial locality. And that is the the kind of observation or the behavior of the program is likely to access favorite is closed today due to its already accessed.  So if I'm accessing 100 elements in an array, it's likely to access the elements that either side of that element in the array, right because that's related to each other and that is at the program is likely to access the same data repeatedly same part of the array again because that's the day that I'm currently chewing on.  So what's the temperature going to be on CPI? So I ran into a bunch of problems like this here and there to see how these things are going to different optimizations going to affect memory performance or any of the atoms represent the average the percentage of the of the program that the memory instructions and lab is going to be the average memory latency dcpi of the bay CPI with a single cycle data memory. We're not going to talk too much about the instruction instruction memory so we can calculate  The tallest Epi is just the base CPI plus the memory latency time. So the memory latency times the fraction of the program is memory operations. So for instance, if I basically I was one and twenty percent of our instructions are member instructions and the latency of those is 240 Cycles in the total CPI is 49, right? So 240 Cycles. This is the deer and latency. So if I'm getting bad performance out of that, I hadn't replied earlier course of Darius from machine to machine. But if this is what it is, then you can see that rcpo is going to be terrible and we are going to get speed up of .02. What does a 98% drop in performance?  So poor memory performance can totally destroy the performance of your computer, right? If you think back to those kind of problems we've done in the first half of the course we're talking about like what kind of Branchburg can do for a broken pipe line do for a hook an out-of-order do for us while we were talking about speedups of like 2X or what and a half axe or 1.2 axe or something. Right? All of that kind of pales in comparison to what the memory system can doing with it. What its impact is on application performance.  Set alarm thinking about this right this really suggest that we should pay a lot of attention to memory. But remember animals law tells us that we should not ignore the potential slowdown and this is a good example of that right? Because even though it's just 20% of our program it can lead to huge performance problems.  All right.  cell  why would we expect cash into work and you can think about this is another situation is kind of silver to Branch prediction where we're going to exploit the fact that behavior is not totally random. Lots of reasons why memory access is might be predictable just like branches are predictable. So here's some examples. Oops access every element in the loop is spatial locality or temporal locality.  Special Italian right? I'm going to walk right through the loop and things are accessing things that are near two other things I have accessed.  How about this one? So I keep saying food of our plus to this lot of the array for Plus on configuration parameter. If I do that over and over again is a racial equality or temporal locality.  Christo's temporal  Who says special?  Who is afraid to commit?  If you refer to commit to this is temporal locality because we're asking the same thing over and over again, right? It's not that something is nearby. It's actually the same thing same data as we can also predictably access different data. So I'm linked list with her for going walking a linked list or bouncing all over memory. This is interesting because this doesn't really have spatial locality or temporal locality but still predictable and so you could imagine building a memory system that might try to exploit that fact is this is a bigger race and also spatial Acuity after each other until they also have spatial locality.  Because they're nearby.  So here, is that all right?  how old man  since I don't have my hour look what I can do.  I am at  I can do.  Cumbersome riding with my fingertip through this sequence of spatial temporal spatial locality or temporal locality or neither.  special  temporal  Neither neither to question so none.  special  three spatial or temporal  10 special or temporal  neither  maybe if you're going to the way I mean because a question right of how close is 3 to 10.  Thank you.  Play my best response. I've gotten to a question. I'll quarter basic arithmetic.  Alright, so  Alright, son 7 between 3 and 10 so is 3 close to 10 or not. So this is going to kind of depends when I get into actually looking at the other things work. It's going to kind of depend on what are particular Cash System. Does Mother 3 is supposed to 10 we can call this I know because that's what I wrote in the next life is kind of the key. How about for spatial or temporal?  special yeah  1800  No, clearly now.  11  special 30  Will say no but you know, it's not so far away from 10111.  Temporal okay anything else?  special right because of temporal because it's next to one over here that was recent and it also has spatial because the two is to his recent also so does spatial and temporal  2  balthier 350Z  I don't know. What's worse how bad this is or how much how depressing it is that it's not that much worse than my normal handwriting.  both 190  neither 11  12:30  12  special 182  so how far is 182 from 190?  All right, so, it's actually I guess it's a little bit farther than 3 we had more questions over here. So either these either one 90 and 180 to our clothes and 3 and 10 closed or not. And this has been the 1024 Escalade.  The answer of the question mark there but I should have brought a? Here actually the amount of spatial locality visor and graduate school used to tell me that every graduate student who does computer architecture at one point tries to come up with the definitive measure of spatial and temporal locality and then two years later. I tried to do that and decided it was not possible and now my graduate students try to do it as well and the principal is very important.  Alright, so here is the vocabulary that we're going to need. So the first thing as a hit so our cash hits is when you look in a cash and you find it in for flip a good thing you want lots of cash is when you look in the cash, that's not there such a bad thing. The hit rate is the number of hits divided by the Total Access. So you'll like my cash it right to be 95% or 99% on the Mist ride is just the opposite of 2 1-2 hit rate talked about The Cash Line is the basic unit of data in a cash.  So we have to in the first part of the class we talked about. I don't know if he ever actually to find this but they're called words. So the word of memory in mips is 8 x 4 x processor that they fights with a 64-bit and in cash as they don't work on the Edward granularity and we'll see why they don't but they work on something a little bit bigger call The Cash Line as usually several were those the power of two words so maybe 16x or 32 or 64-bit.  And this is one of the basic unit which the cash manipulation stores data that is stored along with the data to identify the actual address of the Dead in the cash. We'll see how that works. But you can think of the tag is just the hired or bits of the memory address to hit time is the time. It takes to service a and a miss time is a time. It takes to service a miss. This is the function of the lower-level Cash's so they hid time is the function of the immediate cash. So I showed you on the flight earlier than the L1 cache takes by cycle facts that so they had time is 5 Cycles the Miss time for the L1 cache is more complicated because it could go to the Altoona could go to the L3 could go down to d'ram. We have to be more careful calculating. This is about the head time is our is a measure of there's a product of the design of the cash that you're looking at.  Are there lots of casual stacked on top of each other?  If you miss in one cashew try in the lower-level cash, this is a little bit non-intuitive because we draw them like this or the lower-level cash cast of This is a low-level Cash's I go when I look in the lower level caps, and then I look in the lord of the castle.  There can also be separate couches for data and instructions which case the column section cash in the native. Otherwise, they unified in the slide.  All right, sounds like a little bit dress briefly about why we have different insta captions for instructions and data. So there's a couple of reasons that we do. This one is the instructions and data are very different. So they usually four different areas of memory. So my data is over here in my instructions over here. There's not a lot of self-modifying code in modern program. And so that means that some of the problems are going to do with caches is that if too much stuff needs to fit into the cash then stuff is going to start falling out of the cash and performances going to go down the Raiders going to go down. But if we have two different reasons of memory, we can cash them separately. And now if I really poor data cash performance, maybe it won't affect my instruction cash performance and vice versa.  I make it a different kinds of access patterns. So I cash it has to have really good spatial locality because I asked us instructions one after another item constantly walking through the program increment increment of my program count counter. That's very good sequential spatial locality if I could branches are predictable right though, if my Branch branches are are highly correlated and performance is going to be really good as well. If I mix them all together my data would start evicting my instructions and the instruction cash performance would go down.  Anna's like I said, they can interfere interference and Branch picture. But basically this is where two different parts of the programmer fighting with each other over some part of the reproductive behavior of two branches that happened to Matt to the same spot in the branch predictor, they'll interfere with each other. Like why is if I have some instructions and someday that happened to light land in the same part of the cash still interfere with each other as well.  So in this picture, right we drew these a separate memories in the reason one of the reasons was that we need to dispatch an instruction of recycle and we often had to do a memory operation on the given cycle. And if we only had one memory there would have been a structural Hazard. So instructions batch would have had to stall for access to these actually cleaned that up and the third thing how the final reason.  is I guess there's  So this this thing is usually multi-port it which means it's going to be bigger and sore and more expensive this thing on the processor might be single ported or a might also be reported. But since it is better to keep you separate because of a deer am cell grows with the square of the number of ports. So it's cheaper to have two to four caches than it is to have one for poor cash.  I feel that's a good reason to have separate instruction data caches, and that's what all modern processors do.  Thank you. All right.  Okay.  So that's a very particular kind of hash table.  No way that's animated like that and each had a Gentry is a block has a cash block or cash line and the Box are power to incise that contain multiple words and memory. Is it between 1628 and we need to figure out which of the particular words inside the cash when we're going to need  I had another date is there a mrs. When it's not in there and we're going to use this very basic hash function. It's like the simplest hash function possible. So we just find me the address which is playing with the block address modulo the number of blocks.  trailers going to work  Take our address. This is the address that came from the processor and were going to break it into three pieces.  Set a tag is the part over there on the left and the tag of the hired of it, and that's how we're going to identify.  Where which actual address that particular Cashland corresponds to?  So the array of the  Of the cash is going to look like this.  So we have is going to be three pieces of Alabama tag in the daytime. This is really dated was actually don't pay too much attention to that as far as designing the cash.  Give me and what we'll do is we're going to break into the three pieces were going to take the index and the index is how we're going to decide where to look in the cat. So in this case really what starts with 0 0 1 2 3 4 Sri Lankan slept for of the cash based on the index.  We're going to read this row over here or else I'm going to get the car and we're going to compare this came from the others from the processor.  If these two are the same.  And the cash for them to be valid then we know that it's a hit. So if a tag that were accessed from the address for the Target store in the array, that means it's the right data because there could be anything here, right? So this is this is this is a four or five line cast.  There are potentially millions of different cash lines that could reside in that row of the cash to pay. Which address we aren't we are accessing the one that's actually there is identified by this particular tag. So if you want to make sure we're getting the right data or updating their I did I would do the memory access we do the time check.  Where am I you know what I did.  I started on flight 15.  That's why it doesn't make so much sense. Let me start at the beginning.  key points  that makes more sense. All right, there they keep on this way. You know that cashes that are we know how to find Aiden the cash how to tell if it's the right data and what decisions we need to make in designing a cash cashing policies.  We talked about the memory hierarchy already going to go through that.  Is not part of the I say so we talked about the meaning of the instructions that the processor executes.  And we do this picture of the beginning of the last lecture. I said the picture that we have from the processors have a processor connected to a huge linear write a bike. That's at the IFA assumes right? It's like a name and address. I can load a star from this address and it will go and get me the data that lives at that address. So everything about the detail between processors so you can look back over the history of Intel processors. They all implement the same I say but they are very different memory systems used to only be a single on Trip cast of the second on second on the cast members on Level 3 cache on all of that. You can change nothing in the software at least semantically has to change.  Houses with all the performance optimization to kind of hide the fact that our bigflo memory is where most overrated actually lives.  All right.  I can fast-forward. Here. We are.  Alright, so we have a couple of  it's not look right.  All right.  So we have a we have a hardware.  We're going to use the speed up our  memory system  Are you done powerful at like?  Okay.  So strange that one index. So to cast vines that I want to use have a say the next they are going to interfere with each other on top of each other and there's only room for one of them. And so they're going to kick each other out and that means that each one of those is going to end up being a cache Miss and that'll really hurt her performance.  Someone called interference interference happens by bad luck or some pathological behavior in the program. Where a particular Cash Line. Is it being highly contended?  And this happens, you know and in this is one of these things are this may happen relatively rarely, right? Maybe it happens in one Cash Line in a thousand forgiven program. Remember that handles lost those that even things that are very infrequent can really her performance. And so this small number of cases where we end up with bad interference on a particular Cash Line can have a kind of an outside source.  There's an example of how this can happen.  So we have these are raised that are sort of unfortunate size. Right? So they're kind of power of 2 plus one. So they occupy 516 bites. I looked as soon as I can power lines under 512 by boundary if I have cash so does 400 in hex bifen it then this means that fool and bar are both going to map to the same line the cat going to the same index pits.  Right because because of the way that the because we have the way the addresses workout is going to be really low going to be really low and what's annoying is that they should almost put in the cash, right pool and bar should both be able there's room for both of them the cash almost and so we should get much better performance.  For the way that we deal with this was something called associativity and this is a way of giving a little bit more a choice about where in the car. We're in the cash a particular line should live.  The level of associativity is the number of possible locations for particular cash line. So you can adapt to a social activity or four-way associativity and the group of lines of Correspondence in Texas called and what each line and a set of Callaway.  So here is a associative cache. This is a two-way associative cache. So I actually have two separate memory erase.  And we're going to take a single address from the processor going to break it up into the same pieces. And then we're going to go look. So we take the spot in this case is 0 1 2 3 so the next 3 and both of the caches we fetch two lines at once.  One from each of the array perform to tag check. So we take the tag from here. It is compared to her and also run it over here this comparator and one of these will be a hit. Kashlan sad both be hits that would be an error because it means that we have the same Cash Line in both arrays, which they should never happen. If so send me the cash is working correctly.  Now I have two choices right and now I don't know when we want to choose where to put something in the cash. We can put it either on the left or the right and you can generalize this to as many ways as you want. So this is these to Reliance here for my set and then  the rise and set times for mass at size of this cash is is to  alright 32 special cases that we talked about. The first is the called a fully associative cache and a fully associative cache. The set size is equal to the cache size. So a line can go anywhere in the cash.  And the other one, direct mapped cache where there is officially a one way set associative cache to just one option so they go back here.  What are some disadvantages of having multiple ways in my cash having a two-way cash?  What's bad about it?  I have to do the convocation twice and even worse. I have to read to have to read the two values write a comparison is pretty cheap reading this stuff out of the array is 5 expensive it take a lot of energy to access because they knows what we talked about. Last time is bingo me raising his long wires and so forth. We need to send signals along to get the data out. So you can imagine actually associative is some of the best case I can put a cash on anywhere but it also means I have to read all of the tags in the in the entire cast to see if I have a match direct map is much more efficient because I actually just have to read one tag, but then the person I was going to be quite a bit lower.  So this is an important equation.  Sosie Jose vs. So she is the capacity of the cache a is the level of associativity B is the block size of the cache line size and S is the number of set. So if you take the product of those three things you get the towing capacity of the cash.  American preschool. How convenient that is the upside down here. This is the log of Beast remember be is the number of bytes in my cash line. So if I have a 16x cash then the offset bits are there going to be for offset bits, right? Cuz a log base 2 of 16 is for the index bits as long as the number of sets.  And so this tells me how many bits I need to index into my array. So if I like here this is a bad example because it has five. Let's say it only had two four and six fatally Aziz for a p r i would need two bits, right? Cuz there's four possible locations for me to look.  make a log of the number of steps to get the  how to get the number of index Betts and then the tag bits are the address length minus the offset bit and the block that so the tag is everything else. So if I have a 7 facts and myths I would have 24 bits of tag because my address is R32 this one.  And then conveniently with math. I can just figure out what the index is. I taken the address and dividing by the block size and then taking the mod by the number of steps.  So here is a Clickers.  How much time do we have?  We're not going to do flickers. Sorry cuz I don't have it set up on this laptop. You can click along at home.  Simple example problem. So the L1 data cache on the Athlon 64 is 64 kilobytes is to a 7/64 by block. I will send a memory addresses are 32 bits. So then which of the following is correct? The tag is 17 bits the index of they fit the Austin is 7 bits and the cat has 124 story none of the above.  So take a moment and think about that. When do clicker questions without clickers and then we will discuss it.  All right, so locking your answers in your head.  Your five more seconds to lock in your interest in your head.  Let's go through and do this.  Sorry, I'm 64 kg to a set associative 64-bit block. So we have the first question. So you're the farthest person to the right. When can you see my chalk?  Can you see my truck over here? Alright, so I have this little tiny piece of space.  So what is the capacity?  64 kg  what is the associative Leti?  What is the block size?  And then what is s?  We don't know what else is.  Alright, so this is the other part of the course. It's worth brushing up on your powers of 2.  so  64 and 1 kg is 2 to the 10th useful to know what's 64. What's the log base 2 of 64?  That's right. So this is to the 16 equals two to the one with two days to go to the  to the six  706 are we going to play the power of two game?  Rigo 31st Nest account off and powers of to the people in the back of a really hard time because it takes in like 5 minutes or so. I've been number all right time to the 7th. So this is I asked equals to tonight.  So this equals that 512?  Traffic on 512 so then how many?  How many bits of offset do we need?  6 bits for the offset because that's how we need to name individual bite inside of our inside our cash line. So this is 6 how many index bits do we need?  10  Remember us.  Log, X is the number of an expense.  9 and then how much are TAG?  everything else 17  Hey is the answer?  That makes sense.  All right.  Let's do another one.  so  hair work on this one for a few minutes and then we will go and do the math as well.  All right locking your answers.  so  here is the math.  seagulls ABS again  equals 8 times 64 times 1/6 equals 4 that equals 64  so we offset is going to be log base to a 64 Sixpence you next is going to be six bits. The tag is going to be 20 minutes.  What does that mean? The answer is?  the cast of The Hundred twenty-eight cents  Any questions about that one?  Play recommended gun.  Be there Nexus 6 bits, which of these is not correct.  See I searched up there keep you on your toes. All right, I'm sure why the funk.  T I fix this stuff earlier and I don't know what happened to my changes. All right. All right.  It's not. Alright, so here is the basic pieces. You have a CPU the L1 and L2. So let's talk about what happens on a hit.  I understand how to write allocate policy which is sort of the the default. If I do an access and I break up my address into its constituent pieces the tag heat index in the offset.  And if I find that I have a head, that's great. I updo the right. I have faith that portion of The Cash Line and I keep going to miss.  So what I do.  is  All right. If I do it right? I have a hit a couple of options in cash for the first option is all I can do is call the right through son right through cash. I write to my this cash and then I also write to the next cash down the memory hierarchy is well through the cash. Only alternative is called right back. So right back cast what I do is I do the update to the local cash. I started Dirty Bit. It says I have modified this Cash Line That's All Things lower down in the in the memory hierarchy is Raquel to or vice versa. I can make these decisions individual each of the cash lines what the potential disadvantage of doing a right through cash.  Slow I thought he's a good disadvantage. If I default in this class mail to at least for right traffic and one of the goals of the of the cash is actually to reduce the amount of traffic that flows further down the memory hierarchy. So if you do right through doesn't really reduce that that Ben was very much right back and then we'll see when the right back actually happened something out on a Miss. We have to replace something in the cash, right? So if I'm going to bring in  I know I've tried to start something. I needed to be there in order to modify us. So I have to bring something in that usually means that I have to display something that thing that it displaces is called the victim block.  We're going to find a victim and we're going to kick it out. Now. There are a couple of different options. If it's a direct mapped cache that means there's only one choice because there's only one place that I can put the cash I need to bring in. So I'll just kick out the thing that's in my spot. That's easy. If there are if they if I have enough cash then I have to make a decision and there's a couple of different choices different races that I could make something for least recently used. So I keep track of which most recently recently and I kicked out one that I haven't used in a while.  I'm getting this exactly right turns out to be hard and Hardware it's kind of expensive so you'll be some sort of approximation for lru. So something that I've used, you know, one of the older tagline, they're not that I've seen all this one. You can also do random you can do first in first out so you just pick stuff out of the already brought it in with all sorts of choices. You could make the other thing you have to do is if that cash so if I had a ride back Ashley Market dirty, I also have to write back that day. Because that's the modified version of the event address in to make sure I don't lose its not to send it down the memory hierarchy.  How to bring in the data from the lower layers of the memory hierarchy it comes in as a cash box. I bring a whole cash Block in from the L2 in this case the time it takes to do that is called the missed penalty.  All right.  so  are we going to do here?  So how many of the following statements about right back and right through policies are correct? So he even numbered and there's four of them out how how many of them are correct? I have to pay attention to them and can reduce the number of rights to the lower level of the memory hierarchy. How many how many of you think that is true right back and reduce the number of rights to go farther down the memory hierarchy.  Right. So right back means that when I was going to do a store. I just do it locally and I don't have to propagate the updates downtown is an eviction. So I think number one is true. So at least on B through e is ready answer all the average response time of a right back cash is better than a right through cash.  Should the performance of right-back be better or worse than right through?  Should be better, right cuz I don't have to do the right back further down the memory hierarchy.  I'm going to correct. I may still result in rights if the cash uses are right back policy.  So if I'm right back and I have a read Miss cuz something and I'm getting written in my memory hierarchy.  Yes, right because of the thing I decide to evict his dirty. Then I'll have to write that further down the memory hierarchy to the next level of the cash using right through policy is constant.  Who think that is true?  Pick a question. I think the answer is no because I may or may not incur mrs. Further down the memory hierarchy, right? So if I do it right through to here  If I had a hits are you right? I have a head on a right I hid in the other one. And then the latency of that request is going to depend on whether I hit or miss in the altitude.  I thought I never I never be so it's going to be constant. So that means a three of the four statements are correct.  All right.  We're not going to do this because no one actually does that in real life.  All right.  So so I kind of the same thing and I read a time. That's great so I can use my cash fiction policy to decide which one I'm going to have to ride it back. If it's dirty just like I did before and I have to fetch data from probably on the memory hierarchy.  Basically, I was inside of a substitute because you don't have to do the update.  More about the eviction policies are at the choose which line or going to kick out if we have an associative cache and the choice based on the eviction policy random is actually a pretty good choice reading practice. But almost is a good rule of thumb whenever you're faced with a decision when designing a computer system consider doing things randomly because it's very robust like pathological actually very good for security. Actually. We'll see how this plays out later on in the quarter. How are you is pretty, we talked about that a little while ago is also have a policy called prefer clean. So one thing you could do is you can look at them. I'll have to write it back so I can try to evict something it's clean and that would have laid the the right back penalty.  So this is you want to evict The Cash Line his next uses farthest into the future.  Who thinks they could Implement farther farthest for future use in Hardware because it involves producing the future and this is what you want to do. So if you want to compare how good your cash eviction policy is you can compare it to fry this feature used and it'll tell you like how close are you to the best possible thing that you could do?  This is another number. I talked about how there's been, you know until the papers about Branch Christian every house phones cover way that they can do brunch fiction better. When I went to buy this famous quite old computer architect and he was giving a keynote address of something another and the talk was 2000 papers about Cashes in 2020 Urban. Mm. Mm research papers written about how to manage caches and some fraction of them about eviction policies. So if you have some cool idea about how to do eviction policies more intelligent probably a good idea. I'll probably already been written about  Lewisport all kinds of things variety of ways in parallel compare comparisons and reading the all of the addresses and all the data to the tack Shack limits associativity of Alan Castleman practice to between 2 and you're like us to be higher because it makes the cash payment of a cash it right hire, but if it gets too big and it gets too slow for 5 years ago had an eighth weigh out a 16 way L2 and L3 tivity to be able to in all three can actually be quite a bit higher.  Because I can be quite a bit slower.  I also Francis McClure to which came before and he'll on the L2 is 24 way.  Little tiny text. All right, so that I can cash performance.  Yes. Say it again.  Yeah, that's four. "
}